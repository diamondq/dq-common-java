package {{package}};

{{#imports}}import {{import}};
{{/imports}}

{{#useSwaggerAnnotations}}
import io.swagger.annotations.*;
{{/useSwaggerAnnotations}}

import io.micronaut.http.client.annotation.Client;
import io.micronaut.http.annotation.Consumes;
import io.micronaut.http.annotation.Produces;
import io.micronaut.http.annotation.Get;
import io.micronaut.http.annotation.Options;
import io.micronaut.http.annotation.Post;
import io.micronaut.http.annotation.Put;
import io.micronaut.http.annotation.Delete;
import io.micronaut.http.annotation.QueryValue;
import io.micronaut.http.annotation.PathVariable;
import io.micronaut.http.annotation.Part;
import io.micronaut.http.annotation.Body;
import org.checkerframework.checker.nullness.qual.NonNull;

import java.io.InputStream;
import java.util.List;
import java.util.Map;
import java.util.Optional;
{{#useBeanValidation}}import javax.validation.constraints.*;
import javax.validation.Valid;
import javax.annotation.Nullable;{{/useBeanValidation}}
import com.diamondq.common.injection.micronaut.auth.AuthInfo;

@Client(id="{{serviceDiscoveryId}}", path="{{contextPath}}/{{{baseName}}}"){{#useSwaggerAnnotations}}
@Api(description = "the {{{baseName}}} API"){{/useSwaggerAnnotations}}{{#hasConsumes}}
@Consumes({ {{#consumes}}"{{{mediaType}}}"{{#hasMore}}, {{/hasMore}}{{/consumes}} }){{/hasConsumes}}{{#hasProduces}}
@Produces({ {{#produces}}"{{{mediaType}}}"{{#hasMore}}, {{/hasMore}}{{/produces}} }){{/hasProduces}}
{{>generatedAnnotation}}public {{#interfaceOnly}}interface{{/interfaceOnly}}{{^interfaceOnly}}class{{/interfaceOnly}} {{classname}} {
{{#operations}}
{{#operation}}

{{#interfaceOnly}}{{>apiInterface}}{{/interfaceOnly}}{{^interfaceOnly}}{{>apiMethod}}{{/interfaceOnly}}
{{/operation}}
}
{{/operations}}