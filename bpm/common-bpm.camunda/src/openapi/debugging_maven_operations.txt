[INFO] processOperation: resourcePath=  /authorization	;get class Operation {
    tags: [Authorization]
    summary: null
    description: Queries for a list of authorizations using a list of parameters. The size of the result set can be retrieved by using the Get Authorization Count method.
    externalDocs: null
    operationId: getAuthorizations
    parameters: [class QueryParameter {
        class Parameter {
            name: id
            in: null
            description: Filter by the id of the authorization.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: type
            in: null
            description: Filter by authorization type. (0=global, 1=grant, 2=revoke). See the User Guide for more information about authorization types.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: userIdIn
            in: null
            description: Filter by a comma-separated list of userIds.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: groupIdIn
            in: null
            description: Filter by a comma-separated list of groupIds.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: resourceType
            in: null
            description: Filter by an integer representation of the resource type. See the User Guide for a list of integer representations of resource types.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: resourceId
            in: null
            description: Filter by resource id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: sortBy
            in: null
            description: Sort the results lexicographically by a given criterion. Valid values are resourceType and resourceId. Must be used in conjunction with the sortOrder parameter.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: sortOrder
            in: null
            description: Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: firstResult
            in: null
            description: Pagination of results. Specifies the index of the first result to return.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: maxResults
            in: null
            description: Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/AuthorizationDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET `/authorization?id=abc`
                        description: null
                        value: [{"id":"abc","type":2}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid, for example if a `sortOrder` parameter is supplied,
            but no `sortBy`, or if an invalid operator for variable comparison is used. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /authorization/{id}	;put class Operation {
    tags: [Authorization]
    summary: null
    description: Updates an authorization by id.
    externalDocs: null
    operationId: updateAuthorization
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the authorization to be updated.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/AuthorizationDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: null
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the properties in the request body are invalid, for example if a permission parameter is not valid for the provided resourceType. See the Introduction for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: If the corresponding authorization cannot be found.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /authorization/create	;post class Operation {
    tags: [Authorization]
    summary: null
    description: Creates a new authorization.
    externalDocs: null
    operationId: createAuthorization
    parameters: null
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/AuthorizationDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: null
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/AuthorizationDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET `/authorization?id=abc`
                        description: null
                        value: [{"id":"abc","type":2}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid, for example if a `sortOrder` parameter is supplied,
            but no `sortBy`, or if an invalid operator for variable comparison is used. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /authorization/delete	;delete class Operation {
    tags: [Authorization]
    summary: null
    description: Deletes an authorization by id.
    externalDocs: null
    operationId: deleteAuthorization
    parameters: [class QueryParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the authorization to be deleted.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid, for example if a `sortOrder` parameter is supplied,
            but no `sortBy`, or if an invalid operator for variable comparison is used. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /group	;get class Operation {
    tags: [Group]
    summary: null
    description: Queries for a list of groups using a list of parameters. The size of the result set can be retrieved by using the Get Group Count method.
    externalDocs: null
    operationId: getGroups
    parameters: [class QueryParameter {
        class Parameter {
            name: id
            in: null
            description: Filter by the id of the group.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: idIn
            in: null
            description: Filter by a comma-separated list of group ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: name
            in: null
            description: Filter by the name of the group.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: nameLike
            in: null
            description: Filter by the name that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: type
            in: null
            description: Filter by the type of the group.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: member
            in: null
            description: Only retrieve groups which the given user id is a member of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: memberOfTenant
            in: null
            description: Only retrieve groups which are members of the given tenant.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: sortBy
            in: null
            description: Sort the results lexicographically by a given criterion. Valid values are id, name and type. Must be used in conjunction with the sortOrder parameter.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: sortOrder
            in: null
            description: Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: firstResult
            in: null
            description: Pagination of results. Specifies the index of the first result to return.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: maxResults
            in: null
            description: Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/GroupDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid, for example if a `sortOrder` parameter is supplied,
            but no `sortBy`, or if an invalid operator for variable comparison is used. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /group/create	;post class Operation {
    tags: [Group]
    summary: null
    description: Creates a new group.
    externalDocs: null
    operationId: createGroup
    parameters: null
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/GroupDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: null
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid, for example if a `sortOrder` parameter is supplied,
            but no `sortBy`, or if an invalid operator for variable comparison is used. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /group/delete	;delete class Operation {
    tags: [Group]
    summary: null
    description: Deletes a group by id.
    externalDocs: null
    operationId: deleteGroup
    parameters: [class QueryParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the group to be deleted.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid, for example if a `sortOrder` parameter is supplied,
            but no `sortBy`, or if an invalid operator for variable comparison is used. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /condition	;post class Operation {
    tags: [Condition]
    summary: null
    description: Triggers evaluation of conditions for conditional start event(s). 
    Internally this maps to the engines condition evaluation builder method ConditionEvaluationBuilder#evaluateStartConditions(). 
    For more information see the [Conditional Start Events](https://docs.camunda.org/manual/7.14/reference/bpmn20/events/conditional-events/#conditional-start-event)
    section of the [BPMN 2.0 Implementation Reference](https://docs.camunda.org/manual/7.14/reference/bpmn20/).
    externalDocs: null
    operationId: evaluateCondition
    parameters: null
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/EvaluationConditionDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST /condition
                    description: The content of the Request Body
                    value: {"variables":{"temperature":{"value":24,"type":"Integer","valueInfo":{"transient":true}},"city":{"value":"Parma","type":"String"}},"businessKey":"aBusinessKey","tenantId":"aTenantId"}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/ProcessInstanceDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: The Response content of a status 200
                        value: [{"links":[],"id":"aProcInstId","definitionId":"aProcDefId","businessKey":"aBusinessKey","caseInstanceId":null,"ended":false,"suspended":false,"tenantId":"aTenantId"},{"links":[],"id":"anotherId","definitionId":"aProcDefId","businessKey":"aBusinessKey","caseInstanceId":null,"ended":false,"suspended":false,"tenantId":"aTenantId"}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: If both tenantId and withoutTenantId are supplied.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 403=class ApiResponse {
            description: If the user is not allowed to start the process instance of the process definition, which start condition was evaluated to `true`.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/AuthorizationExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /deployment	;get class Operation {
    tags: [Deployment]
    summary: null
    description: Queries for deployments that fulfill given parameters. Parameters may be the properties of deployments,
    such as the id or name or a range of the deployment time. The size of the result set can be retrieved by
    using the [Get Deployment count](https://docs.camunda.org/manual/7.14/reference/rest/deployment/get-query-count/) method.
    externalDocs: null
    operationId: getDeployments
    parameters: [class QueryParameter {
        class Parameter {
            name: id
            in: null
            description: Filter by deployment id
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: name
            in: null
            description: Filter by the deployment name. Exact match.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: nameLike
            in: null
            description: Filter by the deployment name that the parameter is a substring of. The parameter can include the
            wildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains
            (`%`name`%`).
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: source
            in: null
            description: Filter by the deployment source.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withoutSource
            in: null
            description: Filter by the deployment source whereby source is equal to `null`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: tenantIdIn
            in: null
            description: Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withoutTenantId
            in: null
            description: Only include deployments which belong to no tenant. Value may only be `true`, as `false` is the default
            behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: includeDeploymentsWithoutTenantId
            in: null
            description: Include deployments which belong to no tenant. Can be used in combination with `tenantIdIn`. Value may
            only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: after
            in: null
            description: Restricts to all deployments after the given date.
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format
            `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: before
            in: null
            description: Restricts to all deployments before the given date.
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format
            `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: sortBy
            in: null
            description: Sort the results lexicographically by a given criterion.
            Must be used in conjunction with the sortOrder parameter.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: sortOrder
            in: null
            description: Sort the results in a given order. Values may be asc for ascending order or desc for descending order.
            Must be used in conjunction with the sortBy parameter.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: firstResult
            in: null
            description: Pagination of results. Specifies the index of the first result to return.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: maxResults
            in: null
            description: Pagination of results. Specifies the maximum number of results to return.
            Will return less results if there are no more results left.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/DeploymentDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET `/deployment?name=deploymentName`
                        description: null
                        value: [{"id":"someId","name":"deploymentName","source":"process application","tenantId":null,"deploymentTime":"2013-04-23T13:42:43.000+0200"}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid, for example if a `sortOrder` parameter is supplied,
            but no `sortBy`, or if an invalid operator for variable comparison is used. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /deployment/count	;get class Operation {
    tags: [Deployment]
    summary: null
    description: Queries for the number of deployments that fulfill given parameters. Takes the same parameters as the
    [Get Deployments](https://docs.camunda.org/manual/7.14/reference/rest/deployment/get-query/) method.
    externalDocs: null
    operationId: getDeploymentsCount
    parameters: [class QueryParameter {
        class Parameter {
            name: id
            in: null
            description: Filter by deployment id
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: name
            in: null
            description: Filter by the deployment name. Exact match.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: nameLike
            in: null
            description: Filter by the deployment name that the parameter is a substring of. The parameter can include the
            wildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains
            (`%`name`%`).
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: source
            in: null
            description: Filter by the deployment source.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withoutSource
            in: null
            description: Filter by the deployment source whereby source is equal to `null`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: tenantIdIn
            in: null
            description: Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withoutTenantId
            in: null
            description: Only include deployments which belong to no tenant. Value may only be `true`, as `false` is the default
            behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: includeDeploymentsWithoutTenantId
            in: null
            description: Include deployments which belong to no tenant. Can be used in combination with `tenantIdIn`. Value may
            only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: after
            in: null
            description: Restricts to all deployments after the given date.
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format
            `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: before
            in: null
            description: Restricts to all deployments before the given date.
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format
            `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/CountResultDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: GET `/deployment/count?name=deploymentName`
                        description: null
                        value: {"count":1}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid, for example, if an invalid operator for variable
            comparison is used. See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /deployment/create	;post class Operation {
    tags: [Deployment]
    summary: null
    description: Creates a deployment.
    
    **Security Consideration**
    
    Deployments can contain custom code in form of scripts or EL expressions to customize process behavior.
    This may be abused for remote execution of arbitrary code.
    externalDocs: null
    operationId: createDeployment
    parameters: null
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {multipart/form-data=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/MultiFormDeploymentDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/deployment/create`
                    description: null
                    value: [{"links":[{"method":"GET","href":"http://localhost:38080/rest-test/deployment/aDeploymentId","rel":"self"}],"id":"aDeploymentId","name":"aName","source":"process application","deploymentTime":"2013-01-23T13:59:43.000+0200","tenantId":null,"deployedProcessDefinitions":{"aProcDefId":{"id":"aProcDefId","key":"aKey","category":"aCategory","description":"aDescription","name":"aName","version":42,"resource":"aResourceName","deploymentId":"aDeploymentId","diagram":"aResourceName.png","suspended":true,"tenantId":null,"versionTag":null}},"deployedCaseDefinitions":null,"deployedDecisionDefinitions":null,"deployedDecisionRequirementsDefinitions":null}]
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/DeploymentWithDefinitionsDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request. In case one of the bpmn resources cannot be parsed.
            
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#parse-exceptions) for
            the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ParseExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: GET /deployment?name=deploymentName
                        description: null
                        value: [{"type":"ParseException","message":"ENGINE-09005 Could not parse BPMN process. Errors: Exclusive Gateway 'ExclusiveGateway_1' has outgoing sequence flow 'SequenceFlow_0' without condition which is not the default flow.","details":{"invoice.bpmn":{"errors":[{"message":"Exclusive Gateway 'ExclusiveGateway_1' has outgoing sequence flow 'SequenceFlow_0' without condition which is not the default flow.","line":77,"column":15,"mainBpmnElementId":"ExclusiveGateway_1","bpmnElementIds":["ExclusiveGateway_1","SequenceFlow_0"]}],"warnings":[{"message":"It is not recommended to use a cancelling boundary timer event with a time cycle.","line":87,"column":20,"mainBpmnElementId":"BoundaryEvent_1","bpmnElementIds":["BoundaryEvent_1"]}]}}}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /deployment/{id}	;get class Operation {
    tags: [Deployment]
    summary: null
    description: Retrieves a deployment by id, according to the `Deployment` interface of the engine.
    externalDocs: null
    operationId: getDeployment
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the deployment.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/DeploymentDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET `/deployments/someDeploymentId`
                        description: null
                        value: {"id":"someDeploymentId","name":"deploymentName","source":"process application","deploymentTime":"2013-04-23T13:42:43.000+0200"}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Deployment with given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /deployment/{id}	;delete class Operation {
    tags: [Deployment]
    summary: null
    description: Deletes a deployment by id.
    externalDocs: null
    operationId: deleteDeployment
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the deployment to be deleted.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class QueryParameter {
        class Parameter {
            name: cascade
            in: null
            description: `true`, if all process instances, historic process instances and jobs for this deployment
            should be deleted.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: skipCustomListeners
            in: null
            description: `true`, if only the built-in ExecutionListeners should be notified with the end event.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: skipIoMappings
            in: null
            description: `true`, if all input/output mappings should not be invoked.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: A Deployment with the provided id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /deployment/{id}/redeploy	;post class Operation {
    tags: [Deployment]
    summary: null
    description: Re-deploys an existing deployment.
    
    The deployment resources to re-deploy can be restricted by using the properties `resourceIds` or
    `resourceNames`. If no deployment resources to re-deploy are passed then all existing resources of the
    given deployment are re-deployed.
    
    **Warning**: Deployments can contain custom code in form of scripts or EL expressions to customize
    process behavior. This may be abused for remote execution of arbitrary code. See the section on
    [security considerations for custom code](https://docs.camunda.org/manual/7.14/user-guide/process-engine/securing-custom-code/) in
    the user guide for details.
    externalDocs: null
    operationId: redeploy
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the deployment to re-deploy.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/RedeploymentDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/deployment/anDeploymentId/redeploy`
                    description: null
                    value: {"resourceIds":["aResourceId"],"resourceNames":["aResourceName"],"source":"cockpit"}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/DeploymentWithDefinitionsDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: null
                        value: {"links":[{"method":"GET","href":"http://localhost:38080/rest-test/deployment/aDeploymentId","rel":"self"}],"id":"aDeploymentId","name":"aName","source":"cockpit","deploymentTime":"2015-10-13T13:59:43.000+0200","tenantId":null,"deployedProcessDefinitions":{"aProcDefId":{"id":"aProcDefId","key":"aKey","category":"aCategory","description":"aDescription","name":"aName","version":42,"resource":"aResourceName","deploymentId":"aDeploymentId","diagram":"aResourceName.png","suspended":true,"tenantId":null,"versionTag":null}},"deployedCaseDefinitions":null,"deployedDecisionDefinitions":null,"deployedDecisionRequirementsDefinitions":null}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Deployment or a deployment resource for the given deployment does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /deployment/{id}/resources	;get class Operation {
    tags: [Deployment]
    summary: null
    description: Retrieves all deployment resources of a given deployment.
    externalDocs: null
    operationId: getDeploymentResources
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the deployment to retrieve the deployment resources for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/DeploymentResourceDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET `/deployment/anDeploymentId/resources`
                        description: null
                        value: [{"id":"anResourceId","name":"anResourceName","deploymentId":"anDeploymentId"},{"id":"anotherResourceId","name":"anotherResourceName","deploymentId":"anDeploymentId"}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Deployment resources for the given deployment do not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /deployment/{id}/resources/{resourceId}	;get class Operation {
    tags: [Deployment]
    summary: null
    description: Retrieves a deployment resource by resource id for the given deployment.
    externalDocs: null
    operationId: getDeploymentResource
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the deployment
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: resourceId
            in: null
            description: The id of the deployment resource
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/DeploymentResourceDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: GET `/deployments/someDeploymentId/resources/someResourceId`
                        description: null
                        value: {"id":"someResourceId","name":"someResourceName","deploymentId":"someDeploymentId"}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Deployment Resource with given resource id or deployment id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /deployment/{id}/resources/{resourceId}/data	;get class Operation {
    tags: [Deployment]
    summary: null
    description: Retrieves the binary content of a deployment resource for the given deployment by id.
    externalDocs: null
    operationId: getDeploymentResourceData
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the deployment.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: resourceId
            in: null
            description: The id of the deployment resource.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful. The media type of the response depends on the filename.
            headers: null
            content: class Content {
                {application/octet-stream=class MediaType {
                    schema: class BinarySchema {
                        class Schema {
                            type: string
                            format: binary
                            $ref: null
                            description: For files without any MIME type information, a byte stream is returned.
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: null
                    example: null
                    encoding: null
                }, */*=class MediaType {
                    schema: class BinarySchema {
                        class Schema {
                            type: string
                            format: binary
                            $ref: null
                            description: Files with MIME type information are returned as the saved type. For example, a
                                                        `process.bpmn` resource will have the media type `application/xml`.
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Deployment Resource with given resource id or deployment id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Multiple schemas found in the OAS 'content' section, returning only the first one (application/octet-stream)
[WARNING] Multiple schemas found in the OAS 'content' section, returning only the first one (application/octet-stream)
[INFO] processOperation: resourcePath=  /engine	;get class Operation {
    tags: [Engine]
    summary: null
    description: Retrieves the names of all process engines available on your platform.
    **Note**: You cannot prepend `/engine/{name}` to this method.
    externalDocs: null
    operationId: getProcessEngineNames
    parameters: null
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/ProcessEngineDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: null
                        description: null
                        value: [{"name":"default"},{"name":"anotherEngineName"}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /event-subscription	;get class Operation {
    tags: [Event Subscription]
    summary: null
    description: Queries for event subscriptions that fulfill given parameters.
    The size of the result set can be retrieved by using the
    [Get Event Subscriptions count](https://docs.camunda.org/manual/7.14/reference/rest/event-subscription/get-query-count/) method.
    externalDocs: null
    operationId: getEventSubscriptions
    parameters: [class QueryParameter {
        class Parameter {
            name: eventSubscriptionId
            in: null
            description: Only select subscription with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: eventName
            in: null
            description: Only select subscriptions for events with the given name.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: eventType
            in: null
            description: Only select subscriptions for events with the given type.
            Valid values: `message`, `signal`, `compensate` and `conditional`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: executionId
            in: null
            description: Only select subscriptions that belong to an execution with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceId
            in: null
            description: Only select subscriptions that belong to a process instance with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: activityId
            in: null
            description: Only select subscriptions that belong to an activity with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: tenantIdIn
            in: null
            description: Filter by a comma-separated list of tenant ids.
            Only select subscriptions that belong to one of the given tenant ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withoutTenantId
            in: null
            description: Only select subscriptions which have no tenant id.
            Value may only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: includeEventSubscriptionsWithoutTenantId
            in: null
            description: Select event subscriptions which have no tenant id.
            Can be used in combination with tenantIdIn parameter.
            Value may only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: sortBy
            in: null
            description: Sort the results lexicographically by a given criterion.
            Must be used in conjunction with the sortOrder parameter.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: sortOrder
            in: null
            description: Sort the results in a given order. Values may be asc for ascending order or desc for descending order.
            Must be used in conjunction with the sortBy parameter.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: firstResult
            in: null
            description: Pagination of results. Specifies the index of the first result to return.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: maxResults
            in: null
            description: Pagination of results. Specifies the maximum number of results to return.
            Will return less results if there are no more results left.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/EventSubscriptionDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET `/event-subscription?eventType=message&sortBy=created&sortOrder=desc`
                        description: null
                        value: [{"id":"anId","eventType":"message","eventName":"anEventName","executionId":"anExecutionId","processInstanceId":"aProcessInstanceId","activityId":"anActivityId","createdDate":"2020-04-20T15:23:12.229+0200","tenantId":null},{"id":"anotherId","eventType":"message","eventName":"anotherEventName","executionId":"anotherExecutionId","processInstanceId":"anotherProcessInstanceId","activityId":"anotherActivityId","createdDate":"2020-04-20T15:20:12.229+0200","tenantId":null}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            Returned if some of the query parameters are invalid,
            for example if a `sortOrder` parameter is supplied, but no `sortBy`.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /event-subscription/count	;get class Operation {
    tags: [Event Subscription]
    summary: null
    description: Queries for the number of event subscriptions that fulfill given parameters.
    Takes the same parameters as the
    [Get Event Subscriptions](https://docs.camunda.org/manual/7.14/reference/rest/event-subscription/get-query/) method.
    externalDocs: null
    operationId: getEventSubscriptionsCount
    parameters: [class QueryParameter {
        class Parameter {
            name: eventSubscriptionId
            in: null
            description: Only select subscription with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: eventName
            in: null
            description: Only select subscriptions for events with the given name.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: eventType
            in: null
            description: Only select subscriptions for events with the given type.
            Valid values: `message`, `signal`, `compensate` and `conditional`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: executionId
            in: null
            description: Only select subscriptions that belong to an execution with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceId
            in: null
            description: Only select subscriptions that belong to a process instance with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: activityId
            in: null
            description: Only select subscriptions that belong to an activity with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: tenantIdIn
            in: null
            description: Filter by a comma-separated list of tenant ids.
            Only select subscriptions that belong to one of the given tenant ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withoutTenantId
            in: null
            description: Only select subscriptions which have no tenant id.
            Value may only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: includeEventSubscriptionsWithoutTenantId
            in: null
            description: Select event subscriptions which have no tenant id.
            Can be used in combination with tenantIdIn parameter.
            Value may only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/CountResultDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: GET `/event-subscription/count`
                        description: null
                        value: {"count":1}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /external-task	;get class Operation {
    tags: [External Task]
    summary: null
    description: Queries for the external tasks that fulfill given parameters. Parameters may be static as well as dynamic
    runtime properties of executions. The size of the result set can be retrieved by using the
    [Get External Task Count](https://docs.camunda.org/manual/7.14/reference/rest/external-task/get-query-count/) method.
    externalDocs: null
    operationId: getExternalTasks
    parameters: [class QueryParameter {
        class Parameter {
            name: externalTaskId
            in: null
            description: Filter by an external task's id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: externalTaskIdIn
            in: null
            description: Filter by the comma-separated list of external task ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: topicName
            in: null
            description: Filter by an external task topic.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: workerId
            in: null
            description: Filter by the id of the worker that the task was most recently locked by.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: locked
            in: null
            description: Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired).
            Value may only be `true`, as `false` matches any external task.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: notLocked
            in: null
            description: Only include external tasks that are currently not locked (i.e., they have no lock or it has expired).
            Value may only be `true`, as `false` matches any external task.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withRetriesLeft
            in: null
            description: Only include external tasks that have a positive (&gt; 0) number of retries (or `null`). Value may only be
            `true`, as `false` matches any external task.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: noRetriesLeft
            in: null
            description: Only include external tasks that have 0 retries. Value may only be `true`, as `false` matches any
            external task.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: lockExpirationAfter
            in: null
            description: Restrict to external tasks that have a lock that expires after a given date. By
            [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format
            `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: lockExpirationBefore
            in: null
            description: Restrict to external tasks that have a lock that expires before a given date. By
            [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format
            `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: activityId
            in: null
            description: Filter by the id of the activity that an external task is created for.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: activityIdIn
            in: null
            description: Filter by the comma-separated list of ids of the activities that an external task is created for.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: executionId
            in: null
            description: Filter by the id of the execution that an external task belongs to.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceId
            in: null
            description: Filter by the id of the process instance that an external task belongs to.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceIdIn
            in: null
            description: Filter by a comma-separated list of process instance ids that an external task may belong to.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionId
            in: null
            description: Filter by the id of the process definition that an external task belongs to.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: tenantIdIn
            in: null
            description: Filter by a comma-separated list of tenant ids.
            An external task must have one of the given tenant ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: active
            in: null
            description: Only include active tasks. Value may only be `true`, as `false` matches any external task.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: suspended
            in: null
            description: Only include suspended tasks. Value may only be `true`, as `false` matches any external task.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: priorityHigherThanOrEquals
            in: null
            description: Only include jobs with a priority higher than or equal to the given value.
            Value must be a valid `long` value.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: int64
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: priorityLowerThanOrEquals
            in: null
            description: Only include jobs with a priority lower than or equal to the given value.
            Value must be a valid `long` value.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: int64
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: sortBy
            in: null
            description: Sort the results lexicographically by a given criterion.
            Must be used in conjunction with the sortOrder parameter.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: sortOrder
            in: null
            description: Sort the results in a given order. Values may be asc for ascending order or desc for descending order.
            Must be used in conjunction with the sortBy parameter.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: firstResult
            in: null
            description: Pagination of results. Specifies the index of the first result to return.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: maxResults
            in: null
            description: Pagination of results. Specifies the maximum number of results to return.
            Will return less results if there are no more results left.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/ExternalTaskDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET /external-task?topicName=aTopic
                        description: null
                        value: [{"activityId":"anActivityId","activityInstanceId":"anActivityInstanceId","errorMessage":"anErrorMessage","executionId":"anExecutionId","id":"anExternalTaskId","lockExpirationTime":"2015-10-06T16:34:42.000+0200","processDefinitionId":"aProcessDefinitionId","processDefinitionKey":"aProcessDefinitionKey","processInstanceId":"aProcessInstanceId","tenantId":null,"retries":3,"suspended":false,"workerId":"aWorkerId","topicName":"aTopic","priority":9,"businessKey":"aBusinessKey"},{"activityId":"anotherActivityId","activityInstanceId":"anotherActivityInstanceId","errorMessage":"anotherErrorMessage","executionId":"anotherExecutionId","id":"anotherExternalTaskId","lockExpirationTime":"2015-10-06T16:34:42.000+0200","processDefinitionId":"anotherProcessDefinitionId","processDefinitionKey":"anotherProcessDefinitionKey","processInstanceId":"anotherProcessInstanceId","tenantId":null,"retries":1,"suspended":false,"workerId":"aWorkerId","topicName":"aTopic","priority":3,"businessKey":"aBusinessKey"}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid, for example if a `sortOrder` parameter is supplied,
            but no `sortBy`. See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /external-task	;post class Operation {
    tags: [External Task]
    summary: null
    description: Queries for external tasks that fulfill given parameters in the form of a JSON object.
    
    This method is slightly more powerful than the
    [Get External Tasks](https://docs.camunda.org/manual/7.14/reference/rest/external-task/get-query/) method because it allows to
    specify a hierarchical result sorting.
    externalDocs: null
    operationId: queryExternalTasks
    parameters: [class QueryParameter {
        class Parameter {
            name: firstResult
            in: null
            description: Pagination of results. Specifies the index of the first result to return.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: maxResults
            in: null
            description: Pagination of results. Specifies the maximum number of results to return.
            Will return less results if there are no more results left.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/ExternalTaskQueryDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST /external-task
                    description: null
                    value: {"processDefinitionId":"aProcessDefinitionId","sorting":[{"sortBy":"processDefinitionKey","sortOrder":"asc"},{"sortBy":"lockExpirationTime","sortOrder":"desc"}]}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful. The Response is a JSON array of external task objects.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/ExternalTaskDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: null
                        value: [{"activityId":"anActivityId","activityInstanceId":"anActivityInstanceId","errorMessage":"anErrorMessage","executionId":"anExecutionId","id":"anExternalTaskId","lockExpirationTime":"2015-10-06T16:34:42.000+0200","processDefinitionId":"aProcessDefinitionId","processDefinitionKey":"aProcessDefinitionKey","processInstanceId":"aProcessInstanceId","tenantId":null,"retries":3,"suspended":false,"workerId":"aWorkerId","topicName":"aTopic","priority":9,"businessKey":"aBusinessKey"},{"activityId":"anotherActivityId","activityInstanceId":"anotherActivityInstanceId","errorMessage":"anotherErrorMessage","executionId":"anotherExecutionId","id":"anotherExternalTaskId","lockExpirationTime":"2015-10-06T16:34:42.000+0200","processDefinitionId":"aProcessDefinitionId","processDefinitionKey":"anotherProcessDefinitionKey","processInstanceId":"anotherProcessInstanceId","tenantId":null,"retries":1,"suspended":false,"workerId":"aWorkerId","topicName":"aTopic","priority":3,"businessKey":"aBusinessKey"}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid, for example if a `sortOrder` parameter is supplied,
            but no `sortBy`. See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /external-task/count	;get class Operation {
    tags: [External Task]
    summary: null
    description: Queries for the number of external tasks that fulfill given parameters. Takes the same parameters as the
    [Get External Tasks](https://docs.camunda.org/manual/7.14/reference/rest/external-task/get-query/) method.
    externalDocs: null
    operationId: getExternalTasksCount
    parameters: [class QueryParameter {
        class Parameter {
            name: externalTaskId
            in: null
            description: Filter by an external task's id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: externalTaskIdIn
            in: null
            description: Filter by the comma-separated list of external task ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: topicName
            in: null
            description: Filter by an external task topic.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: workerId
            in: null
            description: Filter by the id of the worker that the task was most recently locked by.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: locked
            in: null
            description: Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired).
            Value may only be `true`, as `false` matches any external task.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: notLocked
            in: null
            description: Only include external tasks that are currently not locked (i.e., they have no lock or it has expired).
            Value may only be `true`, as `false` matches any external task.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withRetriesLeft
            in: null
            description: Only include external tasks that have a positive (&gt; 0) number of retries (or `null`). Value may only be
            `true`, as `false` matches any external task.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: noRetriesLeft
            in: null
            description: Only include external tasks that have 0 retries. Value may only be `true`, as `false` matches any
            external task.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: lockExpirationAfter
            in: null
            description: Restrict to external tasks that have a lock that expires after a given date. By
            [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format
            `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: lockExpirationBefore
            in: null
            description: Restrict to external tasks that have a lock that expires before a given date. By
            [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format
            `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: activityId
            in: null
            description: Filter by the id of the activity that an external task is created for.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: activityIdIn
            in: null
            description: Filter by the comma-separated list of ids of the activities that an external task is created for.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: executionId
            in: null
            description: Filter by the id of the execution that an external task belongs to.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceId
            in: null
            description: Filter by the id of the process instance that an external task belongs to.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceIdIn
            in: null
            description: Filter by a comma-separated list of process instance ids that an external task may belong to.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionId
            in: null
            description: Filter by the id of the process definition that an external task belongs to.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: tenantIdIn
            in: null
            description: Filter by a comma-separated list of tenant ids.
            An external task must have one of the given tenant ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: active
            in: null
            description: Only include active tasks. Value may only be `true`, as `false` matches any external task.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: suspended
            in: null
            description: Only include suspended tasks. Value may only be `true`, as `false` matches any external task.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: priorityHigherThanOrEquals
            in: null
            description: Only include jobs with a priority higher than or equal to the given value.
            Value must be a valid `long` value.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: int64
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: priorityLowerThanOrEquals
            in: null
            description: Only include jobs with a priority lower than or equal to the given value.
            Value must be a valid `long` value.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: int64
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/CountResultDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: GET /external-task/count?topicName=aTopic
                        description: null
                        value: {"count":42}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /external-task/count	;post class Operation {
    tags: [External Task]
    summary: null
    description: Queries for the number of external tasks that fulfill given parameters. This method takes the same message
    body as the [Get External Tasks (POST)](https://docs.camunda.org/manual/7.14/reference/rest/external-task/post-query/) method.
    externalDocs: null
    operationId: queryExternalTasksCount
    parameters: null
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/ExternalTaskQueryDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST /external-task/count
                    description: null
                    value: {"topicName":"aTopicName","withRetriesLeft":true}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/CountResultDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: null
                        value: {"count":1}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /external-task/fetchAndLock	;post class Operation {
    tags: [External Task]
    summary: null
    description: Fetches and locks a specific number of external tasks for execution by a worker. Query can be restricted
    to specific task topics and for each task topic an individual lock time can be provided.
    externalDocs: null
    operationId: fetchAndLock
    parameters: null
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/FetchExternalTasksDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST /external-task/fetchAndLock (1)
                    description: Request with variable filtering
                    value: {"workerId":"aWorkerId","maxTasks":2,"usePriority":true,"topics":[{"topicName":"createOrder","lockDuration":10000,"variables":["orderId"]}]}
                    externalValue: null
                    $ref: null
                }, example-2=class Example {
                    summary: POST /external-task/fetchAndLock (2)
                    description: Request with all variables included
                    value: {"workerId":"aWorkerId","maxTasks":2,"usePriority":true,"topics":[{"topicName":"createOrder","lockDuration":10000,"processDefinitionId":"aProcessDefinitionId","tenantIdIn":"tenantOne"}]}
                    externalValue: null
                    $ref: null
                }, example-3=class Example {
                    summary: POST /external-task/fetchAndLock (3)
                    description: Request with includeExtensionProperties
                    value: {"workerId":"aWorkerId","maxTasks":1,"usePriority":true,"topics":[{"topicName":"createOrder","lockDuration":10000,"includeExtensionProperties":true}]}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/LockedExternalTaskDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: POST /external-task/fetchAndLock (1)
                        description: Request with variable filtering
                        value: [{"activityId":"anActivityId","activityInstanceId":"anActivityInstanceId","errorMessage":"anErrorMessage","errorDetails":"anErrorDetails","executionId":"anExecutionId","id":"anExternalTaskId","lockExpirationTime":"2015-10-06T16:34:42.000+0200","processDefinitionId":"aProcessDefinitionId","processDefinitionKey":"aProcessDefinitionKey","processInstanceId":"aProcessInstanceId","tenantId":null,"retries":3,"workerId":"aWorkerId","priority":4,"topicName":"createOrder","variables":{"orderId":{"type":"String","value":"1234","valueInfo":{}}}},{"activityId":"anActivityId","activityInstanceId":"anActivityInstanceId","errorMessage":"anErrorMessage","errorDetails":"anotherErrorDetails","executionId":"anExecutionId","id":"anExternalTaskId","lockExpirationTime":"2015-10-06T16:34:42.000+0200","processDefinitionId":"aProcessDefinitionId","processDefinitionKey":"aProcessDefinitionKey","processInstanceId":"aProcessInstanceId","tenantId":null,"retries":3,"workerId":"aWorkerId","priority":0,"topicName":"createOrder","variables":{"orderId":{"type":"String","value":"3456","valueInfo":{}}}}]
                        externalValue: null
                        $ref: null
                    }, example-2=class Example {
                        summary: POST /external-task/fetchAndLock (2)
                        description: Request with all variables included
                        value: [{"activityId":"anActivityId","activityInstanceId":"anActivityInstanceId","errorMessage":"anErrorMessage","errorDetails":"anErrorDetails","executionId":"anExecutionId","id":"anExternalTaskId","lockExpirationTime":"2015-10-06T16:34:42.00+0200","processDefinitionId":"aProcessDefinitionId","processDefinitionKey":"aProcessDefinitionKey","processInstanceId":"aProcessInstanceId","tenantId":"tenantOne","retries":3,"workerId":"aWorkerId","priority":4,"topicName":"createOrder","businessKey":"aBusinessKey","variables":{"orderId":{"type":"String","value":"1234","valueInfo":{}}}},{"activityId":"anActivityId","activityInstanceId":"anActivityInstanceId","errorMessage":"anErrorMessage","errorDetails":"anotherErrorDetails","executionId":"anExecutionId","id":"anExternalTaskId","lockExpirationTime":"2015-10-06T16:34:42.000+0200","processDefinitionId":"aProcessDefinitionId","processDefinitionKey":"aProcessDefinitionKey","processInstanceId":"aProcessInstanceId","tenantId":null,"retries":3,"workerId":"aWorkerId","priority":0,"topicName":"createOrder","businessKey":"aBusinessKey","variables":{"orderId":{"type":"String","value":"3456","valueInfo":{}}}}]
                        externalValue: null
                        $ref: null
                    }, example-3=class Example {
                        summary: POST /external-task/fetchAndLock (3)
                        description: Request with includeExtensionProperties
                        value: [{"activityId":"anActivityId","activityInstanceId":"anActivityInstanceId","errorMessage":"anErrorMessage","errorDetails":"anErrorDetails","executionId":"anExecutionId","id":"anExternalTaskId","lockExpirationTime":"2015-10-06T16:34:42.000+0200","processDefinitionId":"aProcessDefinitionId","processDefinitionKey":"aProcessDefinitionKey","processInstanceId":"aProcessInstanceId","retries":null,"suspended":false,"workerId":"aWorkerId","topicName":"createOrder","tenantId":null,"variables":{},"priority":0,"businessKey":"default","extensionProperties":{"property2":"value2","property1":"value1"}}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /external-task/retries	;put class Operation {
    tags: [External Task]
    summary: null
    description: Sets the number of retries left to execute external tasks by id synchronously. If retries are set to 0, 
    an incident is created.
    externalDocs: null
    operationId: setExternalTaskRetries
    parameters: null
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/SetRetriesForExternalTasksDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: PUT /external-task/retries
                    description: null
                    value: {"retries":123,"externalTaskIds":["anExternalTask","anotherExternalTask"]}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: In case the number of retries is negative or null, an exception of type `InvalidRequestException` is
            returned. See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Returned if the task does not exist. This could indicate a wrong task id as well as a cancelled task, 
            e.g., due to a caught BPMN boundary event. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /external-task/retries-async	;post class Operation {
    tags: [External Task]
    summary: null
    description: Sets the number of retries left to execute external tasks by id asynchronously. If retries are set to 0,
    an incident is created.
    externalDocs: null
    operationId: setExternalTaskRetriesAsyncOperation
    parameters: null
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/SetRetriesForExternalTasksDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST /external-task/retries-async
                    description: null
                    value: {"retries":123,"externalTaskIds":["anExternalTask","anotherExternalTask"]}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/BatchDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: null
                        value: {"id":"aBatchId","type":"aBatchType","totalJobs":10,"jobsCreated":10,"batchJobsPerSeed":100,"invocationsPerBatchJob":1,"seedJobDefinitionId":"aSeedJobDefinitionId","monitorJobDefinitionId":"aMonitorJobDefinitionId","batchJobDefinitionId":"aBatchJobDefinitionId","tenantId":"aTenantId","suspended":false,"createUserId":"demo"}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: If neither externalTaskIds nor externalTaskQuery are present or externalTaskIds contains null value or 
            the number of retries is negative or null, an exception of type `InvalidRequestException` is returned.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Returned if the task does not exist. This could indicate a wrong task id as well as a cancelled task, 
            e.g., due to a caught BPMN boundary event. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /external-task/topic-names	;get class Operation {
    tags: [External Task]
    summary: null
    description: Queries for distinct topic names of external tasks that fulfill given parameters.
    Query can be restricted to only tasks with retries left, tasks that are locked, or tasks
    that are unlocked. The parameters withLockedTasks and withUnlockedTasks are
    exclusive. Setting them both to true will return an empty list.
    Providing no parameters will return a list of all distinct topic names with external tasks.
    externalDocs: null
    operationId: getTopicNames
    parameters: [class QueryParameter {
        class Parameter {
            name: withLockedTasks
            in: null
            description: Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired).
            Value may only be `true`, as `false` matches any external task.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withUnlockedTasks
            in: null
            description: Only include external tasks that are currently not locked (i.e., they have no lock or it has expired).
            Value may only be `true`, as `false` matches any external task.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withRetriesLeft
            in: null
            description: Only include external tasks that have a positive (&gt; 0) number of retries (or `null`). Value may only be
            `true`, as `false` matches any external task.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class StringSchema {
                            class Schema {
                                type: string
                                format: null
                                $ref: null
                                description: null
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                not: null
                                properties: null
                                additionalProperties: null
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET /external-task/topic-names?withLockedTasks
                        description: null
                        value: ["topic-a","topic-b","topic-c"]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: null
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /external-task/{id}	;get class Operation {
    tags: [External Task]
    summary: null
    description: Retrieves an external task by id, corresponding to the `ExternalTask` interface in the engine.
    externalDocs: null
    operationId: getExternalTask
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the external task to be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExternalTaskDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: GET /external-task/anExternalTaskId
                        description: null
                        value: {"activityId":"anActivityId","activityInstanceId":"anActivityInstanceId","errorMessage":"anErrorMessage","executionId":"anExecutionId","id":"anExternalTaskId","lockExpirationTime":"2015-10-06T16:34:42.000+0200","processDefinitionId":"aProcessDefinitionId","processDefinitionKey":"aProcessDefinitionKey","processInstanceId":"aProcessInstanceId","tenantId":null,"retries":3,"suspended":false,"workerId":"aWorkerId","priority":0,"topicName":"aTopic","businessKey":"aBusinessKey"}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: External task with the given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /external-task/{id}/bpmnError	;post class Operation {
    tags: [External Task]
    summary: null
    description: Reports a business error in the context of a running external task by id. The error code must be specified
    to identify the BPMN error handler.
    externalDocs: null
    operationId: handleExternalTaskBpmnError
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the external task in which context a BPMN error is reported.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/ExternalTaskBpmnError
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST /external-task/anId/bpmnError
                    description: null
                    value: {"workerId":"aWorker","errorCode":"bpmn-error","errorMessage":"anErrorMessage","variables":{"aVariable":{"value":"aStringValue","type":"String"},"anotherVariable":{"value":true,"type":"Boolean"}}}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if the task's most recent lock was not acquired by the provided worker.
            
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Returned if the task does not exist. This could indicate a wrong task id as well as a cancelled task,
            e.g., due to a caught BPMN boundary event.
            
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: Returned if the corresponding process instance could not be resumed successfully.
            
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /external-task/{id}/complete	;post class Operation {
    tags: [External Task]
    summary: null
    description: Completes an external task by id and updates process variables.
    externalDocs: null
    operationId: completeExternalTaskResource
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to complete.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/CompleteExternalTaskDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST /external-task/anId/complete
                    description: null
                    value: {"workerId":"aWorker","variables":{"aVariable":{"value":"aStringValue"},"anotherVariable":{"value":42},"aThirdVariable":{"value":true}},"localVariables":{"aLocalVariable":{"value":"aStringValue"}}}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if the task's most recent lock was not acquired by the provided worker. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Returned if the task does not exist. This could indicate a wrong task id as well as a cancelled task,
            e.g., due to a caught BPMN boundary event. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: Returned if the corresponding process instance could not be resumed successfully. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /external-task/{id}/errorDetails	;get class Operation {
    tags: [External Task]
    summary: null
    description: Retrieves the error details in the context of a running external task by id.
    externalDocs: null
    operationId: getExternalTaskErrorDetails
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the external task for which the error details should be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {text/plain=class MediaType {
                    schema: class StringSchema {
                        class Schema {
                            type: string
                            format: null
                            $ref: null
                            description: The error details for the external task.
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: null
                        description: null
                        value: org.apache.ibatis.jdbc.RuntimeSqlException: org.apache.ibatis.jdbc.RuntimeSqlException: test cause
                                          at org.camunda.bpm.engine.test.api.externaltask.ExternalTaskServiceTest.testHandleFailureWithErrorDetails(ExternalTaskServiceTest.java:1424)
                                          at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
                                          at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
                                          at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                        
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 204=class ApiResponse {
            description: Request successful. In case the external task has no error details.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: An external task with the given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /external-task/{id}/extendLock	;post class Operation {
    tags: [External Task]
    summary: null
    description: Extends the timeout of the lock by a given amount of time.
    externalDocs: null
    operationId: extendLock
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the external task.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/ExtendLockOnExternalTaskDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST /external-task/anId/extendLock
                    description: null
                    value: {"workerId":"anId","newDuration":100000}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: In case the new lock duration is negative or the external task is not locked by the given worker or not 
            locked at all, an exception of type `InvalidRequestException` is returned. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Returned if the task does not exist. This could indicate a wrong task id as well as a cancelled task,
            e.g., due to a caught BPMN boundary event. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /external-task/{id}/failure	;post class Operation {
    tags: [External Task]
    summary: null
    description: Reports a failure to execute an external task by id. A number of retries and a timeout until the task can
    be retried can be specified. If retries are set to 0, an incident for this task is created.
    externalDocs: null
    operationId: handleFailure
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the external task to report a failure for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/ExternalTaskFailureDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST /external-task/anId/failure
                    description: null
                    value: {"workerId":"aWorker","errorMessage":"Does not compute","retries":3,"retryTimeout":60000}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if the task's most recent lock was not acquired by the provided worker. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Returned if the task does not exist. This could indicate a wrong task id as well as a cancelled task,
            e.g., due to a caught BPMN boundary event. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: Returned if the corresponding process instance could not be resumed successfully. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /external-task/{id}/priority	;put class Operation {
    tags: [External Task]
    summary: null
    description: Sets the priority of an existing external task by id. The default value of a priority is 0.
    externalDocs: null
    operationId: setExternalTaskResourcePriority
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the external task to set the priority for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/PriorityDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: PUT /external-task/anId/priority
                    description: null
                    value: {"priority":5}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Returned if the task does not exist. This could indicate a wrong task id as well as a cancelled task,
            e.g., due to a caught BPMN boundary event. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /external-task/{id}/retries	;put class Operation {
    tags: [External Task]
    summary: null
    description: Sets the number of retries left to execute an external task by id. If retries are set to 0, an 
    incident is created.
    externalDocs: null
    operationId: setExternalTaskResourceRetries
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the external task to set the number of retries for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/RetriesDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: PUT /external-task/anId/retries
                    description: null
                    value: {"retries":123}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if the task does not exist. This could indicate a wrong task id as well as a cancelled task,
            e.g., due to a caught BPMN boundary event. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: In case the number of retries is negative or null, an exception of type `InvalidRequestException`
            is returned. See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /external-task/{id}/unlock	;post class Operation {
    tags: [External Task]
    summary: null
    description: Unlocks an external task by id. Clears the task's lock expiration time and worker id.
    externalDocs: null
    operationId: unlock
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the external task to unlock.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Returned if the task does not exist. This could indicate a wrong task id as well as a cancelled task,
            e.g., due to a caught BPMN boundary event. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /history/activity-instance	;get class Operation {
    tags: [Historic Activity Instance]
    summary: Get List
    description: Queries for historic activity instances that fulfill the given parameters.
    The size of the result set can be retrieved by using the
    [Get Historic Activity Instance Count](https://docs.camunda.org/manual/7.14/reference/rest/history/activity-instance/get-activity-instance-query-count/) method.
    externalDocs: null
    operationId: getHistoricActivityInstances
    parameters: [class QueryParameter {
        class Parameter {
            name: sortBy
            in: null
            description: Sort the results lexicographically by a given criterion.
            Must be used in conjunction with the sortOrder parameter.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: sortOrder
            in: null
            description: Sort the results in a given order. Values may be asc for ascending order or desc for descending order.
            Must be used in conjunction with the sortBy parameter.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: firstResult
            in: null
            description: Pagination of results. Specifies the index of the first result to return.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: maxResults
            in: null
            description: Pagination of results. Specifies the maximum number of results to return.
            Will return less results if there are no more results left.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: activityInstanceId
            in: null
            description: Filter by activity instance id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceId
            in: null
            description: Filter by process instance id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionId
            in: null
            description: Filter by process definition id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: executionId
            in: null
            description: Filter by the id of the execution that executed the activity instance.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: activityId
            in: null
            description: Filter by the activity id (according to BPMN 2.0 XML).
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: activityName
            in: null
            description: Filter by the activity name (according to BPMN 2.0 XML).
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: activityType
            in: null
            description: Filter by activity type.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: taskAssignee
            in: null
            description: Only include activity instances that are user tasks and assigned to a given user.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: finished
            in: null
            description: Only include finished activity instances.
            Value may only be `true`, as `false` behaves the same as when the property is not set.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: unfinished
            in: null
            description: Only include unfinished activity instances.
            Value may only be `true`, as `false` behaves the same as when the property is not set.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: canceled
            in: null
            description: Only include canceled activity instances.
            Value may only be `true`, as `false` behaves the same as when the property is not set.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: completeScope
            in: null
            description: Only include activity instances which completed a scope.
            Value may only be `true`, as `false` behaves the same as when the property is not set.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: startedBefore
            in: null
            description: Restrict to instances that were started before the given date. By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/),
            the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: startedAfter
            in: null
            description: Restrict to instances that were started after the given date. By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/),
            the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: finishedBefore
            in: null
            description: Restrict to instances that were finished before the given date. By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/),
            the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: finishedAfter
            in: null
            description: Restrict to instances that were finished after the given date. By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/),
            the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: tenantIdIn
            in: null
            description: Filter by a comma-separated list of ids. An activity instance must have one of the given tenant ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withoutTenantId
            in: null
            description: Only include historic activity instances that belong to no tenant. Value may only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/HistoricActivityInstanceDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 response
                        description: Response for GET `/history/activity-instance?activityType=userTask&taskAssignee=peter`
                        value: [{"activityId":"anActivity","activityName":"anActivityName","activityType":"userTask","assignee":"peter","calledProcessInstanceId":"aHistoricCalledProcessInstanceId","calledCaseInstanceId":null,"canceled":true,"completeScope":false,"durationInMillis":2000,"endTime":"2013-04-23T18:42:43.000+0200","executionId":"anExecutionId","id":"aHistoricActivityInstanceId","parentActivityInstanceId":"aHistoricParentActivityInstanceId","processDefinitionId":"aProcDefId","processInstanceId":"aProcInstId","startTime":"2013-04-23T11:20:43.000+0200","taskId":"aTaskId","tenantId":null,"removalTime":"2018-02-10T14:33:19.000+0200","rootProcessInstanceId":"aRootProcessInstanceId"}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            Returned if some of the query parameters are invalid, for example if a sortOrder parameter is supplied, but no sortBy.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /history/activity-instance	;post class Operation {
    tags: [Historic Activity Instance]
    summary: Get List (POST)
    description: Queries for historic activity instances that fulfill the given parameters.
    The size of the result set can be retrieved by using the
    [Get Historic Activity Instance Count](https://docs.camunda.org/manual/7.14/reference/rest/history/activity-instance/get-activity-instance-query-count/) method.
    externalDocs: null
    operationId: queryHistoricActivityInstances
    parameters: [class QueryParameter {
        class Parameter {
            name: firstResult
            in: null
            description: Pagination of results. Specifies the index of the first result to return.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: maxResults
            in: null
            description: Pagination of results. Specifies the maximum number of results to return.
            Will return less results if there are no more results left.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/HistoricActivityInstanceQueryDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/history/activity-instance`
                    description: null
                    value: {"activityType":"userTask","taskAssignee":"peter","sorting":[{"sortBy":"activityId","sortOrder":"asc"},{"sortBy":"executionId","sortOrder":"desc"}]}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/HistoricActivityInstanceDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response 1
                        description: null
                        value: [{"activityId":"anActivity","activityName":"anActivityName","activityType":"userTask","assignee":"peter","calledProcessInstanceId":"aHistoricCalledProcessInstanceId","calledCaseInstanceId":null,"canceled":true,"completeScope":false,"durationInMillis":2000,"endTime":"2013-04-23T18:42:43.000+0200","executionId":"anExecutionId","id":"aHistoricActivityInstanceId","parentActivityInstanceId":"aHistoricParentActivityInstanceId","processDefinitionId":"aProcDefId","processInstanceId":"aProcInstId","startTime":"2013-04-23T11:20:43.000+0200","taskId":"aTaskId","tenantId":null,"removalTime":"2018-02-10T14:33:19.000+0200","rootProcessInstanceId":"aRootProcessInstanceId"}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            Returned if some of the query parameters are invalid, for example if a sortOrder parameter is supplied, but no sortBy.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /history/activity-instance/count	;get class Operation {
    tags: [Historic Activity Instance]
    summary: Get List Count
    description: Queries for the number of historic activity instances that fulfill the given parameters.
    Takes the same parameters as the [Get Historic Activity Instance](https://docs.camunda.org/manual/7.14/reference/rest/history/activity-instance/get-activity-instance-query/)  method.
    externalDocs: null
    operationId: getHistoricActivityInstancesCount
    parameters: [class QueryParameter {
        class Parameter {
            name: activityInstanceId
            in: null
            description: Filter by activity instance id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceId
            in: null
            description: Filter by process instance id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionId
            in: null
            description: Filter by process definition id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: executionId
            in: null
            description: Filter by the id of the execution that executed the activity instance.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: activityId
            in: null
            description: Filter by the activity id (according to BPMN 2.0 XML).
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: activityName
            in: null
            description: Filter by the activity name (according to BPMN 2.0 XML).
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: activityType
            in: null
            description: Filter by activity type.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: taskAssignee
            in: null
            description: Only include activity instances that are user tasks and assigned to a given user.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: finished
            in: null
            description: Only include finished activity instances.
            Value may only be `true`, as `false` behaves the same as when the property is not set.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: unfinished
            in: null
            description: Only include unfinished activity instances.
            Value may only be `true`, as `false` behaves the same as when the property is not set.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: canceled
            in: null
            description: Only include canceled activity instances.
            Value may only be `true`, as `false` behaves the same as when the property is not set.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: completeScope
            in: null
            description: Only include activity instances which completed a scope.
            Value may only be `true`, as `false` behaves the same as when the property is not set.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: startedBefore
            in: null
            description: Restrict to instances that were started before the given date. By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/),
            the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: startedAfter
            in: null
            description: Restrict to instances that were started after the given date. By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/),
            the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: finishedBefore
            in: null
            description: Restrict to instances that were finished before the given date. By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/),
            the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: finishedAfter
            in: null
            description: Restrict to instances that were finished after the given date. By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/),
            the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: tenantIdIn
            in: null
            description: Filter by a comma-separated list of ids. An activity instance must have one of the given tenant ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withoutTenantId
            in: null
            description: Only include historic activity instances that belong to no tenant. Value may only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/CountResultDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 response
                        description: Response for GET `/history/activity-instance/count?activityType=userTask`
                        value: {"count":1}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            Returned if some of the query parameters are invalid.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /history/activity-instance/count	;post class Operation {
    tags: [Historic Activity Instance]
    summary: Get List Count (POST)
    description: Queries for the number of historic activity instances that fulfill the given parameters.
    externalDocs: null
    operationId: queryHistoricActivityInstancesCount
    parameters: null
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/HistoricActivityInstanceQueryDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/history/activity-instance/count`
                    description: null
                    value: {"activityType":"userTask"}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/CountResultDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response 1
                        description: null
                        value: {"count":1}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            Returned if some of the query parameters are invalid.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /history/activity-instance/{id}	;get class Operation {
    tags: [Historic Activity Instance]
    summary: Get
    description: Retrieves a historic activity instance by id, according to the `HistoricActivityInstance` interface in the engine.
    externalDocs: null
    operationId: getHistoricActivityInstance
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the historic activity instance to be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/HistoricActivityInstanceDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: GET `/history/activity-instance/aActivityInstId`
                        description: null
                        value: {"id":"aActivityInstId","activityId":"anActivity","activityName":"anActivityName","activityType":"userTask","assignee":"peter","calledProcessInstanceId":"aHistoricCalledProcessInstanceId","calledCaseInstanceId":null,"canceled":true,"completeScope":false,"durationInMillis":2000,"endTime":"2013-04-23T18:42:43.000+0200","executionId":"anExecutionId","parentActivityInstanceId":"aHistoricParentActivityInstanceId","processDefinitionId":"aProcDefId","processInstanceId":"aProcInstId","startTime":"2013-04-23T11:20:43.000+0200","taskId":"aTaskId","tenantId":null,"removalTime":"2018-02-10T14:33:19.000+0200","rootProcessInstanceId":"aRootProcessInstanceId"}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Not Found
            Historic activity instance with given id does not exist.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /history/process-instance	;get class Operation {
    tags: [Historic Process Instance]
    summary: Get List
    description: Queries for historic process instances that fulfill the given parameters.
    The size of the result set can be retrieved by using the
    [Get Process Instance Count](https://docs.camunda.org/manual/7.14/reference/rest/history/process-instance/get-process-instance-query-count/) method.
    externalDocs: null
    operationId: getHistoricProcessInstances
    parameters: [class QueryParameter {
        class Parameter {
            name: sortBy
            in: null
            description: Sort the results lexicographically by a given criterion.
            Must be used in conjunction with the sortOrder parameter.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: sortOrder
            in: null
            description: Sort the results in a given order. Values may be asc for ascending order or desc for descending order.
            Must be used in conjunction with the sortBy parameter.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: firstResult
            in: null
            description: Pagination of results. Specifies the index of the first result to return.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: maxResults
            in: null
            description: Pagination of results. Specifies the maximum number of results to return.
            Will return less results if there are no more results left.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceId
            in: null
            description: Filter by process instance id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceIds
            in: null
            description: Filter by process instance ids. Filter by a comma-separated list of `Strings`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionId
            in: null
            description: Filter by the process definition the instances run on.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionKey
            in: null
            description: Filter by the key of the process definition the instances run on.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionKeyIn
            in: null
            description: Filter by a list of process definition keys. A process instance must have one of the given process definition keys. Filter by a comma-separated list of `Strings`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionName
            in: null
            description: Filter by the name of the process definition the instances run on.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionNameLike
            in: null
            description: Filter by process definition names that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionKeyNotIn
            in: null
            description: Exclude instances that belong to a set of process definitions. Filter by a comma-separated list of `Strings`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceBusinessKey
            in: null
            description: Filter by process instance business key.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceBusinessKeyLike
            in: null
            description: Filter by process instance business key that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: rootProcessInstances
            in: null
            description: Restrict the query to all process instances that are top level process instances.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: finished
            in: null
            description: Only include finished process instances. Value may only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: unfinished
            in: null
            description: Only include unfinished process instances. Value may only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withIncidents
            in: null
            description: Only include process instances which have an incident. Value may only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withRootIncidents
            in: null
            description: Only include process instances which have a root incident. Value may only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentType
            in: null
            description: Filter by the incident type. See the [User Guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/incidents/#incident-types) for a list of incident types.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentStatus
            in: null
            description: Only include process instances which have an incident in status either open or resolved. To get all process instances, use the query parameter withIncidents.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentMessage
            in: null
            description: Filter by the incident message. Exact match.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentMessageLike
            in: null
            description: Filter by the incident message that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: startedBefore
            in: null
            description: Restrict to instances that were started before the given date.
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: startedAfter
            in: null
            description: Restrict to instances that were started after the given date.
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: finishedBefore
            in: null
            description: Restrict to instances that were finished before the given date.
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: finishedAfter
            in: null
            description: Restrict to instances that were finished after the given date.
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: executedActivityAfter
            in: null
            description: Restrict to instances that executed an activity after the given date (inclusive).
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: executedActivityBefore
            in: null
            description: Restrict to instances that executed an activity before the given date (inclusive).
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: executedJobAfter
            in: null
            description: Restrict to instances that executed an job after the given date (inclusive).
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: executedJobBefore
            in: null
            description: Restrict to instances that executed an job before the given date (inclusive).
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: startedBy
            in: null
            description: Only include process instances that were started by the given user.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: superProcessInstanceId
            in: null
            description: Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: subProcessInstanceId
            in: null
            description: Restrict query to one process instance that has a sub process instance with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: superCaseInstanceId
            in: null
            description: Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: subCaseInstanceId
            in: null
            description: Restrict query to one process instance that has a sub case instance with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: caseInstanceId
            in: null
            description: Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: tenantIdIn
            in: null
            description: Filter by a list of tenant ids. A process instance must have one of the given tenant ids. Filter by a comma-separated list of `Strings`
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withoutTenantId
            in: null
            description: Only include historic process instances which belong to no tenant. Value may only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: executedActivityIdIn
            in: null
            description: Restrict to instances that executed an activity with one of given ids. Filter by a comma-separated list of `Strings`
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: activeActivityIdIn
            in: null
            description: Restrict to instances that have an active activity with one of given ids. Filter by a comma-separated list of `Strings`
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: active
            in: null
            description: Restrict to instances that are active.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: suspended
            in: null
            description: Restrict to instances that are suspended.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: completed
            in: null
            description: Restrict to instances that are completed.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: externallyTerminated
            in: null
            description: Restrict to instances that are externallyTerminated.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: internallyTerminated
            in: null
            description: Restrict to instances that are internallyTerminated.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: variables
            in: null
            description: Only include process instances that have/had variables with certain values.
            Variable filtering expressions are comma-separated and are structured as follows:
            A valid parameter value has the form `key_operator_value`. `key` is the variable name, `operator` is the comparison operator to be used and `value` the variable value.
            
            **Note:** Values are always treated as String objects on server side.
            
            Valid operator values are: `eq` - equal to; `neq` - not equal to; `gt` - greater than; `gteq` - greater than or equal to; `lt` - lower than; `lteq` - lower than or equal to; `like`.
            
            Key and value may not contain underscore or comma characters.
            
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: variableNamesIgnoreCase
            in: null
            description: Match all variable names provided in variables case-insensitively. If set to `true` variableName and variablename are treated as equal.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: variableValuesIgnoreCase
            in: null
            description: Match all variable values provided in variables case-insensitively. If set to `true` variableValue and variablevalue are treated as equal.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/HistoricProcessInstanceDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 response
                        description: Response for GET `/history/process-instance?finishedAfter=2013-01-01T00:00:00.000%2b0200&finishedBefore=2013-04-01T23:59:59.000%2b0200&executedActivityAfter=2013-03-23T13:42:44.000%2b0200`
                        value: [{"id":"7c80cc8f-ef95-11e6-b6e6-34f39ab71d4e","businessKey":null,"processDefinitionId":"invoice:1:7bf79f13-ef95-11e6-b6e6-34f39ab71d4e","processDefinitionKey":"invoice","processDefinitionName":"Invoice Receipt","processDefinitionVersion":1,"startTime":"2017-02-10T14:33:19.000+0200","endTime":null,"removalTime":null,"durationInMillis":null,"startUserId":null,"startActivityId":"StartEvent_1","deleteReason":null,"rootProcessInstanceId":"f8259e5d-ab9d-11e8-8449-e4a7a094a9d6","superProcessInstanceId":null,"superCaseInstanceId":null,"caseInstanceId":null,"tenantId":null,"state":"ACTIVE"}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            Returned if some of the query parameters are invalid, for example if a sortOrder parameter is supplied, but no sortBy.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /history/process-instance	;post class Operation {
    tags: [Historic Process Instance]
    summary: Get List (POST)
    description: Queries for historic process instances that fulfill the given parameters.
    This method is slightly more powerful than the
    [Get Process Instance](https://docs.camunda.org/manual/7.14/reference/rest/history/process-instance/get-process-instance-query/)
    because it allows filtering by multiple process variables of types `String`, `Number` or `Boolean`.
    externalDocs: null
    operationId: queryHistoricProcessInstances
    parameters: [class QueryParameter {
        class Parameter {
            name: firstResult
            in: null
            description: Pagination of results. Specifies the index of the first result to return.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: maxResults
            in: null
            description: Pagination of results. Specifies the maximum number of results to return.
            Will return less results if there are no more results left.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/HistoricProcessInstanceQueryDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/history/process-instance`
                    description: null
                    value: {"finishedAfter":"2013-01-01T00:00:00.000+0200","finishedBefore":"2013-04-01T23:59:59.000+0200","executedActivityAfter":"2013-03-23T13:42:44.000+0200","variables":[{"name":"myVariable","operator":"eq","value":"camunda"},{"name":"mySecondVariable","operator":"neq","value":124}],"sorting":[{"sortBy":"businessKey","sortOrder":"asc"},{"sortBy":"startTime","sortOrder":"desc"}]}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/HistoricProcessInstanceDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 response
                        description: Response for POST `/history/process-instance`
                        value: [{"id":"7c80cc8f-ef95-11e6-b6e6-34f39ab71d4e","businessKey":null,"processDefinitionId":"invoice:1:7bf79f13-ef95-11e6-b6e6-34f39ab71d4e","processDefinitionKey":"invoice","processDefinitionName":"Invoice Receipt","processDefinitionVersion":1,"startTime":"2017-02-10T14:33:19.000+0200","endTime":null,"removalTime":null,"durationInMillis":null,"startUserId":null,"startActivityId":"StartEvent_1","deleteReason":null,"rootProcessInstanceId":"f8259e5d-ab9d-11e8-8449-e4a7a094a9d6","superProcessInstanceId":null,"superCaseInstanceId":null,"caseInstanceId":null,"tenantId":null,"state":"ACTIVE"}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            Returned if some of the query parameters are invalid, for example if a sortOrder parameter is supplied, but no sortBy.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /history/process-instance/count	;get class Operation {
    tags: [Historic Process Instance]
    summary: Get List Count
    description: Queries for the number of historic process instances that fulfill the given parameters.
    Takes the same parameters as the [Get Process Instances](https://docs.camunda.org/manual/7.14/reference/rest/history/process-instance/get-process-instance-query/) method.
    externalDocs: null
    operationId: getHistoricProcessInstancesCount
    parameters: [class QueryParameter {
        class Parameter {
            name: processInstanceId
            in: null
            description: Filter by process instance id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceIds
            in: null
            description: Filter by process instance ids. Filter by a comma-separated list of `Strings`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionId
            in: null
            description: Filter by the process definition the instances run on.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionKey
            in: null
            description: Filter by the key of the process definition the instances run on.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionKeyIn
            in: null
            description: Filter by a list of process definition keys. A process instance must have one of the given process definition keys. Filter by a comma-separated list of `Strings`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionName
            in: null
            description: Filter by the name of the process definition the instances run on.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionNameLike
            in: null
            description: Filter by process definition names that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionKeyNotIn
            in: null
            description: Exclude instances that belong to a set of process definitions. Filter by a comma-separated list of `Strings`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceBusinessKey
            in: null
            description: Filter by process instance business key.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceBusinessKeyLike
            in: null
            description: Filter by process instance business key that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: rootProcessInstances
            in: null
            description: Restrict the query to all process instances that are top level process instances.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: finished
            in: null
            description: Only include finished process instances. Value may only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: unfinished
            in: null
            description: Only include unfinished process instances. Value may only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withIncidents
            in: null
            description: Only include process instances which have an incident. Value may only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withRootIncidents
            in: null
            description: Only include process instances which have a root incident. Value may only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentType
            in: null
            description: Filter by the incident type. See the [User Guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/incidents/#incident-types) for a list of incident types.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentStatus
            in: null
            description: Only include process instances which have an incident in status either open or resolved. To get all process instances, use the query parameter withIncidents.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentMessage
            in: null
            description: Filter by the incident message. Exact match.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentMessageLike
            in: null
            description: Filter by the incident message that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: startedBefore
            in: null
            description: Restrict to instances that were started before the given date.
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: startedAfter
            in: null
            description: Restrict to instances that were started after the given date.
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: finishedBefore
            in: null
            description: Restrict to instances that were finished before the given date.
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: finishedAfter
            in: null
            description: Restrict to instances that were finished after the given date.
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: executedActivityAfter
            in: null
            description: Restrict to instances that executed an activity after the given date (inclusive).
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: executedActivityBefore
            in: null
            description: Restrict to instances that executed an activity before the given date (inclusive).
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: executedJobAfter
            in: null
            description: Restrict to instances that executed an job after the given date (inclusive).
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: executedJobBefore
            in: null
            description: Restrict to instances that executed an job before the given date (inclusive).
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: startedBy
            in: null
            description: Only include process instances that were started by the given user.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: superProcessInstanceId
            in: null
            description: Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: subProcessInstanceId
            in: null
            description: Restrict query to one process instance that has a sub process instance with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: superCaseInstanceId
            in: null
            description: Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: subCaseInstanceId
            in: null
            description: Restrict query to one process instance that has a sub case instance with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: caseInstanceId
            in: null
            description: Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: tenantIdIn
            in: null
            description: Filter by a list of tenant ids. A process instance must have one of the given tenant ids. Filter by a comma-separated list of `Strings`
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withoutTenantId
            in: null
            description: Only include historic process instances which belong to no tenant. Value may only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: executedActivityIdIn
            in: null
            description: Restrict to instances that executed an activity with one of given ids. Filter by a comma-separated list of `Strings`
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: activeActivityIdIn
            in: null
            description: Restrict to instances that have an active activity with one of given ids. Filter by a comma-separated list of `Strings`
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: active
            in: null
            description: Restrict to instances that are active.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: suspended
            in: null
            description: Restrict to instances that are suspended.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: completed
            in: null
            description: Restrict to instances that are completed.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: externallyTerminated
            in: null
            description: Restrict to instances that are externallyTerminated.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: internallyTerminated
            in: null
            description: Restrict to instances that are internallyTerminated.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: variables
            in: null
            description: Only include process instances that have/had variables with certain values.
            Variable filtering expressions are comma-separated and are structured as follows:
            A valid parameter value has the form `key_operator_value`. `key` is the variable name, `operator` is the comparison operator to be used and `value` the variable value.
            
            **Note:** Values are always treated as String objects on server side.
            
            Valid operator values are: `eq` - equal to; `neq` - not equal to; `gt` - greater than; `gteq` - greater than or equal to; `lt` - lower than; `lteq` - lower than or equal to; `like`.
            
            Key and value may not contain underscore or comma characters.
            
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: variableNamesIgnoreCase
            in: null
            description: Match all variable names provided in variables case-insensitively. If set to `true` variableName and variablename are treated as equal.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: variableValuesIgnoreCase
            in: null
            description: Match all variable values provided in variables case-insensitively. If set to `true` variableValue and variablevalue are treated as equal.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/CountResultDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 response
                        description: Response for GET `/history/process-instance/count?variables=myVariable_eq_camunda`
                        value: {"count":1}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            Returned if some of the query parameters are invalid.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /history/process-instance/count	;post class Operation {
    tags: [Historic Process Instance]
    summary: Get List Count (POST)
    description: Queries for the number of historic process instances that fulfill the given parameters.
    This method takes the same message body as the [Get Process Instances (POST)](https://docs.camunda.org/manual/7.14/reference/rest/history/process-instance/get-process-instance-query/) method and
    therefore it is slightly more powerful than the [Get Process Instance Count](https://docs.camunda.org/manual/7.14/reference/rest/history/process-instance/post-process-instance-query-count/) method.
    externalDocs: null
    operationId: queryHistoricProcessInstancesCount
    parameters: null
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/HistoricProcessInstanceQueryDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/history/process-instance/count`
                    description: null
                    value: {"finishedAfter":"2013-01-01T00:00:00.000+0200","finishedBefore":"2013-04-01T23:59:59.000+0200","executedActivityAfter":"2013-03-23T13:42:44.000+0200","variables":[{"name":"myVariable","operator":"eq","value":"camunda"},{"name":"mySecondVariable","operator":"neq","value":124}]}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/CountResultDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response 1
                        description: null
                        value: {"count":1}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            Returned if some of the query parameters are invalid.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /history/process-instance/delete	;post class Operation {
    tags: [Historic Process Instance]
    summary: Delete Async (POST)
    description: Delete multiple historic process instances asynchronously (batch).
    At least `historicProcessInstanceIds` or `historicProcessInstanceQuery` has to be provided.
    If both are provided then all instances matching query criterion and instances from the list will be deleted.
    externalDocs: null
    operationId: deleteHistoricProcessInstancesAsync
    parameters: null
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/DeleteHistoricProcessInstancesDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/history/process-instance/delete`
                    description: null
                    value: {"deleteReason":"aReason","historicProcessInstanceIds":["aProcess","secondProcess"],"historicProcessInstanceQuery":{"startedAfter":"2016-10-11T11:44:13.000+0200","finishedBefore":"2016-10-13T11:44:17.000+0200"}}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/BatchDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 response
                        description: Response for POST `/history/process-instance/delete`
                        value: {"id":"120b568d-724a-11e9-98b7-be5e0f7575b7","type":"process-set-removal-time","totalJobs":12,"batchJobsPerSeed":100,"invocationsPerBatchJob":1,"seedJobDefinitionId":"120b5690-724a-11e9-98b7-be5e0f7575b7","monitorJobDefinitionId":"120b568f-724a-11e9-98b7-be5e0f7575b7","batchJobDefinitionId":"120b568e-724a-11e9-98b7-be5e0f7575b7","tenantId":"accounting","suspended":false,"createUserId":null}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid, i.e. neither historicProcessInstanceIds,
            nor historicProcessInstanceQuery is present. See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /history/process-instance/report	;get class Operation {
    tags: [Historic Process Instance]
    summary: Get Duration Report
    description: Retrieves a report about the duration of completed process instances, grouped by a period.
    These reports include the maximum, minimum and average duration of all completed process instances which were started in a given period.
    
    **Note:** This only includes historic data.
    externalDocs: null
    operationId: getHistoricProcessInstanceDurationReport
    parameters: [class QueryParameter {
        class Parameter {
            name: reportType
            in: null
            description: **Mandatory.** Specifies the type of the report to retrieve.
            To retrieve a report about the duration of process instances, the value must be set to `duration`.
            required: true
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: periodUnit
            in: null
            description: **Mandatory.** Specifies the granularity of the report. Valid values are `month` and `quarter`.
            required: true
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionIdIn
            in: null
            description: Filter by process definition ids. Must be a comma-separated list of process definition ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionKeyIn
            in: null
            description: Filter by process definition keys. Must be a comma-separated list of process definition keys.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: startedBefore
            in: null
            description: Restrict to instances that were started before the given date.
            By [default](), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2016-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: startedAfter
            in: null
            description: Restrict to instances that were started after the given date.
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2016-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful. In case of an expected text/csv response to retrieve the result as a csv file.
            headers: null
            content: class Content {
                {text/csv=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: null
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid or mandatory parameters are not supplied.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 403=class ApiResponse {
            description: If the authenticated user is unauthorized to read the history.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /history/process-instance/set-removal-time	;post class Operation {
    tags: [Historic Process Instance]
    summary: Set Removal Time Async (POST)
    description: Sets the removal time to multiple historic process instances asynchronously (batch).
    
    At least `historicProcessInstanceIds` or `historicProcessInstanceQuery` has to be provided.
    If both are provided, all instances matching query criterion and instances from the list will be updated with a removal time.
    externalDocs: null
    operationId: setRemovalTimeAsync
    parameters: null
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/SetRemovalTimeToHistoricProcessInstancesDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/history/process-instance/set-removal-time`
                    description: null
                    value: {"absoluteRemovalTime":"2019-05-05T11:56:24.725+0200","hierarchical":true,"historicProcessInstanceQuery":{"unfinished":true},"historicProcessInstanceIds":["b4d2ad98-7240-11e9-98b7-be5e0f7575b7","b4d2ad94-7240-11e9-98b7-be5e0f7575b7"]}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/BatchDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 response
                        description: Response for POST `/history/process-instance/set-removal-time`
                        value: {"id":"120b568d-724a-11e9-98b7-be5e0f7575b7","type":"process-set-removal-time","totalJobs":12,"batchJobsPerSeed":100,"invocationsPerBatchJob":1,"seedJobDefinitionId":"120b5690-724a-11e9-98b7-be5e0f7575b7","monitorJobDefinitionId":"120b568f-724a-11e9-98b7-be5e0f7575b7","batchJobDefinitionId":"120b568e-724a-11e9-98b7-be5e0f7575b7","tenantId":"accounting","suspended":false,"createUserId":null}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            Request was unsuccessfull due to a bad user request. This occurs if some of the query parameters are invalid,
            e. g. if neither `historicProcessInstances` nor `historicProcessInstanceQuery` is present or if no mode is specified.
            
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /history/process-instance/{id}	;get class Operation {
    tags: [Historic Process Instance]
    summary: Get
    description: Retrieves a historic process instance by id, according to the `HistoricProcessInstance` interface in the engine.
    externalDocs: null
    operationId: getHistoricProcessInstance
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the historic process instance to be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/HistoricProcessInstanceDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: GET `/history/process-instance/7c80cc8f-ef95-11e6-b6e6-34f39ab71d4e`
                        description: null
                        value: {"id":"7c80cc8f-ef95-11e6-b6e6-34f39ab71d4e","businessKey":null,"processDefinitionId":"invoice:1:7bf79f13-ef95-11e6-b6e6-34f39ab71d4e","processDefinitionKey":"invoice","processDefinitionName":"Invoice Receipt","processDefinitionVersion":1,"startTime":"2017-02-10T14:33:19.000+0200","endTime":null,"removalTime":null,"durationInMillis":null,"startUserId":null,"startActivityId":"StartEvent_1","deleteReason":null,"rootProcessInstanceId":"f8259e5d-ab9d-11e8-8449-e4a7a094a9d6","superProcessInstanceId":null,"superCaseInstanceId":null,"caseInstanceId":null,"tenantId":null,"state":"ACTIVE"}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Not Found
            Historic process instance with given id does not exist.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /history/process-instance/{id}	;delete class Operation {
    tags: [Historic Process Instance]
    summary: Delete
    description: Deletes a process instance from the history by id.
    externalDocs: null
    operationId: deleteHistoricProcessInstance
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the historic process instance to be deleted.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class QueryParameter {
        class Parameter {
            name: failIfNotExists
            in: null
            description: If set to `false`, the request will still be successful if the process id is not found.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Not found
            Historic process instance with given id does not exist.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /history/process-instance/{id}/variable-instances	;delete class Operation {
    tags: [Historic Process Instance]
    summary: Delete Variable Instances
    description: Deletes all variables of a process instance from the history by id.
    externalDocs: null
    operationId: deleteHistoricVariableInstancesOfHistoricProcessInstance
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process instance for which all historic variables are to be deleted.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Not found
            Historic process instance with given id does not exist.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#parse-exceptions) for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /incident	;get class Operation {
    tags: [Incident]
    summary: Get List
    description: Queries for incidents that fulfill given parameters. The size of the result set can be retrieved by using
    the [Get Incident Count](https://docs.camunda.org/manual/7.14/reference/rest/incident/get-query-count/) method.
    externalDocs: null
    operationId: getIncidents
    parameters: [class QueryParameter {
        class Parameter {
            name: incidentId
            in: null
            description: Restricts to incidents that have the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentType
            in: null
            description: Restricts to incidents that belong to the given incident type. See the
            [User Guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/incidents/#incident-types) for a list of incident
            types.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentMessage
            in: null
            description: Restricts to incidents that have the given incident message.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentMessageLike
            in: null
            description: Restricts to incidents that incidents message is a substring of the given value. The string can include
            the wildcard character '%' to express like-strategy: starts with (`string%`), ends with (`%string`) or
            contains (`%string%`).
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionId
            in: null
            description: Restricts to incidents that belong to a process definition with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionKeyIn
            in: null
            description: Restricts to incidents that belong to a process definition with the given keys. Must be a
            comma-separated list.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceId
            in: null
            description: Restricts to incidents that belong to a process instance with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: executionId
            in: null
            description: Restricts to incidents that belong to an execution with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentTimestampBefore
            in: null
            description: Restricts to incidents that have an incidentTimestamp date before the given date. By default, the date
            must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentTimestampAfter
            in: null
            description: Restricts to incidents that have an incidentTimestamp date after the given date. By default*, the date
            must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: activityId
            in: null
            description: Restricts to incidents that belong to an activity with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: failedActivityId
            in: null
            description: Restricts to incidents that were created due to the failure of an activity with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: causeIncidentId
            in: null
            description: Restricts to incidents that have the given incident id as cause incident.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: rootCauseIncidentId
            in: null
            description: Restricts to incidents that have the given incident id as root cause incident.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: configuration
            in: null
            description: Restricts to incidents that have the given parameter set as configuration.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: tenantIdIn
            in: null
            description: Restricts to incidents that have one of the given comma-separated tenant ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: jobDefinitionIdIn
            in: null
            description: Restricts to incidents that have one of the given comma-separated job definition ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: sortBy
            in: null
            description: Sort the results lexicographically by a given criterion.
            Must be used in conjunction with the sortOrder parameter.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: sortOrder
            in: null
            description: Sort the results in a given order. Values may be asc for ascending order or desc for descending order.
            Must be used in conjunction with the sortBy parameter.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/IncidentDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET `/incident/anIncidentId`
                        description: null
                        value: [{"id":"anIncidentId","processDefinitionId":"aProcDefId","processInstanceId":"aProcInstId","executionId":"anExecutionId","incidentTimestamp":"2014-03-01T08:00:00.000+0200","incidentType":"failedJob","activityId":"serviceTask","failedActivityId":"serviceTask","causeIncidentId":"aCauseIncidentId","rootCauseIncidentId":"aRootCauseIncidentId","configuration":"aConfiguration","tenantId":null,"incidentMessage":"anIncidentMessage","jobDefinitionId":"aJobDefinitionId"},{"id":"anIncidentId","processDefinitionId":"aProcDefId","processInstanceId":"aProcInstId","executionId":"anotherExecutionId","incidentTimestamp":"2014-03-01T09:00:00.000+0200","incidentType":"customIncidentType","activityId":"userTask","failedActivityId":"userTask","causeIncidentId":"anotherCauseIncidentId","rootCauseIncidentId":"anotherRootCauseIncidentId","configuration":"anotherConfiguration","tenantId":null,"incidentMessage":"anotherIncidentMessage","jobDefinitionId":null}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid, for example if a `sortOrder` parameter is supplied,
            but no `sortBy`. See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for the error
            response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /incident/count	;get class Operation {
    tags: [Incident]
    summary: Get List Count
    description: Queries for the number of incidents that fulfill given parameters. Takes the same parameters as the
    [Get Incidents](https://docs.camunda.org/manual/7.14/reference/rest/incident/get-query/) method.
    externalDocs: null
    operationId: getIncidentsCount
    parameters: [class QueryParameter {
        class Parameter {
            name: incidentId
            in: null
            description: Restricts to incidents that have the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentType
            in: null
            description: Restricts to incidents that belong to the given incident type. See the
            [User Guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/incidents/#incident-types) for a list of incident
            types.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentMessage
            in: null
            description: Restricts to incidents that have the given incident message.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentMessageLike
            in: null
            description: Restricts to incidents that incidents message is a substring of the given value. The string can include
            the wildcard character '%' to express like-strategy: starts with (`string%`), ends with (`%string`) or
            contains (`%string%`).
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionId
            in: null
            description: Restricts to incidents that belong to a process definition with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionKeyIn
            in: null
            description: Restricts to incidents that belong to a process definition with the given keys. Must be a
            comma-separated list.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceId
            in: null
            description: Restricts to incidents that belong to a process instance with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: executionId
            in: null
            description: Restricts to incidents that belong to an execution with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentTimestampBefore
            in: null
            description: Restricts to incidents that have an incidentTimestamp date before the given date. By default, the date
            must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentTimestampAfter
            in: null
            description: Restricts to incidents that have an incidentTimestamp date after the given date. By default*, the date
            must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: activityId
            in: null
            description: Restricts to incidents that belong to an activity with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: failedActivityId
            in: null
            description: Restricts to incidents that were created due to the failure of an activity with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: causeIncidentId
            in: null
            description: Restricts to incidents that have the given incident id as cause incident.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: rootCauseIncidentId
            in: null
            description: Restricts to incidents that have the given incident id as root cause incident.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: configuration
            in: null
            description: Restricts to incidents that have the given parameter set as configuration.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: tenantIdIn
            in: null
            description: Restricts to incidents that have one of the given comma-separated tenant ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: jobDefinitionIdIn
            in: null
            description: Restricts to incidents that have one of the given comma-separated job definition ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/CountResultDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET `/incident/count?processInstanceId=aProcInstId`
                        description: null
                        value: [{"count":2}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid. See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for the error
            response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /incident/{id}	;get class Operation {
    tags: [Incident]
    summary: Get Incident
    description: Retrieves an incident by ID.
    externalDocs: null
    operationId: getIncident
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the incident to be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/IncidentDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: GET `/incident/anIncidentId`
                        description: null
                        value: {"id":"anIncidentId","processDefinitionId":"aProcDefId","processInstanceId":"aProcInstId","executionId":"anExecutionId","incidentTimestamp":"2014-03-01T08:00:00.000+0200","incidentType":"failedJob","activityId":"serviceTask","failedActivityId":"serviceTask","causeIncidentId":"aCauseIncidentId","rootCauseIncidentId":"aRootCauseIncidentId","configuration":"aConfiguration","tenantId":null,"incidentMessage":"anIncidentMessage","jobDefinitionId":"aJobDefinitionId"}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Returned if an incident with given id does not exist.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /incident/{id}	;delete class Operation {
    tags: [Incident]
    summary: Resolve Incident
    description: Resolves an incident with given id.
    externalDocs: null
    operationId: resolveIncident
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the incident to be resolved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Returned if an incident with given id does not exist.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if an incident is not related to any execution or an incident is of type `failedJob` or
            `failedExternalTask`. To resolve such an incident, please refer to the
            [Incident Types](https://docs.camunda.org/manual/7.14/user-guide/process-engine/incidents/#incident-types) section.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /message	;post class Operation {
    tags: [Message]
    summary: null
    description: Correlates a message to the process engine to either trigger a message start event or an intermediate message 
    catching event. Internally this maps to the engine's message correlation builder methods
    `MessageCorrelationBuilder#correlateWithResult()` and `MessageCorrelationBuilder#correlateAllWithResult()`.
    For more information about the correlation behavior, see the [Message Events](https://docs.camunda.org/manual/7.14/bpmn20/events/message-events/)
    section of the [BPMN 2.0 Implementation Reference](https://docs.camunda.org/manual/7.14/reference/bpmn20/).
    externalDocs: null
    operationId: deliverMessage
    parameters: null
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/CorrelationMessageDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST /condition
                    description: Correlate without result
                    value: {"messageName":"aMessage","businessKey":"aBusinessKey","correlationKeys":{"aVariable":{"value":"aValue","type":"String"}},"processVariables":{"aVariable":{"value":"aNewValue","type":"String","valueInfo":{"transient":true}},"anotherVariable":{"value":true,"type":"Boolean"}}}
                    externalValue: null
                    $ref: null
                }, example-2=class Example {
                    summary: POST /condition
                    description: Correlate with result
                    value: {"messageName":"aMessage","businessKey":"aBusinessKey","correlationKeys":{"aVariable":{"value":"aValue","type":"String"}},"processVariables":{"aVariable":{"value":"aNewValue","type":"String","valueInfo":{"transient":true}},"anotherVariable":{"value":true,"type":"Boolean"}},"resultEnabled":true}
                    externalValue: null
                    $ref: null
                }, example-3=class Example {
                    summary: POST /condition
                    description: Correlate with result and variables
                    value: {"messageName":"aMessage","businessKey":"aBusinessKey","correlationKeys":{"aVariable":{"value":"aValue","type":"String"}},"processVariables":{"aVariable":{"value":"aNewValue","type":"String","valueInfo":{"transient":true}},"anotherVariable":{"value":true,"type":"Boolean"}},"resultEnabled":true,"variablesInResultEnabled":true}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful. The property `resultEnabled` in the request body was `true`.
            The `variables` property is only returned, if the property variablesInResultEnable`
            was set to `true` in the request.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/MessageCorrelationResultWithVariableDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response.
                        description: The Response content of a status 200. The property `variablesInResultEnabled` in the request body was `false` (Default).
                        value: [{"resultType":"ProcessDefinition","execution":null,"processInstance":{"links":[],"id":"aProcInstId","definitionId":"aProcDefId","businessKey":"aKey","caseInstanceId":"aCaseInstId","ended":false,"suspended":false,"tenantId":"aTenantId"}}]
                        externalValue: null
                        $ref: null
                    }, example-2=class Example {
                        summary: Status 200 Response.
                        description: The Response content of a status 200. The property `variablesInResultEnabled` in the request body was `true`.
                        value: [{"resultType":"Execution","execution":{"id":"anExecutionId","processInstanceId":"aProcInstId","ended":false,"tenantId":"aTenantId"},"processInstance":null,"variables":{"aVariable":{"value":"aNewValue","type":"String","valueInfo":{"transient":true}},"anotherVariable":{"value":true,"type":"Boolean"}}}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 204=class ApiResponse {
            description: Request successful. The property `resultEnabled` in the request body was `false` (Default).
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if:
            * no `messageName` was supplied
            * both `tenantId` and `withoutTenantId` are supplied
            * the message has not been correlated to exactly one entity (execution or process definition)
            * the variable value or type is invalid, for example if the value could not be parsed to an Integer value or the passed variable type is not supported.
            
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /metrics	;get class Operation {
    tags: [Metrics]
    summary: null
    description: Retrieves a list of metrics, aggregated for a given interval.
    externalDocs: null
    operationId: interval
    parameters: [class QueryParameter {
        class Parameter {
            name: name
            in: null
            description: The name of the metric.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: reporter
            in: null
            description: The name of the reporter (host), on which the metrics was logged. This will have
            value provided by the [hostname configuration property](https://docs.camunda.org/manual/7.14/reference/deployment-descriptors/tags/process-engine/#hostname).
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: startDate
            in: null
            description: The start date (inclusive).
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: endDate
            in: null
            description: The end date (exclusive).
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: firstResult
            in: null
            description: Pagination of results. Specifies the index of the first result to return.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: maxResults
            in: null
            description: Pagination of results. Specifies the maximum number of results to return.
            Will return less results if there are no more results left.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: interval
            in: null
            description: The interval for which the metrics should be aggregated. Time unit is seconds.
            Default: The interval is set to 15 minutes (900 seconds).
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: aggregateByReporter
            in: null
            description: Aggregate metrics by reporter.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/MetricsIntervalResultDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET /metrics?name=activity-instance-end&startDate=1970-01-01T01:45:00.000%2b0200&endDate=1970-01-01T02:00:00.000%2b0200
                        description: null
                        value: [{"timestamp":"1970-01-01T01:45:00.000+0200","name":"activity-instance-end","reporter":"REPORTER","value":23}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /metrics/{metrics-name}/sum	;get class Operation {
    tags: [Metrics]
    summary: null
    description: Retrieves the `sum` (count) for a given metric.
    externalDocs: null
    operationId: getMetrics
    parameters: [class PathParameter {
        class Parameter {
            name: metrics-name
            in: null
            description: The name of the metric.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class QueryParameter {
        class Parameter {
            name: startDate
            in: null
            description: The start date (inclusive).
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: endDate
            in: null
            description: The end date (exclusive).
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/MetricsResultDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: GET /metrics/activity-instance-end/sum?startDate=2015-01-01T00:00:00.000%2b0200
                        description: null
                        value: {"result":4342343241}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition	;get class Operation {
    tags: [Process Definition]
    summary: Get List
    description: Queries for process definitions that fulfill given parameters. Parameters may be the properties of 
    process definitions, such as the name, key or version. The size of the result set can be retrieved
    by using the [Get Definition Count](https://docs.camunda.org/manual/7.14/reference/rest/process-definition/get-query-count/) method.
    externalDocs: null
    operationId: getProcessDefinitions
    parameters: [class QueryParameter {
        class Parameter {
            name: processDefinitionId
            in: null
            description: Filter by process definition id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionIdIn
            in: null
            description: Filter by a comma-separated list of process definition ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: name
            in: null
            description: Filter by process definition name.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: nameLike
            in: null
            description: Filter by process definition names that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: deploymentId
            in: null
            description: Filter by the deployment the id belongs to.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: deployedAfter
            in: null
            description: Filter by the deploy time of the deployment the process definition belongs to.
            Only selects process definitions that have been deployed after (exclusive) a specific time.
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the
            format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,
            `2013-01-23T14:42:45.546+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: deployedAt
            in: null
            description: Filter by the deploy time of the deployment the process definition belongs to.
            Only selects process definitions that have been deployed at a specific time (exact match).
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the
            format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,
            `2013-01-23T14:42:45.546+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: key
            in: null
            description: Filter by process definition key, i.e., the id in the BPMN 2.0 XML. Exact match.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: keysIn
            in: null
            description: Filter by a comma-separated list of process definition keys.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: keyLike
            in: null
            description: Filter by process definition keys that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: category
            in: null
            description: Filter by process definition category. Exact match.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: categoryLike
            in: null
            description: Filter by process definition categories that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: version
            in: null
            description: Filter by process definition version.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: latestVersion
            in: null
            description: Only include those process definitions that are latest versions.
            Value may only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: resourceName
            in: null
            description: Filter by the name of the process definition resource. Exact match.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: resourceNameLike
            in: null
            description: Filter by names of those process definition resources that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: startableBy
            in: null
            description: Filter by a user name who is allowed to start the process.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: active
            in: null
            description: Only include active process definitions.
            Value may only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: suspended
            in: null
            description: Only include suspended process definitions.
            Value may only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentId
            in: null
            description: Filter by the incident id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentType
            in: null
            description: Filter by the incident type.
            See the [User Guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/incidents/#incident-types)
            for a list of incident types.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentMessage
            in: null
            description: Filter by the incident message. Exact match.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentMessageLike
            in: null
            description: Filter by the incident message that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: tenantIdIn
            in: null
            description: Filter by a comma-separated list of tenant ids.
            A process definition must have one of the given tenant ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withoutTenantId
            in: null
            description: Only include process definitions which belong to no tenant.
            Value may only be true, as false is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: includeProcessDefinitionsWithoutTenantId
            in: null
            description: Include process definitions which belong to no tenant. Can be used in combination with `tenantIdIn`.
            Value may only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: versionTag
            in: null
            description: Filter by the version tag.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: versionTagLike
            in: null
            description: Filter by the version tag that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withoutVersionTag
            in: null
            description: Only include process definitions without a `versionTag`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: startableInTasklist
            in: null
            description: Filter by process definitions which are startable in Tasklist..
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: notStartableInTasklist
            in: null
            description: Filter by process definitions which are not startable in Tasklist.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: startablePermissionCheck
            in: null
            description: Filter by process definitions which the user is allowed to start in Tasklist.
            If the user doesn't have these permissions the result will be empty list.
            The permissions are:
            * `CREATE` permission for all Process instances
            * `CREATE_INSTANCE` and `READ` permission on Process definition level
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: sortBy
            in: null
            description: Sort the results lexicographically by a given criterion.
            Must be used in conjunction with the sortOrder parameter.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: sortOrder
            in: null
            description: Sort the results in a given order. Values may be asc for ascending order or desc for descending order.
            Must be used in conjunction with the sortBy parameter.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: firstResult
            in: null
            description: Pagination of results. Specifies the index of the first result to return.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: maxResults
            in: null
            description: Pagination of results. Specifies the maximum number of results to return.
            Will return less results if there are no more results left.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/ProcessDefinitionDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 response
                        description: Response of GET `/process-definition?keyLike=invoice&sortBy=version&sortOrder=asc`
                        value: [{"id":"invoice:1:c3a63aaa-2046-11e7-8f94-34f39ab71d4e","key":"invoice","category":"http://www.omg.org/spec/BPMN/20100524/MODEL","description":null,"name":"Invoice Receipt","version":1,"resource":"invoice.v1.bpmn","deploymentId":"c398cd26-2046-11e7-8f94-34f39ab71d4e","diagram":null,"suspended":false,"tenantId":null,"versionTag":null,"historyTimeToLive":5,"startableInTasklist":true},{"id":"invoice:2:c3e1bd16-2046-11e7-8f94-34f39ab71d4e","key":"invoice","category":"http://www.omg.org/spec/BPMN/20100524/MODEL","description":null,"name":"Invoice Receipt","version":2,"resource":"invoice.v2.bpmn","deploymentId":"c3d82020-2046-11e7-8f94-34f39ab71d4e","diagram":null,"suspended":false,"tenantId":null,"versionTag":null,"historyTimeToLive":null,"startableInTasklist":true}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid, for example if a `sortOrder` parameter is supplied,
            but no `sortBy`. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/count	;get class Operation {
    tags: [Process Definition]
    summary: Get List Count
    description: Requests the number of process definitions that fulfill the query criteria.
    Takes the same filtering parameters as the [Get Definitions](https://docs.camunda.org/manual/7.14/reference/rest/process-definition/get-query/) method.
    externalDocs: null
    operationId: getProcessDefinitionsCount
    parameters: [class QueryParameter {
        class Parameter {
            name: processDefinitionId
            in: null
            description: Filter by process definition id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionIdIn
            in: null
            description: Filter by a comma-separated list of process definition ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: name
            in: null
            description: Filter by process definition name.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: nameLike
            in: null
            description: Filter by process definition names that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: deploymentId
            in: null
            description: Filter by the deployment the id belongs to.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: deployedAfter
            in: null
            description: Filter by the deploy time of the deployment the process definition belongs to.
            Only selects process definitions that have been deployed after (exclusive) a specific time.
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the
            format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,
            `2013-01-23T14:42:45.546+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: deployedAt
            in: null
            description: Filter by the deploy time of the deployment the process definition belongs to.
            Only selects process definitions that have been deployed at a specific time (exact match).
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the
            format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,
            `2013-01-23T14:42:45.546+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class DateTimeSchema {
                class Schema {
                    type: string
                    format: date-time
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: key
            in: null
            description: Filter by process definition key, i.e., the id in the BPMN 2.0 XML. Exact match.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: keysIn
            in: null
            description: Filter by a comma-separated list of process definition keys.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: keyLike
            in: null
            description: Filter by process definition keys that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: category
            in: null
            description: Filter by process definition category. Exact match.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: categoryLike
            in: null
            description: Filter by process definition categories that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: version
            in: null
            description: Filter by process definition version.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: latestVersion
            in: null
            description: Only include those process definitions that are latest versions.
            Value may only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: resourceName
            in: null
            description: Filter by the name of the process definition resource. Exact match.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: resourceNameLike
            in: null
            description: Filter by names of those process definition resources that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: startableBy
            in: null
            description: Filter by a user name who is allowed to start the process.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: active
            in: null
            description: Only include active process definitions.
            Value may only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: suspended
            in: null
            description: Only include suspended process definitions.
            Value may only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentId
            in: null
            description: Filter by the incident id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentType
            in: null
            description: Filter by the incident type.
            See the [User Guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/incidents/#incident-types)
            for a list of incident types.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentMessage
            in: null
            description: Filter by the incident message. Exact match.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentMessageLike
            in: null
            description: Filter by the incident message that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: tenantIdIn
            in: null
            description: Filter by a comma-separated list of tenant ids.
            A process definition must have one of the given tenant ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withoutTenantId
            in: null
            description: Only include process definitions which belong to no tenant.
            Value may only be true, as false is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: includeProcessDefinitionsWithoutTenantId
            in: null
            description: Include process definitions which belong to no tenant. Can be used in combination with `tenantIdIn`.
            Value may only be `true`, as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: versionTag
            in: null
            description: Filter by the version tag.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: versionTagLike
            in: null
            description: Filter by the version tag that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withoutVersionTag
            in: null
            description: Only include process definitions without a `versionTag`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: startableInTasklist
            in: null
            description: Filter by process definitions which are startable in Tasklist..
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: notStartableInTasklist
            in: null
            description: Filter by process definitions which are not startable in Tasklist.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: startablePermissionCheck
            in: null
            description: Filter by process definitions which the user is allowed to start in Tasklist.
            If the user doesn't have these permissions the result will be empty list.
            The permissions are:
            * `CREATE` permission for all Process instances
            * `CREATE_INSTANCE` and `READ` permission on Process definition level
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/CountResultDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 response
                        description: Response of GET `/process-definition/count?keyLike=Key&version=47`
                        value: {"count":1}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid.
            See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/key/{key}	;get class Operation {
    tags: [Process Definition]
    summary: Get
    description: Retrieves the latest version of the process definition which belongs to no tenant according to the `ProcessDefinition` interface in the engine.
    externalDocs: null
    operationId: getProcessDefinitionByKey
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definition (the latest version thereof) to be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ProcessDefinitionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 response
                        description: Response of GET `/process-definition/key/invoice`
                        value: {"id":"invoice:1:c3a63aaa-2046-11e7-8f94-34f39ab71d4e","key":"invoice","category":"http://www.omg.org/spec/BPMN/20100524/MODEL","description":null,"name":"Invoice Receipt","version":1,"resource":"invoice.v1.bpmn","deploymentId":"c398cd26-2046-11e7-8f94-34f39ab71d4e","diagram":null,"suspended":false,"tenantId":null,"versionTag":null,"historyTimeToLive":5,"startableInTasklist":true}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Process definition with given `key` does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/key/{key}	;delete class Operation {
    tags: [Process Definition]
    summary: Delete By Key
    description: Deletes process definitions by a given key which belong to no tenant id.
    externalDocs: null
    operationId: deleteProcessDefinitionsByKey
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definitions to be deleted.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class QueryParameter {
        class Parameter {
            name: cascade
            in: null
            description: `true`, if all process instances, historic process instances and jobs
            for this process definition should be deleted.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: skipCustomListeners
            in: null
            description: `true`, if only the built-in ExecutionListeners should be notified with the end event.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: skipIoMappings
            in: null
            description: A boolean value to control whether input/output mappings should be executed during deletion.
            `true`, if input/output mappings should not be invoked.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 403=class ApiResponse {
            description: Forbidden
            The process definitions with the given `key` cannot be deleted due to missing permissions.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/AuthorizationExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Not found
            Process definition with given `key` does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/key/{key}/deployed-start-form	;get class Operation {
    tags: [Process Definition]
    summary: Get Deployed Start Form
    description: Retrieves the deployed form that can be referenced from a start event.
    For further information please refer to [User Guide](https://docs.camunda.org/manual/7.14/user-guide/task-forms/#embedded-task-forms).
    externalDocs: null
    operationId: getDeployedStartFormByKey
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definition (the latest version thereof) to be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/xhtml+xml=class MediaType {
                    schema: class BinarySchema {
                        class Schema {
                            type: string
                            format: binary
                            $ref: null
                            description: For `application/xhtml+xml` Responses, a byte stream is returned.
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: Resonse for GET `/process-definition/key/processDefinitionKey/deployed-start-form`
                        value: <form role="form" name="invoiceForm"
                                                              class="form-horizontal">
                        
                                                          <div class="form-group">
                                                            <label class="control-label col-md-4"
                                                                   for="creditor">Creditor</label>
                                                            <div class="col-md-8">
                                                              <input cam-variable-name="creditor"
                                                                     cam-variable-type="String"
                                                                     id="creditor"
                                                                     class="form-control"
                                                                     type="text"
                                                                     required />
                                                              <div class="help">
                                                                (e.g. &quot;Great Pizza for Everyone Inc.&quot;)
                                                              </div>
                                                            </div>
                                                          </div>
                        
                                                        </form>
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: The form key has wrong format.  See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 403=class ApiResponse {
            description: The deployed start form cannot be retrieved due to missing permissions on process definition resource.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/AuthorizationExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: No deployed start form for a given process definition exists. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/key/{key}/diagram	;get class Operation {
    tags: [Process Definition]
    summary: Get Diagram
    description: Retrieves the diagram for the latest version of the process definition which belongs to no tenant.
    
    If the process definition's deployment contains an image resource with the same file name
    as the process definition, the deployed image will be returned by the Get Diagram endpoint.
    Example: `someProcess.bpmn` and `someProcess.png`.
    Supported file extentions for the image are: `svg`, `png`, `jpg`, and `gif`.
    externalDocs: null
    operationId: getProcessDefinitionDiagramByKey
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definition.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful. The image diagram of this process.
            headers: null
            content: class Content {
                {application/octet-stream=class MediaType {
                    schema: class BinarySchema {
                        class Schema {
                            type: string
                            format: binary
                            $ref: null
                            description: defaults to `application/octet-stream` if the file suffix is unknown
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: null
                    example: null
                    encoding: null
                }, */*=class MediaType {
                    schema: class BinarySchema {
                        class Schema {
                            type: string
                            format: binary
                            $ref: null
                            description: Files with MIME type information image/png, image/gif, ... 
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 204=class ApiResponse {
            description: The process definition doesn't have an associated diagram.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Multiple schemas found in the OAS 'content' section, returning only the first one (application/octet-stream)
[WARNING] Multiple schemas found in the OAS 'content' section, returning only the first one (application/octet-stream)
[INFO] processOperation: resourcePath=  /process-definition/key/{key}/form-variables	;get class Operation {
    tags: [Process Definition]
    summary: Get Start Form Variables
    description: Retrieves the start form variables for the latest process definition which belongs to no tenant
    (only if they are defined via the 
    [Generated Task Form](https://docs.camunda.org/manual/7.14/user-guide/task-forms/#generated-task-forms) approach).
    The start form variables take form data specified on the start event into account.
    If form fields are defined, the variable types and default values
    of the form fields are taken into account.
    externalDocs: null
    operationId: getStartFormVariablesByKey
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definition (the latest version thereof) to be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class QueryParameter {
        class Parameter {
            name: variableNames
            in: null
            description: A comma-separated list of variable names. Allows restricting the list of requested
            variables to the variable names in the list. It is best practice to restrict the
            list of variables to the variables actually required by the form in order to
            minimize fetching of data. If the query parameter is ommitted all variables are
            fetched. If the query parameter contains non-existent variable names, the variable
            names are ignored.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: deserializeValues
            in: null
            description: Determines whether serializable variable values (typically variables that store
            custom Java objects) should be deserialized on server side (default true).
            
            If set to true, a serializable variable will be deserialized on server side and
            transformed to JSON using [Jackson's](http://jackson.codehaus.org/) POJO/bean
            property introspection feature. Note that this requires the Java classes of the
            variable value to be on the REST API's classpath.
            
            If set to false, a serializable variable will be returned in its serialized format.
            For example, a variable that is serialized as XML will be returned as a JSON string
            containing XML.
            
            **Note**: While true is the default value for reasons of backward compatibility, we
            recommend setting this parameter to false when developing web applications that are
            independent of the Java process applications deployed to the engine.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful. A JSON object containing a property for each variable returned.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class MapSchema {
                        class Schema {
                            type: object
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: class Schema {
                                type: null
                                format: null
                                $ref: #/components/schemas/VariableValueDto
                                description: null
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                not: null
                                properties: null
                                additionalProperties: null
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: GET `/task/anId/form-variables`
                        value: {"amount":{"type":"integer","value":5,"valueInfo":{}},"firstName":{"type":"String","value":"Jonny","valueInfo":{}}}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: The key is null or does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/key/{key}/history-time-to-live	;put class Operation {
    tags: [Process Definition]
    summary: Update History Time to Live
    description: Updates history time to live for the latest version of the process definition which belongs to no tenant.
    The field is used within [History cleanup](https://docs.camunda.org/manual/7.14/user-guide/process-engine/history/#history-cleanup).
    externalDocs: null
    operationId: updateHistoryTimeToLiveByProcessDefinitionKey
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definition to change history time to live.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/HistoryTimeToLiveDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: PUT `/process-definition/key/aProcessDefinitionKey/history-time-to-live`
                    description: null
                    value: {"historyTimeToLive":5}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the request parameters are invalid. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-definition/key/{key}/rendered-form	;get class Operation {
    tags: [Process Definition]
    summary: Get Rendered Start Form
    description: Retrieves  the rendered form for the latest version of the process definition which belongs to no tenant.
    This method can be used to get the HTML rendering of a
    [Generated Task Form](https://docs.camunda.org/manual/7.14/user-guide/task-forms/#generated-task-forms).
    externalDocs: null
    operationId: getRenderedStartFormByKey
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definition (the latest version thereof) to be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/xhtml+xml=class MediaType {
                    schema: class BinarySchema {
                        class Schema {
                            type: string
                            format: binary
                            $ref: null
                            description: For `application/xhtml+xml` Responses, a byte stream is returned.
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: A `/process-definition/key/anKey/rendered-form` HTML
                                                               GET response body providing the rendered (generated) form content.
                        value: <form class="form-horizontal">
                                                          <div class="control-group">
                                                            <label class="control-label">Customer ID</label>
                                                            <div class="controls">
                                                              <input form-field type="string" name="customerId"></input>
                                                            </div>
                                                          </div>
                                                          <div class="control-group">
                                                            <label class="control-label">Amount</label>
                                                            <div class="controls">
                                                              <input form-field type="number" name="amount"></input>
                                                            </div>
                                                          </div>
                                                        </form>
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Process definition has no form field metadata defined. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given key does not exist.  See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/key/{key}/start	;post class Operation {
    tags: [Process Definition]
    summary: Start Instance
    description: Instantiates a given process definition, starts the latest version of the process definition
    which belongs to no tenant.
    Process variables and business key may be supplied in the request body.
    externalDocs: null
    operationId: startProcessInstanceByKey
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definition (the latest version thereof) to be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/StartProcessInstanceDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: Starting a process instance at its default initial activity
                    description: null
                    value: {"variables":{"aVariable":{"value":"aStringValue","type":"String"},"anotherVariable":{"value":true,"type":"Boolean"}},"businessKey":"myBusinessKey"}
                    externalValue: null
                    $ref: null
                }, example-2=class Example {
                    summary: Starting a process instance with variables in return
                    description: null
                    value: {"variables":{"aVariable":{"value":"aStringValue","type":"String"},"anotherVariable":{"value":true,"type":"Boolean"}},"businessKey":"myBusinessKey","withVariablesInReturn":true}
                    externalValue: null
                    $ref: null
                }, example-3=class Example {
                    summary: Starting a process instance at two specific activities
                    description: null
                    value: {"variables":{"aProcessVariable":{"value":"aStringValue","type":"String"}},"businessKey":"myBusinessKey","skipCustomListeners":true,"startInstructions":[{"type":"startBeforeActivity","activityId":"activityId","variables":{"var":{"value":"aVariableValue","local":false,"type":"String"}}},{"type":"startAfterActivity","activityId":"anotherActivityId","variables":{"varLocal":{"value":"anotherVariableValue","local":true,"type":"String"}}}]}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ProcessInstanceWithVariablesDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response 1
                        description: Response for starting a process instance at its default initial activity
                        value: {"links":[{"method":"GET","href":"http://localhost:8080/rest-test/process-instance/anId","rel":"self"}],"id":"anId","definitionId":"aProcessDefinitionId","businessKey":"myBusinessKey","caseInstanceId":null,"tenantId":null,"ended":false,"suspended":false}
                        externalValue: null
                        $ref: null
                    }, example-2=class Example {
                        summary: Status 200 Response 2
                        description: Response for starting a process instance with variables in return
                        value: {"links":[{"method":"GET","href":"http://localhost:8080/rest-test/process-instance/aProcInstId","rel":"self"}],"id":"aProcInstId","definitionId":"aProcessDefinitionId","businessKey":"myBusinessKey","caseInstanceId":null,"ended":false,"suspended":false,"tenantId":null,"variables":{"anotherVariable":{"type":"Boolean","value":true,"valueInfo":{"transient":true}},"aVariable":{"type":"String","value":"aStringValue","valueInfo":{}}}}
                        externalValue: null
                        $ref: null
                    }, example-3=class Example {
                        summary: Status 200 Response 3
                        description: Response for starting a process instance at two specific activities
                        value: {"links":[{"method":"GET","href":"http://localhost:8080/rest-test/process-instance/anId","rel":"self"}],"id":"anId","definitionId":"aProcessDefinitionId","businessKey":"myBusinessKey","caseInstanceId":null,"tenantId":null,"ended":false,"suspended":false}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: The instance could not be created due to an invalid variable value,
            for example if the value could not be parsed to an `Integer` value or
            the passed variable type is not supported.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: The instance could not be created successfully.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-definition/key/{key}/startForm	;get class Operation {
    tags: [Process Definition]
    summary: Get Start Form Key
    description: Retrieves the key of the start form for the latest version of the process definition
    which belongs to no tenant.
    The form key corresponds to the `FormData#formKey` property in the engine.
    externalDocs: null
    operationId: getStartFormByKey
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definition (the latest version thereof) for which the form key is to be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/FormDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: GET `process-definition/key/aKey/startForm`
                        value: {"key":"aFormKey","contextPath":"http://localhost:8080/my-process-application/"}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Process definition has no start form defined. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given key does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/key/{key}/statistics	;get class Operation {
    tags: [Process Definition]
    summary: Get Activity Instance Statistics
    description: Retrieves runtime statistics of the latest version of the given process definition
    which belongs to no tenant, grouped by activities.
    These statistics include the number of running activity instances, optionally the number of failed jobs
    and also optionally the number of incidents either grouped by incident types or
    for a specific incident type.
    **Note**: This does not include historic data.
    externalDocs: null
    operationId: getActivityStatisticsByProcessDefinitionKey
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definition (the latest version thereof) to be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class QueryParameter {
        class Parameter {
            name: failedJobs
            in: null
            description: Whether to include the number of failed jobs in the result or not. Valid values are `true` or `false`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidents
            in: null
            description: Valid values for this property are `true` or `false`.
            If this property has been set to `true` the result will include the corresponding number of incidents
            for each occurred incident type.
            If it is set to `false`, the incidents will not be included in the result.
            Cannot be used in combination with `incidentsForType`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentsForType
            in: null
            description: If this property has been set with any incident type (i.e., a string value) the result
            will only include the number of incidents for the assigned incident type.
            Cannot be used in combination with `incidents`.
            See the [User Guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/incidents/#incident-types)
            for a list of incident types.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/ActivityStatisticsResultDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET /process-definition/key/aProcessDefinitionKey/statistics?failedJobs=true
                        description: Request with Query Parameter `failedJobs=true`
                        value: [{"id":"anActivity","instances":123,"failedJobs":42,"incidents":[]},{"id":"anotherActivity","instances":124,"failedJobs":43,"incidents":[]}]
                        externalValue: null
                        $ref: null
                    }, example-2=class Example {
                        summary: GET /process-definition/key/aProcessDefinitionKey/statistics?incidents=true
                        description: Request with Query Parameter `incidents=true`
                        value: [{"id":"anActivity","instances":123,"failedJobs":0,"incidents":[{"incidentType":"failedJob","incidentCount":42},{"incidentType":"anIncident","incidentCount":20}]},{"id":"anotherActivity","instances":124,"failedJobs":0,"incidents":[{"incidentType":"failedJob","incidentCount":43},{"incidentType":"anIncident","incidentCount":22},{"incidentType":"anotherIncident","incidentCount":15}]}]
                        externalValue: null
                        $ref: null
                    }, example-3=class Example {
                        summary: GET /process-definition/key/aProcessDefinitionKey/statistics?incidentsForType=anIncident
                        description: Request with Query Parameter `incidentsForType=anIncident`
                        value: [{"id":"anActivity","instances":123,"failedJobs":0,"incidents":[{"incidentType":"anIncident","incidentCount":20}]}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid.
            See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given key does not exist.
            See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/key/{key}/submit-form	;post class Operation {
    tags: [Process Definition]
    summary: Submit Start Form
    description: Starts the latest version of the process definition which belongs to no tenant
    using a set of process variables and the business key.
    If the start event has Form Field Metadata defined, the process engine will perform backend validation
    for any form fields which have validators defined.
    See [Documentation on Generated Task Forms](https://docs.camunda.org/manual/7.14/user-guide/task-forms/#generated-task-forms).
    externalDocs: null
    operationId: submitFormByKey
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definition to submit the form for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/StartProcessInstanceFormDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/process-definition/key/aProcessDefinitionKey/submit-form`
                    description: null
                    value: {"variables":{"aVariable":{"value":"aStringValue","type":"String"},"anotherVariable":{"value":true,"type":"Boolean"}},"businessKey":"myBusinessKey"}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ProcessInstanceDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response 1
                        description: POST `/process-definition/key/aProcessDefinitionKey/submit-form`
                        value: {"links":[{"method":"GET","href":"http://localhost:8080/rest-test/process-instance/anId","rel":"self"}],"id":"anId","definitionId":"aProcessDefinitionId","businessKey":"myBusinessKey","caseInstanceId":null,"tenantId":null,"ended":false,"suspended":false}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: The instance could not be created due to an invalid variable value,
            for example if the value could not be parsed to an `Integer` value or
            the passed variable type is not supported.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given key does not exist.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: The instance could not be created successfully.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-definition/key/{key}/suspended	;put class Operation {
    tags: [Process Definition]
    summary: Activate/Suspend by Id
    description: Activates or suspends a given process definition by latest version of process definition key
    which belongs to no tenant.
    externalDocs: null
    operationId: updateProcessDefinitionSuspensionStateByKey
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definition (the latest version thereof) to be activated/suspended.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: **Note**: Unallowed properties are `processDefinitionId` and `processDefinitionKey`.
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/ProcessDefinitionSuspensionStateDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: PUT `/process-definition/key/aProcessDefinitionKey/suspended`
                    description: null
                    value: {"suspended":true,"includeProcessInstances":true,"executionDate":"2013-11-21T10:49:45T14:42:45"}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid,
            for example if the provided `executionDate` parameter doesn't have the expected format or
            if the `processDefinitionKey` parameter is `null`. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given key does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-definition/key/{key}/tenant-id/{tenant-id}	;get class Operation {
    tags: [Process Definition]
    summary: Get
    description: Retrieves the latest version of the process definition for tenant according to
    the `ProcessDefinition` interface in the engine.
    externalDocs: null
    operationId: getLatestProcessDefinitionByTenantId
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definition (the latest version thereof) to be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: tenant-id
            in: null
            description: The id of the tenant the process definition belongs to.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ProcessDefinitionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 response
                        description: Response of GET `/process-definition/key/invoice/tenant-id/tenantOne`
                        value: {"id":"invoice:1:c3a63aaa-2046-11e7-8f94-34f39ab71d4e","key":"invoice","category":"http://www.omg.org/spec/BPMN/20100524/MODEL","description":null,"name":"Invoice Receipt","version":1,"resource":"invoice.v1.bpmn","deploymentId":"c398cd26-2046-11e7-8f94-34f39ab71d4e","diagram":null,"suspended":false,"tenantId":"tenantOne","versionTag":null,"historyTimeToLive":5,"startableInTasklist":true}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Process definition with given `key` does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/key/{key}/tenant-id/{tenant-id}	;delete class Operation {
    tags: [Process Definition]
    summary: Delete By Key
    description: Deletes process definitions by a given key and which belong to a tenant id.
    externalDocs: null
    operationId: deleteProcessDefinitionsByKeyAndTenantId
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definitions to be deleted.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: tenant-id
            in: null
            description: The id of the tenant the process definitions belong to.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class QueryParameter {
        class Parameter {
            name: cascade
            in: null
            description: `true`, if all process instances, historic process instances and jobs
            for this process definition should be deleted.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: skipCustomListeners
            in: null
            description: `true`, if only the built-in ExecutionListeners should be notified with the end event.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: skipIoMappings
            in: null
            description: A boolean value to control whether input/output mappings should be executed during deletion.
            `true`, if input/output mappings should not be invoked.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 403=class ApiResponse {
            description: Forbidden
            The process definitions with the given `key` cannot be deleted due to missing permissions.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/AuthorizationExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Not found
            Process definition with given key does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/key/{key}/tenant-id/{tenant-id}/deployed-start-form	;get class Operation {
    tags: [Process Definition]
    summary: Get Deployed Start Form
    description: Retrieves the deployed form that can be referenced from a start event.
    For further information please refer to [User Guide](https://docs.camunda.org/manual/7.14/user-guide/task-forms/#embedded-task-forms).
    externalDocs: null
    operationId: getDeployedStartFormByKeyAndTenantId
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definition (the latest version thereof) to be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: tenant-id
            in: null
            description: The id of the tenant the process definitions belong to.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/xhtml+xml=class MediaType {
                    schema: class BinarySchema {
                        class Schema {
                            type: string
                            format: binary
                            $ref: null
                            description: For `application/xhtml+xml` Responses, a byte stream is returned.
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: Resonse for GET
                                                               `/process-definition/key/processDefinitionKey/tenant-id/tenantId/deployed-start-form`
                        value: <form role="form" name="invoiceForm"
                                                              class="form-horizontal">
                        
                                                          <div class="form-group">
                                                            <label class="control-label col-md-4"
                                                                   for="creditor">Creditor</label>
                                                            <div class="col-md-8">
                                                              <input cam-variable-name="creditor"
                                                                     cam-variable-type="String"
                                                                     id="creditor"
                                                                     class="form-control"
                                                                     type="text"
                                                                     required />
                                                              <div class="help">
                                                                (e.g. &quot;Great Pizza for Everyone Inc.&quot;)
                                                              </div>
                                                            </div>
                                                          </div>
                        
                                                        </form>
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: The form key has wrong format.  See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 403=class ApiResponse {
            description: The deployed start form cannot be retrieved due to missing permissions on process definition resource.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/AuthorizationExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: No deployed start form for a given process definition exists. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/key/{key}/tenant-id/{tenant-id}/diagram	;get class Operation {
    tags: [Process Definition]
    summary: Get Diagram
    description: Retrieves the diagram for the latest version of the process definition for tenant.
    
    If the process definition's deployment contains an image resource with the same file name
    as the process definition, the deployed image will be returned by the Get Diagram endpoint.
    Example: `someProcess.bpmn` and `someProcess.png`.
    Supported file extentions for the image are: `svg`, `png`, `jpg`, and `gif`.
    externalDocs: null
    operationId: getProcessDefinitionDiagramByKeyAndTenantId
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definition.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: tenant-id
            in: null
            description: The id of the tenant the process definition belongs to.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful. The image diagram of this process.
            headers: null
            content: class Content {
                {application/octet-stream=class MediaType {
                    schema: class BinarySchema {
                        class Schema {
                            type: string
                            format: binary
                            $ref: null
                            description: defaults to `application/octet-stream` if the file suffix is unknown
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: null
                    example: null
                    encoding: null
                }, */*=class MediaType {
                    schema: class BinarySchema {
                        class Schema {
                            type: string
                            format: binary
                            $ref: null
                            description: Files with MIME type information image/png, image/gif, ... 
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 204=class ApiResponse {
            description: The process definition doesn't have an associated diagram.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Multiple schemas found in the OAS 'content' section, returning only the first one (application/octet-stream)
[WARNING] Multiple schemas found in the OAS 'content' section, returning only the first one (application/octet-stream)
[INFO] processOperation: resourcePath=  /process-definition/key/{key}/tenant-id/{tenant-id}/form-variables	;get class Operation {
    tags: [Process Definition]
    summary: Get Start Form Variables
    description: Retrieves the start form variables for the latest process definition for a tenant
    (only if they are defined via the 
    [Generated Task Form](https://docs.camunda.org/manual/7.14/user-guide/task-forms/#generated-task-forms) approach).
    The start form variables take form data specified on the start event into account.
    If form fields are defined, the variable types and default values
    of the form fields are taken into account.
    externalDocs: null
    operationId: getStartFormVariablesByKeyAndTenantId
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definition (the latest version thereof) to be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: tenant-id
            in: null
            description: The id of the tenant the process definition belongs to.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class QueryParameter {
        class Parameter {
            name: variableNames
            in: null
            description: A comma-separated list of variable names. Allows restricting the list of requested
            variables to the variable names in the list. It is best practice to restrict the
            list of variables to the variables actually required by the form in order to
            minimize fetching of data. If the query parameter is ommitted all variables are
            fetched. If the query parameter contains non-existent variable names, the variable
            names are ignored.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: deserializeValues
            in: null
            description: Determines whether serializable variable values (typically variables that store
            custom Java objects) should be deserialized on server side (default true).
            
            If set to true, a serializable variable will be deserialized on server side and
            transformed to JSON using [Jackson's](http://jackson.codehaus.org/) POJO/bean
            property introspection feature. Note that this requires the Java classes of the
            variable value to be on the REST API's classpath.
            
            If set to false, a serializable variable will be returned in its serialized format.
            For example, a variable that is serialized as XML will be returned as a JSON string
            containing XML.
            
            **Note**: While true is the default value for reasons of backward compatibility, we
            recommend setting this parameter to false when developing web applications that are
            independent of the Java process applications deployed to the engine.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful. A JSON object containing a property for each variable returned.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class MapSchema {
                        class Schema {
                            type: object
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: class Schema {
                                type: null
                                format: null
                                $ref: #/components/schemas/VariableValueDto
                                description: null
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                not: null
                                properties: null
                                additionalProperties: null
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: GET `/task/anId/form-variables`
                        value: {"amount":{"type":"integer","value":5,"valueInfo":{}},"firstName":{"type":"String","value":"Jonny","valueInfo":{}}}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: The key is null or does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/key/{key}/tenant-id/{tenant-id}/history-time-to-live	;put class Operation {
    tags: [Process Definition]
    summary: Update History Time to Live
    description: Updates history time to live for the latest version of the process definition for a tenant.
    The field is used within [History cleanup](https://docs.camunda.org/manual/7.14/user-guide/process-engine/history/#history-cleanup).
    externalDocs: null
    operationId: updateHistoryTimeToLiveByProcessDefinitionKeyAndTenantId
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definition to change history time to live.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: tenant-id
            in: null
            description: The id of the tenant the process definition belongs to.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/HistoryTimeToLiveDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: PUT `/process-definition/key/aProcessDefinitionKey/tenant-id/aTenantId/history-time-to-live`
                    description: null
                    value: {"historyTimeToLive":5}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the request parameters are invalid. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-definition/key/{key}/tenant-id/{tenant-id}/rendered-form	;get class Operation {
    tags: [Process Definition]
    summary: Get Rendered Start Form
    description: Retrieves  the rendered form for the latest version of the process definition for a tenant.
    This method can be used to get the HTML rendering of a
    [Generated Task Form](https://docs.camunda.org/manual/7.14/user-guide/task-forms/#generated-task-forms).
    externalDocs: null
    operationId: getRenderedStartFormByKeyAndTenantId
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definition (the latest version thereof) to be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: tenant-id
            in: null
            description: The id of the tenant the process definition belongs to.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/xhtml+xml=class MediaType {
                    schema: class BinarySchema {
                        class Schema {
                            type: string
                            format: binary
                            $ref: null
                            description: For `application/xhtml+xml` Responses, a byte stream is returned.
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: A `/process-definition/key/anKey/tenand-id/aTenantId/rendered-form` HTML
                                                               GET response body providing the rendered (generated) form content.
                        value: <form class="form-horizontal">
                                                          <div class="control-group">
                                                            <label class="control-label">Customer ID</label>
                                                            <div class="controls">
                                                              <input form-field type="string" name="customerId"></input>
                                                            </div>
                                                          </div>
                                                          <div class="control-group">
                                                            <label class="control-label">Amount</label>
                                                            <div class="controls">
                                                              <input form-field type="number" name="amount"></input>
                                                            </div>
                                                          </div>
                                                        </form>
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Process definition has no form field metadata defined. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given key does not exist.  See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/key/{key}/tenant-id/{tenant-id}/start	;post class Operation {
    tags: [Process Definition]
    summary: Start Instance
    description: Instantiates a given process definition, starts the latest version of the process definition for tenant.
    Process variables and business key may be supplied in the request body.
    externalDocs: null
    operationId: startProcessInstanceByKeyAndTenantId
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definition (the latest version thereof) to be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: tenant-id
            in: null
            description: The id of the tenant the process definition belongs to.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/StartProcessInstanceDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: Starting a process instance at its default initial activity
                    description: null
                    value: {"variables":{"aVariable":{"value":"aStringValue","type":"String"},"anotherVariable":{"value":true,"type":"Boolean"}},"businessKey":"myBusinessKey"}
                    externalValue: null
                    $ref: null
                }, example-2=class Example {
                    summary: Starting a process instance with variables in return
                    description: null
                    value: {"variables":{"aVariable":{"value":"aStringValue","type":"String"},"anotherVariable":{"value":true,"type":"Boolean"}},"businessKey":"myBusinessKey","withVariablesInReturn":true}
                    externalValue: null
                    $ref: null
                }, example-3=class Example {
                    summary: Starting a process instance at two specific activities
                    description: null
                    value: {"variables":{"aProcessVariable":{"value":"aStringValue","type":"String"}},"businessKey":"myBusinessKey","skipCustomListeners":true,"startInstructions":[{"type":"startBeforeActivity","activityId":"activityId","variables":{"var":{"value":"aVariableValue","local":false,"type":"String"}}},{"type":"startAfterActivity","activityId":"anotherActivityId","variables":{"varLocal":{"value":"anotherVariableValue","local":true,"type":"String"}}}]}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ProcessInstanceWithVariablesDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response 1
                        description: Response for starting a process instance at its default initial activity
                        value: {"links":[{"method":"GET","href":"http://localhost:8080/rest-test/process-instance/anId","rel":"self"}],"id":"anId","definitionId":"aProcessDefinitionId","businessKey":"myBusinessKey","caseInstanceId":null,"tenantId":null,"ended":false,"suspended":false}
                        externalValue: null
                        $ref: null
                    }, example-2=class Example {
                        summary: Status 200 Response 2
                        description: Response for starting a process instance with variables in return
                        value: {"links":[{"method":"GET","href":"http://localhost:8080/rest-test/process-instance/aProcInstId","rel":"self"}],"id":"aProcInstId","definitionId":"aProcessDefinitionId","businessKey":"myBusinessKey","caseInstanceId":null,"ended":false,"suspended":false,"tenantId":null,"variables":{"anotherVariable":{"type":"Boolean","value":true,"valueInfo":{"transient":true}},"aVariable":{"type":"String","value":"aStringValue","valueInfo":{}}}}
                        externalValue: null
                        $ref: null
                    }, example-3=class Example {
                        summary: Status 200 Response 3
                        description: Response for starting a process instance at two specific activities
                        value: {"links":[{"method":"GET","href":"http://localhost:8080/rest-test/process-instance/anId","rel":"self"}],"id":"anId","definitionId":"aProcessDefinitionId","businessKey":"myBusinessKey","caseInstanceId":null,"tenantId":null,"ended":false,"suspended":false}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: The instance could not be created due to an invalid variable value,
            for example if the value could not be parsed to an `Integer` value or
            the passed variable type is not supported.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: The instance could not be created successfully.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-definition/key/{key}/tenant-id/{tenant-id}/startForm	;get class Operation {
    tags: [Process Definition]
    summary: Get Start Form Key
    description: Retrieves the key of the start form for the latest version of the process definition for a tenant.
    The form key corresponds to the `FormData#formKey` property in the engine.
    externalDocs: null
    operationId: getStartFormByKeyAndTenantId
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definition (the latest version thereof) for which the form key is to be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: tenant-id
            in: null
            description: The id of the tenant the process definition belongs to.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/FormDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: GET `process-definition/key/aKey/tenant-id/aTenantId/startForm`
                        value: {"key":"aFormKey","contextPath":"http://localhost:8080/my-process-application/"}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Process definition has no start form defined. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given key does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/key/{key}/tenant-id/{tenant-id}/statistics	;get class Operation {
    tags: [Process Definition]
    summary: Get Activity Instance Statistics
    description: Retrieves runtime statistics of the latest version of the given process definition for a tenant,
    grouped by activities.
    These statistics include the number of running activity instances, optionally the number of failed jobs
    and also optionally the number of incidents either grouped by incident types or
    for a specific incident type.
    **Note**: This does not include historic data.
    externalDocs: null
    operationId: getActivityStatisticsByProcessDefinitionKeyAndTenantId
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definition (the latest version thereof) to be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: tenant-id
            in: null
            description: The id of the tenant the process definition belongs to.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class QueryParameter {
        class Parameter {
            name: failedJobs
            in: null
            description: Whether to include the number of failed jobs in the result or not. Valid values are `true` or `false`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidents
            in: null
            description: Valid values for this property are `true` or `false`.
            If this property has been set to `true` the result will include the corresponding number of incidents
            for each occurred incident type.
            If it is set to `false`, the incidents will not be included in the result.
            Cannot be used in combination with `incidentsForType`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentsForType
            in: null
            description: If this property has been set with any incident type (i.e., a string value) the result
            will only include the number of incidents for the assigned incident type.
            Cannot be used in combination with `incidents`.
            See the [User Guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/incidents/#incident-types)
            for a list of incident types.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/ActivityStatisticsResultDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET /process-definition/key/aProcessDefinitionKey/tenant-id/aTenantId/statistics?failedJobs=true
                        description: Request with Query Parameter `failedJobs=true`
                        value: [{"id":"anActivity","instances":123,"failedJobs":42,"incidents":[]},{"id":"anotherActivity","instances":124,"failedJobs":43,"incidents":[]}]
                        externalValue: null
                        $ref: null
                    }, example-2=class Example {
                        summary: GET /process-definition/key/aProcessDefinitionKey/tenant-id/aTenantId/statistics?incidents=true
                        description: Request with Query Parameter `incidents=true`
                        value: [{"id":"anActivity","instances":123,"failedJobs":0,"incidents":[{"incidentType":"failedJob","incidentCount":42},{"incidentType":"anIncident","incidentCount":20}]},{"id":"anotherActivity","instances":124,"failedJobs":0,"incidents":[{"incidentType":"failedJob","incidentCount":43},{"incidentType":"anIncident","incidentCount":22},{"incidentType":"anotherIncident","incidentCount":15}]}]
                        externalValue: null
                        $ref: null
                    }, example-3=class Example {
                        summary: GET /process-definition/key/aProcessDefinitionKey/tenant-id/aTenantId/statistics?incidentsForType=anIncident
                        description: Request with Query Parameter `incidentsForType=anIncident`
                        value: [{"id":"anActivity","instances":123,"failedJobs":0,"incidents":[{"incidentType":"anIncident","incidentCount":20}]}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid.
            See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given key does not exist.
            See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/key/{key}/tenant-id/{tenant-id}/submit-form	;post class Operation {
    tags: [Process Definition]
    summary: Submit Start Form
    description: Starts the latest version of the process definition for a tenant
    using a set of process variables and the business key.
    If the start event has Form Field Metadata defined, the process engine will perform backend validation
    for any form fields which have validators defined.
    See [Documentation on Generated Task Forms](https://docs.camunda.org/manual/7.14/user-guide/task-forms/#generated-task-forms).
    externalDocs: null
    operationId: submitFormByKeyAndTenantId
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definition to submit the form for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: tenant-id
            in: null
            description: The id of the tenant the process definition belongs to.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/StartProcessInstanceFormDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/process-definition/key/aProcessDefinitionKey/tenant-id/aTenantId/submit-form`
                    description: null
                    value: {"variables":{"aVariable":{"value":"aStringValue","type":"String"},"anotherVariable":{"value":true,"type":"Boolean"}},"businessKey":"myBusinessKey"}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ProcessInstanceDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response 1
                        description: POST `/process-definition/key/aProcessDefinitionKey/tenant-id/aTenantId/submit-form`
                        value: {"links":[{"method":"GET","href":"http://localhost:8080/rest-test/process-instance/anId","rel":"self"}],"id":"anId","definitionId":"aProcessDefinitionId","businessKey":"myBusinessKey","caseInstanceId":null,"tenantId":null,"ended":false,"suspended":false}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: The instance could not be created due to an invalid variable value,
            for example if the value could not be parsed to an `Integer` value or
            the passed variable type is not supported.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given key does not exist.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: The instance could not be created successfully.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-definition/key/{key}/tenant-id/{tenant-id}/suspended	;put class Operation {
    tags: [Process Definition]
    summary: Activate/Suspend by Id
    description: Activates or suspends a given process definition by the latest version of
    the process definition for tenant.
    externalDocs: null
    operationId: updateProcessDefinitionSuspensionStateByKeyAndTenantId
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definition (the latest version thereof) to be activated/suspended.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: tenant-id
            in: null
            description: The id of the tenant the process definition belongs to.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: **Note**: Unallowed properties are `processDefinitionId` and `processDefinitionKey`.
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/ProcessDefinitionSuspensionStateDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: PUT `/process-definition/key/aProcessDefinitionKey/tenant-id/aTenantId/suspended`
                    description: null
                    value: {"suspended":true,"includeProcessInstances":true,"executionDate":"2013-11-21T10:49:45T14:42:45"}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid,
            for example if the provided `executionDate` parameter doesn't have the expected format or
            if the `processDefinitionKey` parameter is `null`. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given key does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-definition/key/{key}/tenant-id/{tenant-id}/xml	;get class Operation {
    tags: [Process Definition]
    summary: Get XML
    description: Retrieves latest version the BPMN 2.0 XML of a process definition.
    Returns the XML for the latest version of the process definition for tenant.
    externalDocs: null
    operationId: getProcessDefinitionBpmn20XmlByKeyAndTenantId
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definition (the latest version thereof) whose XML should be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: tenant-id
            in: null
            description: The id of the tenant the process definition belongs to.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ProcessDefinitionDiagramDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: GET `/process-definition/key/aProcessDefinitionKey/tenant-id/aTenantId/xml`
                        description: null
                        value: {"id":"anProcessDefinitionId","bpmn20Xml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions\n                         xmlns=\"http://www.omg.org/spec/BPMN/20100524/MODEL\"\n                         xmlns:camunda=\"http://camunda.org/schema/1.0/bpmn\"\n                         targetNamespace=\"Examples\">\n                         <process id=\"oneTaskProcess\" isExecutable=\"true\">\n                           <startEvent id=\"theStart\" />\n                           <sequenceFlow id=\"flow1\" sourceRef=\"theStart\" targetRef=\"theEnd\" />\n                           <endEvent id=\"theEnd\" />\n                         </process>\n                       </definitions>"}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 403=class ApiResponse {
            description: The Process Definition xml cannot be retrieved due to missing permissions on the Process Definition resource.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/AuthorizationExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/key/{key}/xml	;get class Operation {
    tags: [Process Definition]
    summary: Get XML
    description: Retrieves latest version the BPMN 2.0 XML of a process definition.
    externalDocs: null
    operationId: getProcessDefinitionBpmn20XmlByKey
    parameters: [class PathParameter {
        class Parameter {
            name: key
            in: null
            description: The key of the process definition (the latest version thereof) whose XML should be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ProcessDefinitionDiagramDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: GET `/process-definition/key/aProcessDefinitionKey/xml`
                        description: null
                        value: {"id":"anProcessDefinitionId","bpmn20Xml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions\n                         xmlns=\"http://www.omg.org/spec/BPMN/20100524/MODEL\"\n                         xmlns:camunda=\"http://camunda.org/schema/1.0/bpmn\"\n                         targetNamespace=\"Examples\">\n                         <process id=\"oneTaskProcess\" isExecutable=\"true\">\n                           <startEvent id=\"theStart\" />\n                           <sequenceFlow id=\"flow1\" sourceRef=\"theStart\" targetRef=\"theEnd\" />\n                           <endEvent id=\"theEnd\" />\n                         </process>\n                       </definitions>"}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 403=class ApiResponse {
            description: The Process Definition xml cannot be retrieved due to missing permissions on the Process Definition resource.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/AuthorizationExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/statistics	;get class Operation {
    tags: [Process Definition]
    summary: Get Process Instance Statistics
    description: Retrieves runtime statistics of the process engine, grouped by process definitions.
    These statistics include the number of running process instances, optionally the number of failed jobs
    and also optionally the number of incidents either grouped by incident types or
    for a specific incident type.
    **Note**: This does not include historic data.
    externalDocs: null
    operationId: getProcessDefinitionStatistics
    parameters: [class QueryParameter {
        class Parameter {
            name: failedJobs
            in: null
            description: Whether to include the number of failed jobs in the result or not. Valid values are `true` or `false`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidents
            in: null
            description: Valid values for this property are `true` or `false`.
            If this property has been set to `true` the result will include the corresponding number of incidents
            for each occurred incident type.
            If it is set to `false`, the incidents will not be included in the result.
            Cannot be used in combination with `incidentsForType`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentsForType
            in: null
            description: If this property has been set with any incident type (i.e., a string value) the result
            will only include the number of incidents for the assigned incident type.
            Cannot be used in combination with `incidents`.
            See the [User Guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/incidents/#incident-types)
            for a list of incident types.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: rootIncidents
            in: null
            description: Valid values for this property are `true` or `false`.
            If this property has been set to `true` the result will include the corresponding number of
            root incidents for each occurred incident type.
            If it is set to `false`, the incidents will not be included in the result.
            Cannot be used in combination with `incidentsForType` or `incidents`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/ProcessDefinitionStatisticsResultDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET /process-definition/statistics?failedJobs=true
                        description: Request with Query Parameter `failedJobs=true`
                        value: [{"id":"aProcessDefinitionId","instances":123,"failedJobs":42,"definition":{"id":"aProcessDefinitionId","key":"aKey","category":null,"description":null,"name":"aName","version":0,"resource":null,"deploymentId":null,"diagram":null,"suspended":false,"tenantId":null,"versionTag":"1.0.0","historyTimeToLive":null,"startableInTasklist":false},"incidents":[]},{"id":"aProcessDefinitionId:2","instances":124,"failedJobs":43,"definition":{"id":"aProcessDefinitionId:2","key":"aKey","category":null,"description":null,"name":"aName","version":0,"resource":null,"deploymentId":null,"diagram":null,"suspended":false,"tenantId":null,"versionTag":null,"historyTimeToLive":null,"startableInTasklist":false},"incidents":[]}]
                        externalValue: null
                        $ref: null
                    }, example-2=class Example {
                        summary: GET /process-definition/statistics?incidents=true
                        description: Request with Query Parameter `incidents=true`
                        value: [{"id":"aProcessDefinitionId","instances":123,"failedJobs":0,"definition":{"id":"aProcessDefinitionId","key":"aKey","category":null,"description":null,"name":"aName","version":0,"resource":null,"deploymentId":null,"diagram":null,"suspended":false,"tenantId":null,"versionTag":"1.0.0","historyTimeToLive":null,"startableInTasklist":false},"incidents":[{"incidentType":"failedJob","incidentCount":42},{"incidentType":"anIncident","incidentCount":20}]},{"id":"aProcessDefinitionId:2","instances":124,"failedJobs":0,"definition":{"id":"aProcessDefinitionId:2","key":"aKey","category":null,"description":null,"name":"aName","version":0,"resource":null,"deploymentId":null,"diagram":null,"suspended":false,"tenantId":null,"versionTag":null,"historyTimeToLive":null,"startableInTasklist":false},"incidents":[{"incidentType":"failedJob","incidentCount":43},{"incidentType":"anIncident","incidentCount":22},{"incidentType":"anotherIncident","incidentCount":15}]}]
                        externalValue: null
                        $ref: null
                    }, example-3=class Example {
                        summary: GET /process-definition/statistics?incidentsForType=anIncident
                        description: Request with Query Parameter `incidentsForType=anIncident`
                        value: [{"id":"aProcessDefinitionId","instances":123,"failedJobs":0,"definition":{"id":"aProcessDefinitionId","key":"aKey","category":null,"description":null,"name":"aName","version":0,"resource":null,"deploymentId":null,"diagram":null,"suspended":false,"tenantId":null,"versionTag":"1.0.0","historyTimeToLive":null,"startableInTasklist":false},"incidents":[{"incidentType":"anIncident","incidentCount":20}]}]
                        externalValue: null
                        $ref: null
                    }, example-4=class Example {
                        summary: GET /process-definition/statistics?rootIncidents=true
                        description: Request with Query Parameter `rootIncidents=true`
                        value: [{"id":"aProcessDefinitionId","instances":123,"failedJobs":0,"definition":{"id":"aProcessDefinitionId","key":"aKey","category":null,"description":null,"name":"aName","version":0,"resource":null,"deploymentId":null,"diagram":null,"suspended":false,"tenantId":null,"versionTag":"1.0.0","historyTimeToLive":null,"startableInTasklist":false},"incidents":[{"incidentType":"failedJob","incidentCount":62},{"incidentType":"anIncident","incidentCount":20}]}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid.
            See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/suspended	;put class Operation {
    tags: [Process Definition]
    summary: Activate/Suspend By Key
    description: Activates or suspends process definitions with the given process definition key.
    externalDocs: null
    operationId: updateProcessDefinitionSuspensionState
    parameters: null
    requestBody: class RequestBody {
        description: **Note**: Unallowed property is `processDefinitionId`.
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/ProcessDefinitionSuspensionStateDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: PUT `/process-definition/suspended`
                    description: null
                    value: {"processDefinitionKey":"aProcessDefinitionKey","suspended":true,"includeProcessInstances":true,"executionDate":"2013-11-21T10:49:45T14:42:45"}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid,
            for example if the provided `executionDate` parameter doesn't have the expected format or
            if the `processDefinitionKey` parameter is `null`. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given key does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-definition/{id}	;get class Operation {
    tags: [Process Definition]
    summary: Get
    description: Retrieves a process definition according to the `ProcessDefinition` interface in the engine.
    externalDocs: null
    operationId: getProcessDefinition
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process definition to be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ProcessDefinitionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 response
                        description: Response of GET `/process-definition/invoice:1:c3a63aaa-2046-11e7-8f94-34f39ab71d4e`
                        value: {"id":"invoice:1:c3a63aaa-2046-11e7-8f94-34f39ab71d4e","key":"invoice","category":"http://www.omg.org/spec/BPMN/20100524/MODEL","description":null,"name":"Invoice Receipt","version":1,"resource":"invoice.v1.bpmn","deploymentId":"c398cd26-2046-11e7-8f94-34f39ab71d4e","diagram":null,"suspended":false,"tenantId":null,"versionTag":null,"historyTimeToLive":5,"startableInTasklist":true}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Process definition with given `id` does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/{id}	;delete class Operation {
    tags: [Process Definition]
    summary: Delete
    description: Deletes a running process instance by id.
    externalDocs: null
    operationId: deleteProcessDefinition
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process definition to be deleted.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class QueryParameter {
        class Parameter {
            name: cascade
            in: null
            description: `true`, if all process instances, historic process instances and jobs
            for this process definition should be deleted.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: skipCustomListeners
            in: null
            description: `true`, if only the built-in ExecutionListeners should be notified with the end event.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: skipIoMappings
            in: null
            description: A boolean value to control whether input/output mappings should be executed during deletion.
            `true`, if input/output mappings should not be invoked.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Not found
            Process definition with given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/{id}/deployed-start-form	;get class Operation {
    tags: [Process Definition]
    summary: Get Deployed Start Form
    description: Retrieves the deployed form that can be referenced from a start event.
    For further information please refer to [User Guide](https://docs.camunda.org/manual/7.14/user-guide/task-forms/#embedded-task-forms).
    externalDocs: null
    operationId: getDeployedStartForm
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process definition to get the deployed start form for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/xhtml+xml=class MediaType {
                    schema: class BinarySchema {
                        class Schema {
                            type: string
                            format: binary
                            $ref: null
                            description: For `application/xhtml+xml` Responses, a byte stream is returned.
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: Resonse for GET `/process-definition/processDefinitionId/deployed-start-form`
                        value: <form role="form" name="invoiceForm"
                                                              class="form-horizontal">
                        
                                                          <div class="form-group">
                                                            <label class="control-label col-md-4"
                                                                   for="creditor">Creditor</label>
                                                            <div class="col-md-8">
                                                              <input cam-variable-name="creditor"
                                                                     cam-variable-type="String"
                                                                     id="creditor"
                                                                     class="form-control"
                                                                     type="text"
                                                                     required />
                                                              <div class="help">
                                                                (e.g. &quot;Great Pizza for Everyone Inc.&quot;)
                                                              </div>
                                                            </div>
                                                          </div>
                        
                                                        </form>
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: The form key has wrong format.  See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 403=class ApiResponse {
            description: The deployed start form cannot be retrieved due to missing permissions on process definition resource.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/AuthorizationExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: No deployed start form for a given process definition exists. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/{id}/diagram	;get class Operation {
    tags: [Process Definition]
    summary: Get Diagram
    description: Retrieves the diagram of a process definition.
    
    If the process definition's deployment contains an image resource with the same file name
    as the process definition, the deployed image will be returned by the Get Diagram endpoint.
    Example: `someProcess.bpmn` and `someProcess.png`.
    Supported file extentions for the image are: `svg`, `png`, `jpg`, and `gif`.
    externalDocs: null
    operationId: getProcessDefinitionDiagram
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process definition.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful. The image diagram of this process.
            headers: null
            content: class Content {
                {application/octet-stream=class MediaType {
                    schema: class BinarySchema {
                        class Schema {
                            type: string
                            format: binary
                            $ref: null
                            description: defaults to `application/octet-stream` if the file suffix is unknown
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: null
                    example: null
                    encoding: null
                }, */*=class MediaType {
                    schema: class BinarySchema {
                        class Schema {
                            type: string
                            format: binary
                            $ref: null
                            description: Files with MIME type information image/png, image/gif, ... 
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 204=class ApiResponse {
            description: The process definition doesn't have an associated diagram.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Multiple schemas found in the OAS 'content' section, returning only the first one (application/octet-stream)
[WARNING] Multiple schemas found in the OAS 'content' section, returning only the first one (application/octet-stream)
[INFO] processOperation: resourcePath=  /process-definition/{id}/form-variables	;get class Operation {
    tags: [Process Definition]
    summary: Get Start Form Variables
    description: Retrieves the start form variables for a process definition
    (only if they are defined via the 
    [Generated Task Form](https://docs.camunda.org/manual/7.14/user-guide/task-forms/#generated-task-forms) approach).
    The start form variables take form data specified on the start event into account.
    If form fields are defined, the variable types and default values
    of the form fields are taken into account.
    externalDocs: null
    operationId: getStartFormVariables
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process definition to retrieve the variables for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class QueryParameter {
        class Parameter {
            name: variableNames
            in: null
            description: A comma-separated list of variable names. Allows restricting the list of requested
            variables to the variable names in the list. It is best practice to restrict the
            list of variables to the variables actually required by the form in order to
            minimize fetching of data. If the query parameter is ommitted all variables are
            fetched. If the query parameter contains non-existent variable names, the variable
            names are ignored.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: deserializeValues
            in: null
            description: Determines whether serializable variable values (typically variables that store
            custom Java objects) should be deserialized on server side (default true).
            
            If set to true, a serializable variable will be deserialized on server side and
            transformed to JSON using [Jackson's](http://jackson.codehaus.org/) POJO/bean
            property introspection feature. Note that this requires the Java classes of the
            variable value to be on the REST API's classpath.
            
            If set to false, a serializable variable will be returned in its serialized format.
            For example, a variable that is serialized as XML will be returned as a JSON string
            containing XML.
            
            **Note**: While true is the default value for reasons of backward compatibility, we
            recommend setting this parameter to false when developing web applications that are
            independent of the Java process applications deployed to the engine.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful. A JSON object containing a property for each variable returned.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class MapSchema {
                        class Schema {
                            type: object
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: class Schema {
                                type: null
                                format: null
                                $ref: #/components/schemas/VariableValueDto
                                description: null
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                not: null
                                properties: null
                                additionalProperties: null
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: GET `/task/anId/form-variables`
                        value: {"amount":{"type":"integer","value":5,"valueInfo":{}},"firstName":{"type":"String","value":"Jonny","valueInfo":{}}}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: The id is null or does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/{id}/history-time-to-live	;put class Operation {
    tags: [Process Definition]
    summary: Update History Time to Live
    description: Updates history time to live for process definition.
    The field is used within [History cleanup](https://docs.camunda.org/manual/7.14/user-guide/process-engine/history/#history-cleanup).
    externalDocs: null
    operationId: updateHistoryTimeToLiveByProcessDefinitionId
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process definition to change history time to live.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/HistoryTimeToLiveDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: PUT `/process-definition/aProcessDefinitionId/history-time-to-live`
                    description: null
                    value: {"historyTimeToLive":5}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the request parameters are invalid. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-definition/{id}/rendered-form	;get class Operation {
    tags: [Process Definition]
    summary: Get Rendered Start Form
    description: Retrieves the rendered form for a process definition.
    This method can be used to get the HTML rendering of a
    [Generated Task Form](https://docs.camunda.org/manual/7.14/user-guide/task-forms/#generated-task-forms).
    externalDocs: null
    operationId: getRenderedStartForm
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process definition to get the rendered start form for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/xhtml+xml=class MediaType {
                    schema: class BinarySchema {
                        class Schema {
                            type: string
                            format: binary
                            $ref: null
                            description: For `application/xhtml+xml` Responses, a byte stream is returned.
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: A `/process-definition/anId/rendered-form` HTML
                                                               GET response body providing the rendered (generated) form content.
                        value: <form class="form-horizontal">
                                                          <div class="control-group">
                                                            <label class="control-label">Customer ID</label>
                                                            <div class="controls">
                                                              <input form-field type="string" name="customerId"></input>
                                                            </div>
                                                          </div>
                                                          <div class="control-group">
                                                            <label class="control-label">Amount</label>
                                                            <div class="controls">
                                                              <input form-field type="number" name="amount"></input>
                                                            </div>
                                                          </div>
                                                        </form>
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Process definition has no form field metadata defined. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given id does not exist.  See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/{id}/restart	;post class Operation {
    tags: [Process Definition]
    summary: Restart Process Instance
    description: Restarts process instances that were canceled or terminated synchronously.
    Can also restart completed process instances.
    It will create a new instance using the original instance information.
    To execute the restart asynchronously, use the
    [Restart Process Instance Async](https://docs.camunda.org/manual/7.14/reference/rest/process-definition/post-restart-process-instance-async/) method.
    
    For more information about the difference between synchronous and asynchronous execution,
    please refer to the related section of the
    [User Guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/process-instance-restart/#execution).
    externalDocs: null
    operationId: restartProcessInstance
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process definition of the process instances to restart.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/RestartProcessInstanceDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: Restarting one or more Process Instances with known processInstanceIds
                    description: null
                    value: {"instructions":[{"type":"startAfterActivity","activityId":"aUserTask"}],"processInstanceIds":["aProcessInstance","anotherProcessInstance"],"initialVariables":true,"skipCustomListeners":true,"withoutBusinessKey":true}
                    externalValue: null
                    $ref: null
                }, example-2=class Example {
                    summary: Restarting one or more Process Instances using a historicProcessInstanceQuery
                    description: null
                    value: {"instructions":[{"type":"startAfterActivity","activityId":"aUserTask"}],"historicProcessInstanceQuery":{"processDefinitionId":"aProcessDefinitionId","processInstanceBusinessKey":"businessKey"},"initialVariables":true,"skipCustomListeners":true,"withoutBusinessKey":true}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: In case following parameters are missing: `instructions`, `activityId` or `transitionId`,
            `processInstanceIds` or `historicProcessInstanceQuery`, an exception of type `InvalidRequestException` is returned. 
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-definition/{id}/restart-async	;post class Operation {
    tags: [Process Definition]
    summary: Restart Process Instance Async
    description: Restarts process instances that were canceled or terminated asynchronously.
    Can also restart completed process instances.
    It will create a new instance using the original instance information.
    To execute the restart asynchronously, use the
    [Restart Process Instance](https://docs.camunda.org/manual/7.14/reference/rest/process-definition/post-restart-process-instance-sync/) method.
    
    For more information about the difference between synchronous and asynchronous execution,
    please refer to the related section of the
    [User Guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/process-instance-restart/#execution).
    externalDocs: null
    operationId: restartProcessInstanceAsyncOperation
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process definition of the process instances to restart.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/RestartProcessInstanceDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: Restarting one or more Process Instances with known processInstanceIds
                    description: null
                    value: {"instructions":[{"type":"startAfterActivity","activityId":"aUserTask"}],"processInstanceIds":["aProcessInstance","anotherProcessInstance"],"initialVariables":true,"skipCustomListeners":true,"withoutBusinessKey":true}
                    externalValue: null
                    $ref: null
                }, example-2=class Example {
                    summary: Restarting one or more Process Instances using a historicProcessInstanceQuery
                    description: null
                    value: {"instructions":[{"type":"startAfterActivity","activityId":"aUserTask"}],"historicProcessInstanceQuery":{"processDefinitionId":"aProcessDefinitionId","processInstanceBusinessKey":"businessKey"},"initialVariables":true,"skipCustomListeners":true,"withoutBusinessKey":true}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/BatchDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: null
                        value: {"id":"aBatchId","type":"aBatchType","totalJobs":10,"jobsCreated":10,"batchJobsPerSeed":100,"invocationsPerBatchJob":1,"seedJobDefinitionId":"aSeedJobDefinitionId","monitorJobDefinitionId":"aMonitorJobDefinitionId","batchJobDefinitionId":"aBatchJobDefinitionId","tenantId":"aTenantId","suspended":false,"createUserId":"demo"}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: In case following parameters are missing: `instructions`, `activityId` or `transitionId`,
            `processInstanceIds` or `historicProcessInstanceQuery`,
            an exception of type `InvalidRequestException` is returned. 
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-definition/{id}/start	;post class Operation {
    tags: [Process Definition]
    summary: Start Instance
    description: Instantiates a given process definition.
    Process variables and business key may be supplied in the request body.
    externalDocs: null
    operationId: startProcessInstance
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process definition to be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/StartProcessInstanceDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: Starting a process instance at its default initial activity
                    description: null
                    value: {"variables":{"aVariable":{"value":"aStringValue","type":"String"},"anotherVariable":{"value":true,"type":"Boolean"}},"businessKey":"myBusinessKey"}
                    externalValue: null
                    $ref: null
                }, example-2=class Example {
                    summary: Starting a process instance with variables in return
                    description: null
                    value: {"variables":{"aVariable":{"value":"aStringValue","type":"String"},"anotherVariable":{"value":true,"type":"Boolean"}},"businessKey":"myBusinessKey","withVariablesInReturn":true}
                    externalValue: null
                    $ref: null
                }, example-3=class Example {
                    summary: Starting a process instance at two specific activities
                    description: null
                    value: {"variables":{"aProcessVariable":{"value":"aStringValue","type":"String"}},"businessKey":"myBusinessKey","skipCustomListeners":true,"startInstructions":[{"type":"startBeforeActivity","activityId":"activityId","variables":{"var":{"value":"aVariableValue","local":false,"type":"String"}}},{"type":"startAfterActivity","activityId":"anotherActivityId","variables":{"varLocal":{"value":"anotherVariableValue","local":true,"type":"String"}}}]}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ProcessInstanceWithVariablesDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response 1
                        description: Response for starting a process instance at its default initial activity
                        value: {"links":[{"method":"GET","href":"http://localhost:8080/rest-test/process-instance/anId","rel":"self"}],"id":"anId","definitionId":"aProcessDefinitionId","businessKey":"myBusinessKey","caseInstanceId":null,"tenantId":null,"ended":false,"suspended":false}
                        externalValue: null
                        $ref: null
                    }, example-2=class Example {
                        summary: Status 200 Response 2
                        description: Response for starting a process instance with variables in return
                        value: {"links":[{"method":"GET","href":"http://localhost:8080/rest-test/process-instance/aProcInstId","rel":"self"}],"id":"aProcInstId","definitionId":"aProcessDefinitionId","businessKey":"myBusinessKey","caseInstanceId":null,"ended":false,"suspended":false,"tenantId":null,"variables":{"anotherVariable":{"type":"Boolean","value":true,"valueInfo":{"transient":true}},"aVariable":{"type":"String","value":"aStringValue","valueInfo":{}}}}
                        externalValue: null
                        $ref: null
                    }, example-3=class Example {
                        summary: Status 200 Response 3
                        description: Response for starting a process instance at two specific activities
                        value: {"links":[{"method":"GET","href":"http://localhost:8080/rest-test/process-instance/anId","rel":"self"}],"id":"anId","definitionId":"aProcessDefinitionId","businessKey":"myBusinessKey","caseInstanceId":null,"tenantId":null,"ended":false,"suspended":false}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: The instance could not be created due to an invalid variable value,
            for example if the value could not be parsed to an `Integer` value or
            the passed variable type is not supported.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: The instance could not be created successfully.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-definition/{id}/startForm	;get class Operation {
    tags: [Process Definition]
    summary: Get Start Form Key
    description: Retrieves the key of the start form for a process definition.
    The form key corresponds to the `FormData#formKey` property in the engine.
    externalDocs: null
    operationId: getStartForm
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process definition to get the start form key for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/FormDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: GET `process-definition/anId/startForm`
                        value: {"key":"aFormKey","contextPath":"http://localhost:8080/my-process-application/"}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Process definition has no start form defined. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given id does not exist.  See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/{id}/statistics	;get class Operation {
    tags: [Process Definition]
    summary: Get Activity Instance Statistics
    description: Retrieves runtime statistics of a given process definition, grouped by activities.
    These statistics include the number of running activity instances, optionally the number of failed jobs
    and also optionally the number of incidents either grouped by incident types or for a specific incident type.
    **Note**: This does not include historic data.
    externalDocs: null
    operationId: getActivityStatistics
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process definition.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class QueryParameter {
        class Parameter {
            name: failedJobs
            in: null
            description: Whether to include the number of failed jobs in the result or not. Valid values are `true` or `false`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidents
            in: null
            description: Valid values for this property are `true` or `false`.
            If this property has been set to `true` the result will include the corresponding number of incidents
            for each occurred incident type.
            If it is set to `false`, the incidents will not be included in the result.
            Cannot be used in combination with `incidentsForType`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentsForType
            in: null
            description: If this property has been set with any incident type (i.e., a string value) the result
            will only include the number of incidents for the assigned incident type.
            Cannot be used in combination with `incidents`.
            See the [User Guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/incidents/#incident-types)
            for a list of incident types.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/ActivityStatisticsResultDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET /process-definition/aProcessDefinitionId/statistics?failedJobs=true
                        description: Request with Query Parameter `failedJobs=true`
                        value: [{"id":"anActivity","instances":123,"failedJobs":42,"incidents":[]},{"id":"anotherActivity","instances":124,"failedJobs":43,"incidents":[]}]
                        externalValue: null
                        $ref: null
                    }, example-2=class Example {
                        summary: GET /process-definition/aProcessDefinitionId/statistics?incidents=true
                        description: Request with Query Parameter `incidents=true`
                        value: [{"id":"anActivity","instances":123,"failedJobs":0,"incidents":[{"incidentType":"failedJob","incidentCount":42},{"incidentType":"anIncident","incidentCount":20}]},{"id":"anotherActivity","instances":124,"failedJobs":0,"incidents":[{"incidentType":"failedJob","incidentCount":43},{"incidentType":"anIncident","incidentCount":22},{"incidentType":"anotherIncident","incidentCount":15}]}]
                        externalValue: null
                        $ref: null
                    }, example-3=class Example {
                        summary: GET /process-definition/aProcessDefinitionId/statistics?incidentsForType=anIncident
                        description: Request with Query Parameter `incidentsForType=anIncident`
                        value: [{"id":"anActivity","instances":123,"failedJobs":0,"incidents":[{"incidentType":"anIncident","incidentCount":20}]}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid.
            See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given key does not exist.
            See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-definition/{id}/submit-form	;post class Operation {
    tags: [Process Definition]
    summary: Submit Start Form
    description: Starts a process instance using a set of process variables and the business key.
    If the start event has Form Field Metadata defined, the process engine will perform backend validation
    for any form fields which have validators defined.
    See [Documentation on Generated Task Forms](https://docs.camunda.org/manual/7.14/user-guide/task-forms/#generated-task-forms).
    externalDocs: null
    operationId: submitForm
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process definition to submit the form for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/StartProcessInstanceFormDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/process-definition/aProcessDefinitionId/submit-form`
                    description: null
                    value: {"variables":{"aVariable":{"value":"aStringValue","type":"String"},"anotherVariable":{"value":true,"type":"Boolean"}},"businessKey":"myBusinessKey"}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ProcessInstanceDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response 1
                        description: POST `/process-definition/aProcessDefinitionId/submit-form`
                        value: {"links":[{"method":"GET","href":"http://localhost:8080/rest-test/process-instance/anId","rel":"self"}],"id":"anId","definitionId":"aProcessDefinitionId","businessKey":"myBusinessKey","caseInstanceId":null,"tenantId":null,"ended":false,"suspended":false}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: The instance could not be created due to an invalid variable value,
            for example if the value could not be parsed to an `Integer` value or
            the passed variable type is not supported.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given id does not exist.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: The instance could not be created successfully.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-definition/{id}/suspended	;put class Operation {
    tags: [Process Definition]
    summary: Activate/Suspend By Id
    description: Activates or suspends a given process definition by id.
    externalDocs: null
    operationId: updateProcessDefinitionSuspensionStateById
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process definition to activate or suspend.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: **Note**: Unallowed properties are `processDefinitionId` and `processDefinitionKey`.
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/ProcessDefinitionSuspensionStateDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: PUT `/process-definition/aProcessDefinitionId/suspended`
                    description: null
                    value: {"suspended":true,"includeProcessInstances":true,"executionDate":"2013-11-21T10:49:45T14:42:45"}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid,
            for example if the provided `executionDate` parameter doesn't have the expected format or
            if the `processDefinitionKey` parameter is `null`. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given key does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-definition/{id}/xml	;get class Operation {
    tags: [Process Definition]
    summary: Get XML
    description: Retrieves the BPMN 2.0 XML of a process definition.
    externalDocs: null
    operationId: getProcessDefinitionBpmn20Xml
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process definition.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ProcessDefinitionDiagramDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: GET `/process-definition/id/aProcessDefinitionId/xml`
                        description: null
                        value: {"id":"anProcessDefinitionId","bpmn20Xml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions\n                         xmlns=\"http://www.omg.org/spec/BPMN/20100524/MODEL\"\n                         xmlns:camunda=\"http://camunda.org/schema/1.0/bpmn\"\n                         targetNamespace=\"Examples\">\n                         <process id=\"oneTaskProcess\" isExecutable=\"true\">\n                           <startEvent id=\"theStart\" />\n                           <sequenceFlow id=\"flow1\" sourceRef=\"theStart\" targetRef=\"theEnd\" />\n                           <endEvent id=\"theEnd\" />\n                         </process>\n                       </definitions>"}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid.
            See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 403=class ApiResponse {
            description: The Process Definition xml cannot be retrieved due to missing permissions on the Process Definition resource.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/AuthorizationExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process definition with given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-instance	;get class Operation {
    tags: [Process Instance]
    summary: null
    description: Queries for process instances that fulfill given parameters.
    Parameters may be static as well as dynamic runtime properties of process instances.
    The size of the result set can be retrieved by using the Get Instance Count method.
    externalDocs: null
    operationId: getProcessInstances
    parameters: [class QueryParameter {
        class Parameter {
            name: sortBy
            in: null
            description: Sort the results lexicographically by a given criterion.
            Must be used in conjunction with the sortOrder parameter.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: sortOrder
            in: null
            description: Sort the results in a given order. Values may be asc for ascending order or desc for descending order.
            Must be used in conjunction with the sortBy parameter.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: firstResult
            in: null
            description: Pagination of results. Specifies the index of the first result to return.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: maxResults
            in: null
            description: Pagination of results. Specifies the maximum number of results to return.
            Will return less results if there are no more results left.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceIds
            in: null
            description: Filter by a comma-separated list of process instance ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: businessKey
            in: null
            description: Filter by process instance business key.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: businessKeyLike
            in: null
            description: Filter by process instance business key that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: caseInstanceId
            in: null
            description: Filter by case instance id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionId
            in: null
            description: Filter by the deployment the id belongs to.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionKey
            in: null
            description: Filter by the key of the process definition the instances run on.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionKeyIn
            in: null
            description: Filter by a comma-separated list of process definition keys.
            A process instance must have one of the given process definition keys.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionKeyNotIn
            in: null
            description: Exclude instances by a comma-separated list of process definition keys.
            A process instance must not have one of the given process definition keys.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: deploymentId
            in: null
            description: Filter by the deployment the id belongs to.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: superProcessInstance
            in: null
            description: Restrict query to all process instances that are sub process instances of the given process instance.
            Takes a process instance id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: subProcessInstance
            in: null
            description: Restrict query to all process instances that have the given process instance as a sub process instance.
            Takes a process instance id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: superCaseInstance
            in: null
            description: Restrict query to all process instances that are sub process instances of the given case instance.
            Takes a case instance id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: subCaseInstance
            in: null
            description: Restrict query to all process instances that have the given case instance as a sub case instance.
            Takes a case instance id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: active
            in: null
            description: Only include active process instances. Value may only be true,
            as false is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: suspended
            in: null
            description: Only include suspended process instances. Value may only be true,
            as false is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withIncident
            in: null
            description: Filter by presence of incidents. Selects only process instances that have an incident.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentId
            in: null
            description: Filter by the incident id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentType
            in: null
            description: Filter by the incident type.
            See the [User Guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/incidents/#incident-types)
            for a list of incident types.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentMessage
            in: null
            description: Filter by the incident message. Exact match.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentMessageLike
            in: null
            description: Filter by the incident message that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: tenantIdIn
            in: null
            description: Filter by a comma-separated list of tenant ids. A process instance must have one of the given tenant ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withoutTenantId
            in: null
            description: Only include process instances which belong to no tenant.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionWithoutTenantId
            in: null
            description: Only include process instances which process definition has no tenant id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: activityIdIn
            in: null
            description: Filter by a comma-separated list of activity ids.
            A process instance must currently wait in a leaf activity with one of the given activity ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: rootProcessInstances
            in: null
            description: Restrict the query to all process instances that are top level process instances.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: leafProcessInstances
            in: null
            description: Restrict the query to all process instances that are leaf instances. (i.e. don't have any sub instances).
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: variables
            in: null
            description: Only include process instances that have variables with certain values.
            Variable filtering expressions are comma-separated and are structured as follows:
            
            A valid parameter value has the form `key_operator_value`. `key` is the variable name,
            `operator` is the comparison operator to be used and `value` the variable value.
            
            **Note**: Values are always treated as String objects on server side.
            
            Valid `operator` values are:
            `eq` - equal to;
            `neq` - not equal to;
            `gt` - greater than;
            `gteq` - greater than or equal to;
            `lt` - lower than;
            `lteq` - lower than or equal to;
            `like`.
            `key` and `value` may not contain underscore or comma characters.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: variableNamesIgnoreCase
            in: null
            description: Match all variable names in this query case-insensitively.
            If set to true variableName and variablename are treated as equal.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: variableValuesIgnoreCase
            in: null
            description: Match all variable values in this query case-insensitively.
            If set to true variableValue and variablevalue are treated as equal.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/ProcessInstanceDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 response
                        description: Response for GET `/process-instance?variables=myVariable_eq_camunda,mySecondVariable_neq_aBadValue`
                        value: [{"links":[],"id":"anId","definitionId":"aProcDefId","businessKey":"aKey","caseInstanceId":"aCaseInstanceId","ended":false,"suspended":false,"tenantId":null}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            Returned if some of the query parameters are invalid,
            for example if a sortOrder parameter is supplied, but no sortBy, or if an invalid operator for variable comparison is used.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-instance	;post class Operation {
    tags: [Process Instance]
    summary: null
    description: Queries for process instances that fulfill given parameters through a JSON object.
    This method is slightly more powerful than the Get Instances method because
    it allows filtering by multiple process variables of types `string`, `number` or `boolean`.
    externalDocs: null
    operationId: queryProcessInstances
    parameters: [class QueryParameter {
        class Parameter {
            name: firstResult
            in: null
            description: Pagination of results. Specifies the index of the first result to return.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: maxResults
            in: null
            description: Pagination of results. Specifies the maximum number of results to return.
            Will return less results if there are no more results left.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/ProcessInstanceQueryDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/process-instance` Request Body 1
                    description: null
                    value: {"variables":[{"name":"myVariable","operator":"eq","value":"camunda"},{"name":"mySecondVariable","operator":"neq","value":124}],"processDefinitionId":"aProcessDefinitionId","sorting":[{"sortBy":"definitionKey","sortOrder":"asc"},{"sortBy":"instanceId","sortOrder":"desc"}]}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/ProcessInstanceDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response 1
                        description: null
                        value: [{"links":[],"id":"anId","definitionId":"aProcessDefinitionId","businessKey":"aKey","caseInstanceId":"aCaseInstanceId","ended":false,"suspended":false,"tenantId":null}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            Returned if some of the query parameters are invalid,
            for example if a sortOrder parameter is supplied, but no sortBy, or if an invalid operator for variable comparison is used.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-instance/count	;get class Operation {
    tags: [Process Instance]
    summary: null
    description: Queries for the number of process instances that fulfill given parameters.
    externalDocs: null
    operationId: getProcessInstancesCount
    parameters: [class QueryParameter {
        class Parameter {
            name: processInstanceIds
            in: null
            description: Filter by a comma-separated list of process instance ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: businessKey
            in: null
            description: Filter by process instance business key.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: businessKeyLike
            in: null
            description: Filter by process instance business key that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: caseInstanceId
            in: null
            description: Filter by case instance id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionId
            in: null
            description: Filter by the deployment the id belongs to.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionKey
            in: null
            description: Filter by the key of the process definition the instances run on.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionKeyIn
            in: null
            description: Filter by a comma-separated list of process definition keys.
            A process instance must have one of the given process definition keys.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionKeyNotIn
            in: null
            description: Exclude instances by a comma-separated list of process definition keys.
            A process instance must not have one of the given process definition keys.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: deploymentId
            in: null
            description: Filter by the deployment the id belongs to.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: superProcessInstance
            in: null
            description: Restrict query to all process instances that are sub process instances of the given process instance.
            Takes a process instance id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: subProcessInstance
            in: null
            description: Restrict query to all process instances that have the given process instance as a sub process instance.
            Takes a process instance id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: superCaseInstance
            in: null
            description: Restrict query to all process instances that are sub process instances of the given case instance.
            Takes a case instance id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: subCaseInstance
            in: null
            description: Restrict query to all process instances that have the given case instance as a sub case instance.
            Takes a case instance id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: active
            in: null
            description: Only include active process instances. Value may only be true,
            as false is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: suspended
            in: null
            description: Only include suspended process instances. Value may only be true,
            as false is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withIncident
            in: null
            description: Filter by presence of incidents. Selects only process instances that have an incident.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentId
            in: null
            description: Filter by the incident id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentType
            in: null
            description: Filter by the incident type.
            See the [User Guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/incidents/#incident-types)
            for a list of incident types.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentMessage
            in: null
            description: Filter by the incident message. Exact match.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: incidentMessageLike
            in: null
            description: Filter by the incident message that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: tenantIdIn
            in: null
            description: Filter by a comma-separated list of tenant ids. A process instance must have one of the given tenant ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withoutTenantId
            in: null
            description: Only include process instances which belong to no tenant.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionWithoutTenantId
            in: null
            description: Only include process instances which process definition has no tenant id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: activityIdIn
            in: null
            description: Filter by a comma-separated list of activity ids.
            A process instance must currently wait in a leaf activity with one of the given activity ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: rootProcessInstances
            in: null
            description: Restrict the query to all process instances that are top level process instances.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: leafProcessInstances
            in: null
            description: Restrict the query to all process instances that are leaf instances. (i.e. don't have any sub instances).
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: variables
            in: null
            description: Only include process instances that have variables with certain values.
            Variable filtering expressions are comma-separated and are structured as follows:
            
            A valid parameter value has the form `key_operator_value`. `key` is the variable name,
            `operator` is the comparison operator to be used and `value` the variable value.
            
            **Note**: Values are always treated as String objects on server side.
            
            Valid `operator` values are:
            `eq` - equal to;
            `neq` - not equal to;
            `gt` - greater than;
            `gteq` - greater than or equal to;
            `lt` - lower than;
            `lteq` - lower than or equal to;
            `like`.
            `key` and `value` may not contain underscore or comma characters.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: variableNamesIgnoreCase
            in: null
            description: Match all variable names in this query case-insensitively.
            If set to true variableName and variablename are treated as equal.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: variableValuesIgnoreCase
            in: null
            description: Match all variable values in this query case-insensitively.
            If set to true variableValue and variablevalue are treated as equal.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/CountResultDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 response
                        description: Response for GET `/process-instance/count?variables=myVariable_eq_camunda`
                        value: {"count":1}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            Returned if some of the query parameters are invalid, for example an invalid operator for variable comparison is used.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-instance/count	;post class Operation {
    tags: [Process Instance]
    summary: null
    description: Queries for the number of process instances that fulfill the given parameters.
    This method takes the same message body as the Get Instances (POST) method and
    therefore it is slightly more powerful than the Get Instance Count method.
    externalDocs: null
    operationId: queryProcessInstancesCount
    parameters: null
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/ProcessInstanceQueryDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/process-instance/count` Request Body 1
                    description: null
                    value: {"variables":[{"name":"myVariable","operator":"eq","value":"camunda"},{"name":"mySecondVariable","operator":"neq","value":124}],"processDefinitionId":"aProcessDefinitionId"}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/CountResultDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response 1
                        description: null
                        value: {"count":1}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            Returned if some of the query parameters are invalid, for example if an invalid operator for variable comparison is used.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-instance/delete	;post class Operation {
    tags: [Process Instance]
    summary: null
    description: Deletes multiple process instances asynchronously (batch).
    externalDocs: null
    operationId: deleteProcessInstancesAsyncOperation
    parameters: null
    requestBody: class RequestBody {
        description: **Unallowed property**: `historicProcessInstanceQuery`
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/DeleteProcessInstancesDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/process-instance/delete` Request Body 1
                    description: null
                    value: {"deleteReason":"aReason","processInstanceIds":["aProcess","secondProcess"],"skipCustomListeners":true,"skipSubprocesses":true}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/BatchDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response 1
                        description: null
                        value: {"id":"aBatchId","type":"aBatchType","totalJobs":10,"jobsCreated":10,"batchJobsPerSeed":100,"invocationsPerBatchJob":1,"seedJobDefinitionId":"aSeedJobDefinitionId","monitorJobDefinitionId":"aMonitorJobDefinitionId","batchJobDefinitionId":"aBatchJobDefinitionId","tenantId":"aTenantId","suspended":false,"createUserId":"demo"}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            Returned if some of the query parameters are invalid, i.e., neither processInstanceIds, nor processInstanceQuery is present
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-instance/delete-historic-query-based	;post class Operation {
    tags: [Process Instance]
    summary: null
    description: Deletes a set of process instances asynchronously (batch) based on a historic process instance query.
    externalDocs: null
    operationId: deleteAsyncHistoricQueryBased
    parameters: null
    requestBody: class RequestBody {
        description: **Unallowed property**: `processInstanceQuery`
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/DeleteProcessInstancesDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/process-instance/delete-historic-query-based` Request Body 1
                    description: null
                    value: {"deleteReason":"aReason","historicProcessInstanceQuery":{"startedBefore":"2017-04-28T11:24:37.765+0200"},"skipCustomListeners":true,"skipSubprocesses":true}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/BatchDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response 1
                        description: null
                        value: {"id":"aBatchId","type":"aBatchType","totalJobs":10,"jobsCreated":10,"batchJobsPerSeed":100,"invocationsPerBatchJob":1,"seedJobDefinitionId":"aSeedJobDefinitionId","monitorJobDefinitionId":"aMonitorJobDefinitionId","batchJobDefinitionId":"aBatchJobDefinitionId","tenantId":"aTenantId","suspended":false,"createUserId":"demo"}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            Returned if some of the query parameters are invalid, i.e., neither processInstanceIds, nor historicProcessInstanceQuery is present
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-instance/job-retries	;post class Operation {
    tags: [Process Instance]
    summary: null
    description: Create a batch to set retries of jobs associated with given processes asynchronously.
    externalDocs: null
    operationId: setRetriesByProcess
    parameters: null
    requestBody: class RequestBody {
        description: Please note that if both processInstances and processInstanceQuery are provided,
        then the resulting execution will be performed on the union of these sets.
        **Unallowed property**: `historicProcessInstanceQuery`
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/SetJobRetriesByProcessDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/process-instance/job-retries` Request Body 1
                    description: null
                    value: {"retries":5,"processInstances":["aProcess","secondProcess"],"processInstanceQuery":{"processDefinitionId":"aProcessDefinitionId"}}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/BatchDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: null
                        description: null
                        value: {"id":"aBatchId","type":"aBatchType","totalJobs":10,"batchJobsPerSeed":100,"jobsCreated":10,"invocationsPerBatchJob":1,"seedJobDefinitionId":"aSeedJobDefinitionId","monitorJobDefinitionId":"aMonitorJobDefinitionId","batchJobDefinitionId":"aBatchJobDefinitionId","suspended":false,"tenantId":"aTenantId","createUserId":"demo"}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            Returned if some of the query parameters are invalid, for example if neither processInstanceIds, nor processInstanceQuery is present.
            Or if the retry count is not specified.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-instance/job-retries-historic-query-based	;post class Operation {
    tags: [Process Instance]
    summary: null
    description: Create a batch to set retries of jobs asynchronously based on a historic process instance query.
    externalDocs: null
    operationId: setRetriesByProcessHistoricQueryBased
    parameters: null
    requestBody: class RequestBody {
        description: Please note that if both processInstances and historicProcessInstanceQuery are provided,
        then the resulting execution will be performed on the union of these sets.
        **Unallowed property**: `processInstanceQuery`
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/SetJobRetriesByProcessDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/process-instance/job-retries-historic-query-based` Request Body 1
                    description: null
                    value: {"retries":5,"historicProcessInstanceQuery":{"startedBefore":"2017-04-28T11:24:37.769+0200"},"processInstances":["aProcess","secondProcess"]}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/BatchDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: null
                        value: {"id":"aBatchId","type":"aBatchType","totalJobs":10,"jobsCreated":10,"batchJobsPerSeed":100,"invocationsPerBatchJob":1,"seedJobDefinitionId":"aSeedJobDefinitionId","monitorJobDefinitionId":"aMonitorJobDefinitionId","batchJobDefinitionId":"aBatchJobDefinitionId","tenantId":"aTenantId","suspended":false,"createUserId":"demo"}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            Returned if some of the query parameters are invalid, for example if neither processInstanceIds, nor historicProcessInstanceQuery is present.
            Or if the retry count is not specified.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-instance/suspended	;put class Operation {
    tags: [Process Instance]
    summary: null
    description: Activates or suspends process instances by providing certain criteria:
    
    # Activate/Suspend Process Instance By Process Definition Id
    * `suspend`
    * `processDefinitionId`
    
    # Activate/Suspend Process Instance By Process Definition Key
    
    * `suspend`
    * `processDefinitionKey`
    * `processDefinitionTenantId`
    * `processDefinitionWithoutTenantId`
    
    # Activate/Suspend Process Instance In Group
    * `suspend`
    * `processInstanceIds`
    * `processInstanceQuery`
    * `historicProcessInstanceQuery`
    externalDocs: null
    operationId: updateSuspensionState
    parameters: null
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/ProcessInstanceSuspensionStateDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: PUT `/process-instance/suspended`
                    description: Suspend Process Instance By Process Definition Id
                    value: {"processDefinitionId":"aProcDefId","suspended":true}
                    externalValue: null
                    $ref: null
                }, example-2=class Example {
                    summary: PUT `/process-instance/suspended`
                    description: Suspend Process Instance By Process Definition Key
                    value: {"processDefinitionKey":"aProcDefKey","suspended":true}
                    externalValue: null
                    $ref: null
                }, example-3=class Example {
                    summary: PUT `/process-instance/suspended`
                    description: Suspend Process Instance In Group
                    value: {"processInstanceIds":["processInstanceId1","processInstanceIdN"],"suspended":true}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            Returned if some of the request parameters are invalid,
            for example if the provided processDefinitionId or processDefinitionKey parameter is null.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-instance/suspended-async	;post class Operation {
    tags: [Process Instance]
    summary: null
    description: Activates or suspends process instances asynchronously with a list of process instance ids,
    a process instance query, and/or a historical process instance query.
    externalDocs: null
    operationId: updateSuspensionStateAsyncOperation
    parameters: null
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/ProcessInstanceSuspensionStateAsyncDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/process-instance/suspended-async`
                    description: Suspend Process Instance In Batch
                    value: {"processInstanceIds":["processInstanceId1","processInstanceIdN"],"suspended":true}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/BatchDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: null
                        value: {"id":"aBatchId","type":"aBatchType","totalJobs":10,"jobsCreated":10,"batchJobsPerSeed":100,"invocationsPerBatchJob":1,"seedJobDefinitionId":"aSeedJobDefinitionId","monitorJobDefinitionId":"aMonitorJobDefinitionId","batchJobDefinitionId":"aBatchJobDefinitionId","tenantId":"aTenantId","suspended":false,"createUserId":"demo"}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            Returned if some of the request parameters are invalid,
            for example if the provided processDefinitionId or processDefinitionKey parameter is null.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-instance/variables-async	;post class Operation {
    tags: [Process Instance]
    summary: null
    description: Update or create runtime process variables in the root scope of process instances.
    externalDocs: null
    operationId: setVariablesAsyncOperation
    parameters: null
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/SetVariablesAsyncDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST /process-instance/variables-async
                    description: Set variables to process instances in a batch
                    value: {"processInstanceIds":["b4d2ad98-7240-11e9-98b7-be5e0f7575b7"],"processInstanceQuery":{"processDefinitionKey":"my-process-definition-key"},"variables":{"myVariableName":{"value":"myStringValue"}}}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/BatchDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: null
                        value: {"id":"120b568d-724a-11e9-98b7-be5e0f7575b7","type":"set-variables","totalJobs":12,"batchJobsPerSeed":100,"invocationsPerBatchJob":1,"seedJobDefinitionId":"120b5690-724a-11e9-98b7-be5e0f7575b7","monitorJobDefinitionId":"120b568f-724a-11e9-98b7-be5e0f7575b7","batchJobDefinitionId":"120b568e-724a-11e9-98b7-be5e0f7575b7","tenantId":"accounting","suspended":false,"createUserId":null}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            * The variable value or type is invalid, for example if the value could not be parsed to an Integer value or
            the passed variable type is not supported
            * If none of `processInstanceIds`, `processInstanceQuery` and `historicProcessInstanceQuery` is given
            * If no or an empty array of `variables` is given
            * If no process instance ids where found
            * If a transient variable is set
            * If the engine config flag `javaSerializationFormatEnabled` is `false` and a Java serialized variable is given
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 403=class ApiResponse {
            description: Returned if the user is not allowed to create the batch.
            
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for the
            error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/AuthorizationExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-instance/{id}	;get class Operation {
    tags: [Process Instance]
    summary: Get Process Instance
    description: Retrieves a process instance by id, according to the `ProcessInstance` interface in the engine.
    externalDocs: null
    operationId: getProcessInstance
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process instance to be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ProcessInstanceDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: GET `/process-instance/aProcessInstanceId`
                        description: null
                        value: {"id":"aProcessInstanceId","definitionId":"aProcDefId","businessKey":"aKey","caseInstanceId":"aCaseInstanceId","ended":false,"suspended":false,"tenantId":null}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Process instance with given id does not exist. See the 
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for the error response format. 
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-instance/{id}	;delete class Operation {
    tags: [Process Instance]
    summary: null
    description: Deletes a running process instance by id.
    externalDocs: null
    operationId: deleteProcessInstance
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process instance to be deleted.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class QueryParameter {
        class Parameter {
            name: skipCustomListeners
            in: null
            description: If set to true, the custom listeners will be skipped.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: skipIoMappings
            in: null
            description: If set to true, the input/output mappings will be skipped.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: skipSubprocesses
            in: null
            description: If set to true, subprocesses related to deleted processes will be skipped.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: failIfNotExists
            in: null
            description: If set to false, the request will still be successful if the process id is not found.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Not found
            Process instance with given id does not exist. 
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-instance/{id}/activity-instances	;get class Operation {
    tags: [Process Instance]
    summary: null
    description: Retrieves an Activity Instance (Tree) for a given process instance by id.
    externalDocs: null
    operationId: getActivityInstanceTree
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process instance for which the activity instance should be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ActivityInstanceDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: GET `/process-instance/aProcessInstanceId/activity-instances`
                        description: null
                        value: {"id":"eca75c6b-f70c-11e9-8777-e4a7a094a9d6","parentActivityInstanceId":null,"activityId":"invoice:2:e9d77375-f70c-11e9-8777-e4a7a094a9d6","activityType":"processDefinition","processInstanceId":"eca75c6b-f70c-11e9-8777-e4a7a094a9d6","processDefinitionId":"invoice:2:e9d77375-f70c-11e9-8777-e4a7a094a9d6","childActivityInstances":[{"id":"approveInvoice:eca89509-f70c-11e9-8777-e4a7a094a9d6","parentActivityInstanceId":"eca75c6b-f70c-11e9-8777-e4a7a094a9d6","activityId":"approveInvoice","activityType":"userTask","processInstanceId":"eca75c6b-f70c-11e9-8777-e4a7a094a9d6","processDefinitionId":"invoice:2:e9d77375-f70c-11e9-8777-e4a7a094a9d6","childActivityInstances":[],"childTransitionInstances":[],"executionIds":["eca75c6b-f70c-11e9-8777-e4a7a094a9d6"],"activityName":"Approve Invoice","incidentIds":["648d7e21-f71c-11e9-a725-e4a7a094a9d6"],"incidents":[{"id":"648d7e21-f71c-11e9-a725-e4a7a094a9d6","activityId":"AttachedTimerBoundaryEvent"}]}],"childTransitionInstances":[],"executionIds":["eca75c6b-f70c-11e9-8777-e4a7a094a9d6"],"activityName":"Invoice Receipt","incidentIds":null,"incidents":null}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: Process instance with given id does not exist.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-instance/{id}/modification	;post class Operation {
    tags: [Process Instance]
    summary: null
    description: Submits a list of modification instructions to change a process instance's execution state.
    A modification instruction is one of the following:
    
    * Starting execution before an activity
    * Starting execution after an activity on its single outgoing sequence flow
    * Starting execution on a specific sequence flow
    * Canceling an activity instance, transition instance, or all instances (activity or transition) for an activity
    
    Instructions are executed immediately and in the order they are provided in this request's body.
    Variables can be provided with every starting instruction.
    
    The exact semantics of modification can be read about in the [User guide](https://docs.camunda.org/manual/develop/user-guide/process-engine/process-instance-modification/).
    externalDocs: null
    operationId: modifyProcessInstance
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process instance to modify.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/ProcessInstanceModificationDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/process-instance/aProcessInstanceId/modification`
                    description: null
                    value: {"skipCustomListeners":true,"skipIoMappings":true,"instructions":[{"type":"startBeforeActivity","activityId":"activityId","variables":{"var":{"value":"aVariableValue","local":false,"type":"String"},"varLocal":{"value":"anotherVariableValue","local":true,"type":"String"}}},{"type":"cancel","activityInstanceId":"anActivityInstanceId"}],"annotation":"Modified to resolve an error."}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: At least one modification instruction misses required parameters.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: The modification cannot be performed, for example because it starts a failing activity.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-instance/{id}/modification-async	;post class Operation {
    tags: [Process Instance]
    summary: null
    description: Submits a list of modification instructions to change a process instance's execution state async.
    A modification instruction is one of the following:
    
    * Starting execution before an activity
    * Starting execution after an activity on its single outgoing sequence flow
    * Starting execution on a specific sequence flow
    * Cancelling an activity instance, transition instance, or all instances (activity or transition) for an activity
    
    Instructions are executed asynchronous and in the order they are provided in this request's body.
    Variables can be provided with every starting instruction.
    
    The exact semantics of modification can be read about in the
    [User guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/process-instance-modification/).
    externalDocs: null
    operationId: modifyProcessInstanceAsyncOperation
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process instance to modify.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/ProcessInstanceModificationDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/process-instance/aProcessInstanceId/modification-async`
                    description: null
                    value: {"skipCustomListeners":true,"skipIoMappings":true,"instructions":[{"type":"startBeforeActivity","activityId":"activityId"},{"type":"cancel","activityInstanceId":"anActivityInstanceId"}],"annotation":"Modified to resolve an error."}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/BatchDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: null
                        value: {"id":"aBatchId","type":"aBatchType","totalJobs":10,"jobsCreated":10,"batchJobsPerSeed":100,"invocationsPerBatchJob":1,"seedJobDefinitionId":"aSeedJobDefinitionId","monitorJobDefinitionId":"aMonitorJobDefinitionId","batchJobDefinitionId":"aBatchJobDefinitionId","tenantId":"aTenantId","suspended":false,"createUserId":"demo"}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            At least one modification instruction misses required parameters.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 403=class ApiResponse {
            description: Forbidden
            If the user is not allowed to execute batches. See the Introduction for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/AuthorizationExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: The modification cannot be performed, for example because it starts a failing activity.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-instance/{id}/suspended	;put class Operation {
    tags: [Process Instance]
    summary: null
    description: Activates or suspends a given process instance by id.
    externalDocs: null
    operationId: updateSuspensionStateById
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process instance to activate or suspend.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/SuspensionStateDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: PUT `/process-instance/aProcessInstanceId/suspended`
                    description: null
                    value: {"suspended":true}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-instance/{id}/variables	;get class Operation {
    tags: [Process Instance]
    summary: null
    description: Retrieves all variables of a given process instance by id.
    externalDocs: null
    operationId: getProcessInstanceVariables
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process instance to retrieve the variables from.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class QueryParameter {
        class Parameter {
            name: deserializeValue
            in: null
            description: Determines whether serializable variable values (typically variables that store custom Java objects)
            should be deserialized on server side (default true).
            
            If set to true, a serializable variable will be deserialized on server side and transformed to JSON
            using [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.
            Note that this requires the Java classes of the variable value to be on the REST API's classpath.
            
            If set to false, a serializable variable will be returned in its serialized format.
            For example, a variable that is serialized as XML will be returned as a JSON string containing XML.
            
            Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false
            when developing web applications that are independent of the Java process applications deployed to the engine.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class MapSchema {
                        class Schema {
                            type: object
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: class Schema {
                                type: null
                                format: null
                                $ref: #/components/schemas/VariableValueDto
                                description: null
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                not: null
                                properties: null
                                additionalProperties: null
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET `/process-instance/aProcessInstanceId/variables`
                        description: null
                        value: {"aVariableKey":{"value":{"prop1":"a","prop2":"b"},"type":"Object","valueInfo":{"objectTypeName":"com.example.MyObject","serializationDataFormat":"application/xml"}}}
                        externalValue: null
                        $ref: null
                    }, example-2=class Example {
                        summary: GET `/process-instance/aProcessInstanceId/variables?deserializeValue=false`
                        description: null
                        value: {"aVariableKey":{"value":"ab","type":"Object","valueInfo":{"objectTypeName":"com.example.MyObject","serializationDataFormat":"application/xml"}}}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: Process instance with given id does not exist.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-instance/{id}/variables	;post class Operation {
    tags: [Process Instance]
    summary: null
    description: Updates or deletes the variables of a process instance by id. Updates precede deletions.
    So, if a variable is updated AND deleted, the deletion overrides the update.
    externalDocs: null
    operationId: modifyProcessInstanceVariables
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process instance to set variables for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/PatchVariablesDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/process-instance/aProcessInstanceId/variables`
                    description: Status 204 Response: No content.
                    value: {"modifications":{"aVariable":{"value":"aValue","type":"String"},"anotherVariable":{"value":42,"type":"Integer"}},"deletions":["aThirdVariable","FourthVariable"]}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            The variable value or type is invalid, for example if the value could not be parsed to an Integer value or
            the passed variable type is not supported.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: Update or delete could not be executed, for example because the process instance does not exist.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-instance/{id}/variables/{varName}	;get class Operation {
    tags: [Process Instance]
    summary: null
    description: Retrieves a variable of a given process instance by id.
    externalDocs: null
    operationId: getProcessInstanceVariable
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process instance to retrieve the variable for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: varName
            in: null
            description: The name of the variable to retrieve.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class QueryParameter {
        class Parameter {
            name: deserializeValue
            in: null
            description: Determines whether serializable variable values (typically variables that store custom Java objects)
            should be deserialized on server side (default true).
            
            If set to true, a serializable variable will be deserialized on server side and transformed to JSON
            using [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.
            Note that this requires the Java classes of the variable value to be on the REST API's classpath.
            
            If set to false, a serializable variable will be returned in its serialized format.
            For example, a variable that is serialized as XML will be returned as a JSON string containing XML.
            
            Note: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false
            when developing web applications that are independent of the Java process applications deployed to the engine.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/VariableValueDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: GET `/process-instance/aProcessInstanceId/variables/myObject123`
                        description: null
                        value: {"value":{"prop1":"a","prop2":"b"},"type":"Object","valueInfo":{"objectTypeName":"com.example.MyObject","serializationDataFormat":"application/xml"}}
                        externalValue: null
                        $ref: null
                    }, example-2=class Example {
                        summary: GET `/process-instance/aProcessInstanceId/variables/myObject123?deserializeValue=false`
                        description: null
                        value: {"value":"ab","type":"Object","valueInfo":{"objectTypeName":"com.example.MyObject","serializationDataFormat":"application/xml"}}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            Variable with given id does not exist.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-instance/{id}/variables/{varName}	;put class Operation {
    tags: [Process Instance]
    summary: null
    description: Sets a variable of a given process instance by id.
    externalDocs: null
    operationId: setProcessInstanceVariable
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process instance to set the variable for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: varName
            in: null
            description: The name of the variable to set.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/VariableValueDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: PUT /process-instance/aProcessInstanceId/variables/aVarName
                    description: Status 204. No content.
                    value: {"value":"someValue","type":"String"}
                    externalValue: null
                    $ref: null
                }, example-2=class Example {
                    summary: PUT /process-instance/aProcessInstanceId/variables/aVarName
                    description: Status 204. No content.
                    value: {"value":"ab","type":"Object","valueInfo":{"objectTypeName":"com.example.MyObject","serializationDataFormat":"application/xml"}}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            The variable value or type is invalid, for example if the value could not be parsed to an Integer value or
            the passed variable type is not supported.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /process-instance/{id}/variables/{varName}	;delete class Operation {
    tags: [Process Instance]
    summary: null
    description: Deletes a variable of a process instance by id.
    externalDocs: null
    operationId: deleteProcessInstanceVariable
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process instance to delete the variable from.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: varName
            in: null
            description: The name of the variable to delete.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /process-instance/{id}/variables/{varName}/data	;get class Operation {
    tags: [Process Instance]
    summary: null
    description: Retrieves the content of a Process Variable by the Process Instance id and the Process Variable name.
    Applicable for byte array or file Process Variables.
    externalDocs: null
    operationId: getProcessInstanceVariableBinary
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process instance to retrieve the variable for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: varName
            in: null
            description: The name of the variable to retrieve.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
                    For binary variables or files without any MIME type information, a byte stream is returned.
                    File variables with MIME type information are returned as the saved type.
                    Additionally, for file variables the Content-Disposition header will be set.
            headers: null
            content: class Content {
                {application/octet-stream=class MediaType {
                    schema: class BinarySchema {
                        class Schema {
                            type: string
                            format: binary
                            $ref: null
                            description: For binary variables or files without any MIME type information, a byte stream is returned.
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: binary variable: Status 200
                        description: null
                        value: Content-Type: application/octet-stream
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }, text/plain=class MediaType {
                    schema: class BinarySchema {
                        class Schema {
                            type: string
                            format: binary
                            $ref: null
                            description: File variables with MIME type information are returned as the saved type.
                                        Additionally, for file variables the Content-Disposition header will be set.
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: file variable: Status 200
                        description: null
                        value: Content-Type: text/plain; charset=UTF-8. Content-Disposition: attachment; filename="someFile.txt"
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            A Process Variable with the given id exists but does not serialize as binary data.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Not Found
            A Process Variable with the given id does not exist. 
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Multiple schemas found in the OAS 'content' section, returning only the first one (application/octet-stream)
[WARNING] Multiple schemas found in the OAS 'content' section, returning only the first one (application/octet-stream)
[INFO] processOperation: resourcePath=  /process-instance/{id}/variables/{varName}/data	;post class Operation {
    tags: [Process Instance]
    summary: null
    description: Sets the serialized value for a binary variable or the binary value for a file variable.
    externalDocs: null
    operationId: setProcessInstanceVariableBinary
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the process instance to retrieve the variable for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: varName
            in: null
            description: The name of the variable to retrieve.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: For binary variables a multipart form submit with the following parts:
        content: class Content {
            {multipart/form-data=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/MultiFormVariableBinaryDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/process-instance/aProcessInstanceId/variables/aVarName/data` (1)
                    description: Post binary content of a byte array variable.
                    value: 
                                            ```
                                            ------------------------------354ddb6baeff
                                            Content-Disposition: form-data; name="data"; filename="image.png"
                                            Content-Type: application/octet-stream
                                            Content-Transfer-Encoding: binary
                    
                                            <<Byte Stream ommitted>>
                                            ------------------------------354ddb6baeff
                                            Content-Disposition: form-data; name="valueType"
                                            Content-Type: text/plain; charset=US-ASCII
                                            Content-Transfer-Encoding: 8bit
                    
                                            Bytes
                                            ------------------------------1e838f8f632a--
                                            ```
                                          
                    externalValue: null
                    $ref: null
                }, example-2=class Example {
                    summary: POST `/process-instance/aProcessInstanceId/variables/aVarName/data` (2)
                    description: Post the JSON serialization of a Java Class (**deprecated**).
                    value: 
                                            ```
                                            ------------------------------1e838f8f632a
                                            Content-Disposition: form-data; name="type"
                                            Content-Type: text/plain; charset=US-ASCII
                                            Content-Transfer-Encoding: 8bit
                    
                                            java.util.ArrayList<java.lang.Object>
                                            ------------------------------1e838f8f632a
                                            Content-Disposition: form-data; name="data"
                                            Content-Type: application/json; charset=US-ASCII
                                            Content-Transfer-Encoding: 8bit
                    
                                            ["foo","bar"]
                                            ------------------------------1e838f8f632a--
                                            ```
                                          
                    externalValue: null
                    $ref: null
                }, example-3=class Example {
                    summary: POST `/process-instance/aProcessInstanceId/variables/aVarName/data` (3)
                    description: Post a text file.
                    value: 
                                            ```
                                            ---OSQH1f8lzs83iXFHphqfIuitaQfNKFY74Y
                                            Content-Disposition: form-data; name="data"; filename="myFile.txt"
                                            Content-Type: text/plain; charset=US-ASCII
                                            Content-Transfer-Encoding: binary
                    
                                            <<Byte Stream ommitted>>
                                            ---OSQH1f8lzs83iXFHphqfIuitaQfNKFY74Y
                                            Content-Disposition: form-data; name="valueType"
                                            Content-Type: text/plain; charset=US-ASCII
                                            Content-Transfer-Encoding: 8bit
                    
                                            File
                                            ------------------------------1e838f8f632a--
                                            ```
                                          
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request
            The variable value or type is invalid, for example if no filename is set.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /schema/log	;get class Operation {
    tags: [Schema Log]
    summary: null
    description: Queries for schema log entries that fulfill given parameters.
    externalDocs: null
    operationId: getSchemaLog
    parameters: [class QueryParameter {
        class Parameter {
            name: version
            in: null
            description: Only return schema log entries with a specific version.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: firstResult
            in: null
            description: Pagination of results. Specifies the index of the first result to return.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: maxResults
            in: null
            description: Pagination of results. Specifies the maximum number of results to return.
            Will return less results if there are no more results left.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            **Note**: In order to get any results a user of group `camunda-admin` must
            be authenticated.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/SchemaLogEntryDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: The Response content of a status 200
                        value: [{"id":"0","version":"7.11.0","timestamp":"2019-05-13T09:07:11.751+0200"},{"id":"1","version":"7.11.1","timestamp":"2019-06-1T17:22:05.123+0200"}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /schema/log	;post class Operation {
    tags: [Schema Log]
    summary: null
    description: Queries for schema log entries that fulfill given parameters.
    externalDocs: null
    operationId: querySchemaLog
    parameters: [class QueryParameter {
        class Parameter {
            name: firstResult
            in: null
            description: Pagination of results. Specifies the index of the first result to return.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: maxResults
            in: null
            description: Pagination of results. Specifies the maximum number of results to return.
            Will return less results if there are no more results left.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/SchemaLogQueryDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST /schema/log
                    description: The content of the Request Body
                    value: {"version":"7.11.0","sortBy":"timestamp","sortOrder":"asc"}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            **Note**: In order to get any results a user of group camunda-admin must be
            authenticated.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/SchemaLogEntryDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: The Response content of a status 200
                        value: [{"id":"0","version":"7.11.0","timestamp":"2019-05-13T09:07:11.751+0200"}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /signal	;post class Operation {
    tags: [Signal]
    summary: null
    description: A signal is an event of global scope (broadcast semantics) and is delivered to all
    active handlers. Internally this maps to the engine's signal event received builder
    method `RuntimeService#createSignalEvent()`. For more information about the signal
    behavior, see the [Signal Events](https://docs.camunda.org/manual/7.14/reference/bpmn20/events/signal-events/)
    section of the [BPMN 2.0 Implementation Reference](https://docs.camunda.org/manual/7.14/reference/bpmn20/).
    externalDocs: null
    operationId: throwSignal
    parameters: []
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/SignalDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {examle-1=class Example {
                    summary: POST /signal
                    description: The content of the Request Body
                    value: {"name":"policy_conditions_changed","variables":{"newTimePeriodInMonth":{"value":24}}}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if:
            
            * no name was given
            * the variable value or type is invalid, for example if the value could not be
            parsed to an integer value or the passed variable type is not supported
            * a tenant id and an execution id is specified.
            
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for the
            error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 403=class ApiResponse {
            description: Returned if the user is not allowed to throw a signal event.
            
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for the
            error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/AuthorizationExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: Returned if a single execution is specified and no such execution exists or has not
            subscribed to the signal.
            
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for the
            error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /task	;get class Operation {
    tags: [Task]
    summary: null
    description: Queries for tasks that fulfill a given filter. The size of the result set can be
    retrieved by using the Get Task Count method.
    
    **Security Consideration:** There are several query parameters (such as
    assigneeExpression) for specifying an EL expression. These are disabled by default to
    prevent remote code execution. See the section on
    [security considerations](https://docs.camunda.org/manual/7.14/user-guide/process-engine/securing-custom-code/)
    for custom code in the user guide for details.
    externalDocs: null
    operationId: getTasks
    parameters: [class QueryParameter {
        class Parameter {
            name: processInstanceId
            in: null
            description: Restrict to tasks that belong to process instances with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceIdIn
            in: null
            description: Restrict to tasks that belong to process instances with the given ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceBusinessKey
            in: null
            description: Restrict to tasks that belong to process instances with the given business key.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceBusinessKeyExpression
            in: null
            description: Restrict to tasks that belong to process instances with the given business key which 
            is described by an expression. See the 
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceBusinessKeyIn
            in: null
            description: Restrict to tasks that belong to process instances with one of the give business keys. 
            The keys need to be in a comma-separated list.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceBusinessKeyLike
            in: null
            description: Restrict to tasks that have a process instance business key that has the parameter 
            value as a substring.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceBusinessKeyLikeExpression
            in: null
            description: Restrict to tasks that have a process instance business key that has the parameter 
            value as a substring and is described by an expression. See the
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions) 
            for more information on available functions.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionId
            in: null
            description: Restrict to tasks that belong to a process definition with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionKey
            in: null
            description: Restrict to tasks that belong to a process definition with the given key.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionKeyIn
            in: null
            description: Restrict to tasks that belong to a process definition with one of the given keys. The 
            keys need to be in a comma-separated list.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionName
            in: null
            description: Restrict to tasks that belong to a process definition with the given name.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionNameLike
            in: null
            description: Restrict to tasks that have a process definition name that has the parameter value as 
            a substring.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: executionId
            in: null
            description: Restrict to tasks that belong to an execution with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: caseInstanceId
            in: null
            description: Restrict to tasks that belong to case instances with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: caseInstanceBusinessKey
            in: null
            description: Restrict to tasks that belong to case instances with the given business key.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: caseInstanceBusinessKeyLike
            in: null
            description: Restrict to tasks that have a case instance business key that has the parameter value 
            as a substring.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: caseDefinitionId
            in: null
            description: Restrict to tasks that belong to a case definition with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: caseDefinitionKey
            in: null
            description: Restrict to tasks that belong to a case definition with the given key.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: caseDefinitionName
            in: null
            description: Restrict to tasks that belong to a case definition with the given name.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: caseDefinitionNameLike
            in: null
            description: Restrict to tasks that have a case definition name that has the parameter value as a 
            substring.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: caseExecutionId
            in: null
            description: Restrict to tasks that belong to a case execution with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: activityInstanceIdIn
            in: null
            description: Only include tasks which belong to one of the passed and comma-separated activity 
            instance ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: tenantIdIn
            in: null
            description: Only include tasks which belong to one of the passed and comma-separated 
            tenant ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withoutTenantId
            in: null
            description: Only include tasks which belong to no tenant. Value may only be `true`, 
            as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: assignee
            in: null
            description: Restrict to tasks that the given user is assigned to.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: assigneeExpression
            in: null
            description: Restrict to tasks that the user described by the given expression is assigned to. 
            See the 
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions) 
            for more information on available functions.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: assigneeLike
            in: null
            description: Restrict to tasks that have an assignee that has the parameter 
            value as a substring.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: assigneeLikeExpression
            in: null
            description: Restrict to tasks that have an assignee that has the parameter value described by the 
            given expression as a substring. See the 
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions) 
            for more information on available functions.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: assigneeIn
            in: null
            description: Only include tasks which are assigned to one of the passed and 
            comma-separated user ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: owner
            in: null
            description: Restrict to tasks that the given user owns.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: ownerExpression
            in: null
            description: Restrict to tasks that the user described by the given expression owns. See the 
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions) 
            for more information on available functions.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: candidateGroup
            in: null
            description: Only include tasks that are offered to the given group.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: candidateGroupExpression
            in: null
            description: Only include tasks that are offered to the group described by the given expression. 
            See the 
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions) 
            for more information on available functions.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: candidateUser
            in: null
            description: Only include tasks that are offered to the given user or to one of his groups.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: candidateUserExpression
            in: null
            description: Only include tasks that are offered to the user described by the given expression. 
            See the 
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions) 
            for more information on available functions.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: includeAssignedTasks
            in: null
            description: Also include tasks that are assigned to users in candidate queries. Default is to only 
            include tasks that are not assigned to any user if you query by candidate user or
            group(s).
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: involvedUser
            in: null
            description: Only include tasks that the given user is involved in. A user is involved in a task if 
            an identity link exists between task and user (e.g., the user is the assignee).
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: involvedUserExpression
            in: null
            description: Only include tasks that the user described by the given expression is involved in.
            A user is involved in a task if an identity link exists between task and user
            (e.g., the user is the assignee). See the
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: assigned
            in: null
            description: If set to `true`, restricts the query to all tasks that are assigned.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: unassigned
            in: null
            description: If set to `true`, restricts the query to all tasks that are unassigned.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: taskDefinitionKey
            in: null
            description: Restrict to tasks that have the given key.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: taskDefinitionKeyIn
            in: null
            description: Restrict to tasks that have one of the given keys. The keys need to be in a
            comma-separated list.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: taskDefinitionKeyLike
            in: null
            description: Restrict to tasks that have a key that has the parameter value as a substring.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: name
            in: null
            description: Restrict to tasks that have the given name.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: nameNotEqual
            in: null
            description: Restrict to tasks that do not have the given name.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: nameLike
            in: null
            description: Restrict to tasks that have a name with the given parameter value as substring.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: nameNotLike
            in: null
            description: Restrict to tasks that do not have a name with the given parameter
            value as substring.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: description
            in: null
            description: Restrict to tasks that have the given description.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: descriptionLike
            in: null
            description: Restrict to tasks that have a description that has the parameter
            value as a substring.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: priority
            in: null
            description: Restrict to tasks that have the given priority.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: maxPriority
            in: null
            description: Restrict to tasks that have a lower or equal priority.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: minPriority
            in: null
            description: Restrict to tasks that have a higher or equal priority.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: dueDate
            in: null
            description: Restrict to tasks that are due on the given date. By
            [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the
            format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,
            `2013-01-23T14:42:45.546+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: dueDateExpression
            in: null
            description: Restrict to tasks that are due on the date described by the given expression. See the
            [User Guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions. The expression must evaluate to a
            `java.util.Date` or `org.joda.time.DateTime` object.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: dueAfter
            in: null
            description: Restrict to tasks that are due after the given date. By
            [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have
            the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,
            `2013-01-23T14:42:45.435+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: dueAfterExpression
            in: null
            description: Restrict to tasks that are due after the date described by the given expression.
            See the
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions. The expression must evaluate to a
            `java.util.Date` or `org.joda.time.DateTime` object.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: dueBefore
            in: null
            description: Restrict to tasks that are due before the given date. By
            [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have
            the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,
            `2013-01-23T14:42:45.243+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: dueBeforeExpression
            in: null
            description: Restrict to tasks that are due before the date described by the given expression.
            See the
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions. The expression must evaluate to a
            `java.util.Date` or `org.joda.time.DateTime` object.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: followUpDate
            in: null
            description: Restrict to tasks that have a followUp date on the given date. By
            [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date
            must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,
            `2013-01-23T14:42:45.342+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: followUpDateExpression
            in: null
            description: Restrict to tasks that have a followUp date on the date described by the given
            expression. See the
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions. The expression must evaluate to a
            `java.util.Date` or `org.joda.time.DateTime` object.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: followUpAfter
            in: null
            description: Restrict to tasks that have a followUp date after the given date. By
            [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the
            date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,
            `2013-01-23T14:42:45.542+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: followUpAfterExpression
            in: null
            description: Restrict to tasks that have a followUp date after the date described by the given
            expression. See the
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions. The expression must evaluate to a
            `java.util.Date` or `org.joda.time.DateTime` object.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: followUpBefore
            in: null
            description: Restrict to tasks that have a followUp date before the given date. By
            [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the
            date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,
            `2013-01-23T14:42:45.234+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: followUpBeforeExpression
            in: null
            description: Restrict to tasks that have a followUp date before the date described by the given
            expression. See the
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions. The expression must evaluate to a
            `java.util.Date` or `org.joda.time.DateTime` object.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: followUpBeforeOrNotExistent
            in: null
            description: Restrict to tasks that have no followUp date or a followUp date before the given date.
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the
            format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.432+0200`. The
            typical use case is to query all `active` tasks for a user for a given date.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: followUpBeforeOrNotExistentExpression
            in: null
            description: Restrict to tasks that have no followUp date or a followUp date before the date
            described by the given expression. See the
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions. The expression must evaluate to a
            `java.util.Date` or `org.joda.time.DateTime` object.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: createdOn
            in: null
            description: Restrict to tasks that were created on the given date. By
            [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have
            the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.324+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: createdOnExpression
            in: null
            description: Restrict to tasks that were created on the date described by the given expression.
            See the
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions. The expression must evaluate to a
            `java.util.Date` or `org.joda.time.DateTime` object.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: createdAfter
            in: null
            description: Restrict to tasks that were created after the given date. By
            [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the
            format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.342+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: createdAfterExpression
            in: null
            description: Restrict to tasks that were created after the date described by the given expression.
            See the
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions. The expression must evaluate to a
            `java.util.Date` or `org.joda.time.DateTime` object.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: createdBefore
            in: null
            description: Restrict to tasks that were created before the given date. By
            [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the
            format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.332+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: createdBeforeExpression
            in: null
            description: Restrict to tasks that were created before the date described by the given expression.
            See the
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions. The expression must evaluate to a
            `java.util.Date` or `org.joda.time.DateTime` object.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: delegationState
            in: null
            description: Restrict to tasks that are in the given delegation state. Valid values are
            `PENDING` and `RESOLVED`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: candidateGroups
            in: null
            description: Restrict to tasks that are offered to any of the given candidate groups. Takes a
            comma-separated list of group names, so for example `developers,support,sales`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: candidateGroupsExpression
            in: null
            description: Restrict to tasks that are offered to any of the candidate groups described by the
            given expression. See the
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions. The expression must evaluate to
            `java.util.List` of Strings.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withCandidateGroups
            in: null
            description: Only include tasks which have a candidate group. Value may only be `true`,
            as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withoutCandidateGroups
            in: null
            description: Only include tasks which have no candidate group. Value may only be `true`,
            as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withCandidateUsers
            in: null
            description: Only include tasks which have a candidate user. Value may only be `true`,
            as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withoutCandidateUsers
            in: null
            description: Only include tasks which have no candidate users. Value may only be `true`,
            as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: active
            in: null
            description: Only include active tasks. Value may only be `true`, as `false`
            is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: suspended
            in: null
            description: Only include suspended tasks. Value may only be `true`, as
            `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: taskVariables
            in: null
            description: Only include tasks that have variables with certain values. Variable filtering
            expressions are comma-separated and are structured as follows:
            
            A valid parameter value has the form `key_operator_value`. `key` is the variable name,
            `operator` is the comparison operator to be used and `value` the variable value.
            
            **Note**: Values are always treated as String objects on server side.
            
            Valid `operator` values are:
            `eq` - equal to;
            `neq` - not equal to;
            `gt` - greater than;
            `gteq` - greater than or equal to;
            `lt` - lower than;
            `lteq` - lower than or equal to;
            `like`.
            `key` and `value` may not contain underscore or comma characters.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processVariables
            in: null
            description: Only include tasks that belong to process instances that have variables with certain 
            values. Variable filtering expressions are comma-separated and are structured as
            follows:
            
            A valid parameter value has the form `key_operator_value`. `key` is the variable name,
            `operator` is the comparison operator to be used and `value` the variable value.
            
            **Note**: Values are always treated as String objects on server side.
            
            Valid `operator` values are:
            `eq` - equal to;
            `neq` - not equal to;
            `gt` - greater than;
            `gteq` - greater than or equal to;
            `lt` - lower than;
            `lteq` - lower than or equal to;
            `like`.
            `key` and `value` may not contain underscore or comma characters.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: caseInstanceVariables
            in: null
            description: Only include tasks that belong to case instances that have variables with certain
            values. Variable filtering expressions are comma-separated and are structured as
            follows:
            
            A valid parameter value has the form `key_operator_value`. `key` is the variable name,
            `operator` is the comparison operator to be used and `value` the variable value.
            
            **Note**: Values are always treated as String objects on server side.
            
            Valid `operator` values are:
            `eq` - equal to;
            `neq` - not equal to;
            `gt` - greater than;
            `gteq` - greater than or equal to;
            `lt` - lower than;
            `lteq` - lower than or equal to;
            `like`.
            `key` and `value` may not contain underscore or comma characters.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: variableNamesIgnoreCase
            in: null
            description: Match all variable names in this query case-insensitively. If set
            `variableName` and `variablename` are treated as equal.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: variableValuesIgnoreCase
            in: null
            description: Match all variable values in this query case-insensitively. If set
            `variableValue` and `variablevalue` are treated as equal.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: parentTaskId
            in: null
            description: Restrict query to all tasks that are sub tasks of the given task. Takes a task id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: sortBy
            in: null
            description: Sort the results lexicographically by a given criterion.
            Must be used in conjunction with the sortOrder parameter.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: sortOrder
            in: null
            description: Sort the results in a given order. Values may be asc for ascending order or desc for descending order.
            Must be used in conjunction with the sortBy parameter.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: firstResult
            in: null
            description: Pagination of results. Specifies the index of the first result to return.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: maxResults
            in: null
            description: Pagination of results. Specifies the maximum number of results to return.
            Will return less results if there are no more results left.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/TaskDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 response
                        description: Response for GET `/task?assignee=anAssignee&delegationState=RESOLVED&maxPriority=50`
                        value: [{"id":"anId","name":"aName","assignee":"anAssignee","created":"2013-01-23T13:42:42.657+0200","due":"2013-01-23T13:49:42.323+0200","followUp:":"2013-01-23T13:44:42.987+0200","delegationState":"RESOLVED","description":"aDescription","executionId":"anExecution","owner":"anOwner","parentTaskId":"aParentId","priority":42,"processDefinitionId":"aProcDefId","processInstanceId":"aProcInstId","caseDefinitionId":"aCaseDefId","caseInstanceId":"aCaseInstId","caseExecutionId":"aCaseExecution","taskDefinitionKey":"aTaskDefinitionKey","suspended":false,"formKey":"aFormKey","tenantId":"aTenantId"}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid, for example if a `sortOrder`
            parameter is supplied, but no `sortBy`, or if an invalid operator for variable
            comparison is used. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /task	;post class Operation {
    tags: [Task]
    summary: null
    description: Queries for tasks that fulfill a given filter. This method is slightly more powerful
    than the [Get Tasks](https://docs.camunda.org/manual/7.14/reference/rest/task/get-query/) method because it
    allows filtering by multiple process or task variables of types `String`, `Number`
    or `Boolean`. The size of the result set can be retrieved by using the
    [Get Task Count (POST)](https://docs.camunda.org/manual/7.14/reference/rest/task/post-query-count/) method.
    
    **Security Consideration**:
    There are several parameters (such as `assigneeExpression`) for specifying an EL
    expression. These are disabled by default to prevent remote code execution. See the
    section on
    [security considerations for custom code](https://docs.camunda.org/manual/7.14/user-guide/process-engine/securing-custom-code/)
    in the user guide for details.
    externalDocs: null
    operationId: queryTasks
    parameters: [class QueryParameter {
        class Parameter {
            name: firstResult
            in: null
            description: Pagination of results. Specifies the index of the first result to return.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: maxResults
            in: null
            description: Pagination of results. Specifies the maximum number of results to return.
            Will return less results if there are no more results left.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/TaskQueryDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/task` Request Body 1
                    description: null
                    value: {"taskVariables":[{"name":"varName","value":"varValue","operator":"eq"},{"name":"anotherVarName","value":30,"operator":"neq"}],"processInstanceBusinessKeyIn":"aBusinessKey,anotherBusinessKey","assigneeIn":"anAssignee,anotherAssignee","priority":10,"sorting":[{"sortBy":"dueDate","sortOrder":"asc"},{"sortBy":"processVariable","sortOrder":"desc","parameters":{"variable":"orderId","type":"String"}}]}
                    externalValue: null
                    $ref: null
                }, example-2=class Example {
                    summary: POST `/task` Request Body 2
                    description: Logical query: assignee = "John Munda" AND (name = "Approve Invoice" OR priority = 5) AND (suspended = false OR taskDefinitionKey = "approveInvoice")
                    value: {"assignee":"John Munda","orQueries":[{"name":"Approve Invoice","priority":5},{"suspended":false,"taskDefinitionKey":"approveInvoice"}]}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/TaskDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 response 1
                        description: null
                        value: [{"id":"anId","name":"aName","assignee":"anAssignee","created":"2013-01-23T13:42:42.453+0200","due":"2013-01-23T13:49:42.342+0200","followUp:":"2013-01-23T13:44:42.546+0200","delegationState":"RESOLVED","description":"aDescription","executionId":"anExecution","owner":"anOwner","parentTaskId":"aParentId","priority":10,"processDefinitionId":"aProcDefId","processInstanceId":"aProcInstId","caseDefinitionId":"aCaseDefId","caseInstanceId":"aCaseInstId","caseExecutionId":"aCaseExecution","taskDefinitionKey":"aTaskDefinitionKey","suspended":false,"formKey":"aFormKey","tenantId":"aTenantId"}]
                        externalValue: null
                        $ref: null
                    }, example-2=class Example {
                        summary: Status 200 response 2
                        description: null
                        value: [{"id":"349fffa8-6571-11e7-9a44-d6940f5ef88d","name":"Approve Invoice","assignee":"John Munda","created":"2017-07-10T15:10:54.670+0200","due":"2017-07-17T15:10:54.670+0200","followUp":null,"delegationState":null,"description":"Approve the invoice (or not).","executionId":"349f8a5c-6571-11e7-9a44-d6940f5ef88d","owner":null,"parentTaskId":null,"priority":50,"processDefinitionId":"invoice:1:2c8d8057-6571-11e7-9a44-d6940f5ef88d","processInstanceId":"349f8a5c-6571-11e7-9a44-d6940f5ef88d","taskDefinitionKey":"approveInvoice","caseExecutionId":null,"caseInstanceId":null,"caseDefinitionId":null,"suspended":false,"formKey":"embedded:app:develop/invoice-forms/approve-invoice.html","tenantId":null}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid, for example if a `sortOrder`
            parameter is supplied, but no `sortBy`, or if an invalid operator for variable
            comparison is used. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /task/count	;get class Operation {
    tags: [Task]
    summary: null
    description: Retrieves the number of tasks that fulfill a provided filter. Corresponds to the size
    of the result set when using the [Get Tasks](https://docs.camunda.org/manual/7.14/reference/rest/task/) method.
    
    **Security Consideration:** There are several query parameters (such as
    assigneeExpression) for specifying an EL expression. These are disabled by default to
    prevent remote code execution. See the section on
    [security considerations](https://docs.camunda.org/manual/7.14/user-guide/process-engine/securing-custom-code/)
    for custom code in the user guide for details.
    externalDocs: null
    operationId: getTasksCount
    parameters: [class QueryParameter {
        class Parameter {
            name: processInstanceId
            in: null
            description: Restrict to tasks that belong to process instances with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceIdIn
            in: null
            description: Restrict to tasks that belong to process instances with the given ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceBusinessKey
            in: null
            description: Restrict to tasks that belong to process instances with the given business key.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceBusinessKeyExpression
            in: null
            description: Restrict to tasks that belong to process instances with the given business key which 
            is described by an expression. See the 
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceBusinessKeyIn
            in: null
            description: Restrict to tasks that belong to process instances with one of the give business keys. 
            The keys need to be in a comma-separated list.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceBusinessKeyLike
            in: null
            description: Restrict to tasks that have a process instance business key that has the parameter 
            value as a substring.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processInstanceBusinessKeyLikeExpression
            in: null
            description: Restrict to tasks that have a process instance business key that has the parameter 
            value as a substring and is described by an expression. See the
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions) 
            for more information on available functions.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionId
            in: null
            description: Restrict to tasks that belong to a process definition with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionKey
            in: null
            description: Restrict to tasks that belong to a process definition with the given key.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionKeyIn
            in: null
            description: Restrict to tasks that belong to a process definition with one of the given keys. The 
            keys need to be in a comma-separated list.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionName
            in: null
            description: Restrict to tasks that belong to a process definition with the given name.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processDefinitionNameLike
            in: null
            description: Restrict to tasks that have a process definition name that has the parameter value as 
            a substring.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: executionId
            in: null
            description: Restrict to tasks that belong to an execution with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: caseInstanceId
            in: null
            description: Restrict to tasks that belong to case instances with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: caseInstanceBusinessKey
            in: null
            description: Restrict to tasks that belong to case instances with the given business key.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: caseInstanceBusinessKeyLike
            in: null
            description: Restrict to tasks that have a case instance business key that has the parameter value 
            as a substring.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: caseDefinitionId
            in: null
            description: Restrict to tasks that belong to a case definition with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: caseDefinitionKey
            in: null
            description: Restrict to tasks that belong to a case definition with the given key.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: caseDefinitionName
            in: null
            description: Restrict to tasks that belong to a case definition with the given name.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: caseDefinitionNameLike
            in: null
            description: Restrict to tasks that have a case definition name that has the parameter value as a 
            substring.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: caseExecutionId
            in: null
            description: Restrict to tasks that belong to a case execution with the given id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: activityInstanceIdIn
            in: null
            description: Only include tasks which belong to one of the passed and comma-separated activity 
            instance ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: tenantIdIn
            in: null
            description: Only include tasks which belong to one of the passed and comma-separated 
            tenant ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withoutTenantId
            in: null
            description: Only include tasks which belong to no tenant. Value may only be `true`, 
            as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: assignee
            in: null
            description: Restrict to tasks that the given user is assigned to.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: assigneeExpression
            in: null
            description: Restrict to tasks that the user described by the given expression is assigned to. 
            See the 
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions) 
            for more information on available functions.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: assigneeLike
            in: null
            description: Restrict to tasks that have an assignee that has the parameter 
            value as a substring.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: assigneeLikeExpression
            in: null
            description: Restrict to tasks that have an assignee that has the parameter value described by the 
            given expression as a substring. See the 
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions) 
            for more information on available functions.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: assigneeIn
            in: null
            description: Only include tasks which are assigned to one of the passed and 
            comma-separated user ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: owner
            in: null
            description: Restrict to tasks that the given user owns.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: ownerExpression
            in: null
            description: Restrict to tasks that the user described by the given expression owns. See the 
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions) 
            for more information on available functions.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: candidateGroup
            in: null
            description: Only include tasks that are offered to the given group.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: candidateGroupExpression
            in: null
            description: Only include tasks that are offered to the group described by the given expression. 
            See the 
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions) 
            for more information on available functions.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: candidateUser
            in: null
            description: Only include tasks that are offered to the given user or to one of his groups.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: candidateUserExpression
            in: null
            description: Only include tasks that are offered to the user described by the given expression. 
            See the 
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions) 
            for more information on available functions.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: includeAssignedTasks
            in: null
            description: Also include tasks that are assigned to users in candidate queries. Default is to only 
            include tasks that are not assigned to any user if you query by candidate user or
            group(s).
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: involvedUser
            in: null
            description: Only include tasks that the given user is involved in. A user is involved in a task if 
            an identity link exists between task and user (e.g., the user is the assignee).
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: involvedUserExpression
            in: null
            description: Only include tasks that the user described by the given expression is involved in.
            A user is involved in a task if an identity link exists between task and user
            (e.g., the user is the assignee). See the
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: assigned
            in: null
            description: If set to `true`, restricts the query to all tasks that are assigned.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: unassigned
            in: null
            description: If set to `true`, restricts the query to all tasks that are unassigned.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: taskDefinitionKey
            in: null
            description: Restrict to tasks that have the given key.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: taskDefinitionKeyIn
            in: null
            description: Restrict to tasks that have one of the given keys. The keys need to be in a
            comma-separated list.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: taskDefinitionKeyLike
            in: null
            description: Restrict to tasks that have a key that has the parameter value as a substring.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: name
            in: null
            description: Restrict to tasks that have the given name.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: nameNotEqual
            in: null
            description: Restrict to tasks that do not have the given name.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: nameLike
            in: null
            description: Restrict to tasks that have a name with the given parameter value as substring.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: nameNotLike
            in: null
            description: Restrict to tasks that do not have a name with the given parameter
            value as substring.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: description
            in: null
            description: Restrict to tasks that have the given description.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: descriptionLike
            in: null
            description: Restrict to tasks that have a description that has the parameter
            value as a substring.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: priority
            in: null
            description: Restrict to tasks that have the given priority.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: maxPriority
            in: null
            description: Restrict to tasks that have a lower or equal priority.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: minPriority
            in: null
            description: Restrict to tasks that have a higher or equal priority.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: dueDate
            in: null
            description: Restrict to tasks that are due on the given date. By
            [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the
            format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,
            `2013-01-23T14:42:45.546+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: dueDateExpression
            in: null
            description: Restrict to tasks that are due on the date described by the given expression. See the
            [User Guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions. The expression must evaluate to a
            `java.util.Date` or `org.joda.time.DateTime` object.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: dueAfter
            in: null
            description: Restrict to tasks that are due after the given date. By
            [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have
            the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,
            `2013-01-23T14:42:45.435+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: dueAfterExpression
            in: null
            description: Restrict to tasks that are due after the date described by the given expression.
            See the
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions. The expression must evaluate to a
            `java.util.Date` or `org.joda.time.DateTime` object.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: dueBefore
            in: null
            description: Restrict to tasks that are due before the given date. By
            [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have
            the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,
            `2013-01-23T14:42:45.243+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: dueBeforeExpression
            in: null
            description: Restrict to tasks that are due before the date described by the given expression.
            See the
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions. The expression must evaluate to a
            `java.util.Date` or `org.joda.time.DateTime` object.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: followUpDate
            in: null
            description: Restrict to tasks that have a followUp date on the given date. By
            [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date
            must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,
            `2013-01-23T14:42:45.342+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: followUpDateExpression
            in: null
            description: Restrict to tasks that have a followUp date on the date described by the given
            expression. See the
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions. The expression must evaluate to a
            `java.util.Date` or `org.joda.time.DateTime` object.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: followUpAfter
            in: null
            description: Restrict to tasks that have a followUp date after the given date. By
            [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the
            date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,
            `2013-01-23T14:42:45.542+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: followUpAfterExpression
            in: null
            description: Restrict to tasks that have a followUp date after the date described by the given
            expression. See the
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions. The expression must evaluate to a
            `java.util.Date` or `org.joda.time.DateTime` object.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: followUpBefore
            in: null
            description: Restrict to tasks that have a followUp date before the given date. By
            [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the
            date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,
            `2013-01-23T14:42:45.234+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: followUpBeforeExpression
            in: null
            description: Restrict to tasks that have a followUp date before the date described by the given
            expression. See the
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions. The expression must evaluate to a
            `java.util.Date` or `org.joda.time.DateTime` object.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: followUpBeforeOrNotExistent
            in: null
            description: Restrict to tasks that have no followUp date or a followUp date before the given date.
            By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the
            format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.432+0200`. The
            typical use case is to query all `active` tasks for a user for a given date.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: followUpBeforeOrNotExistentExpression
            in: null
            description: Restrict to tasks that have no followUp date or a followUp date before the date
            described by the given expression. See the
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions. The expression must evaluate to a
            `java.util.Date` or `org.joda.time.DateTime` object.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: createdOn
            in: null
            description: Restrict to tasks that were created on the given date. By
            [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have
            the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.324+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: createdOnExpression
            in: null
            description: Restrict to tasks that were created on the date described by the given expression.
            See the
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions. The expression must evaluate to a
            `java.util.Date` or `org.joda.time.DateTime` object.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: createdAfter
            in: null
            description: Restrict to tasks that were created after the given date. By
            [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the
            format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.342+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: createdAfterExpression
            in: null
            description: Restrict to tasks that were created after the date described by the given expression.
            See the
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions. The expression must evaluate to a
            `java.util.Date` or `org.joda.time.DateTime` object.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: createdBefore
            in: null
            description: Restrict to tasks that were created before the given date. By
            [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the
            format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.332+0200`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: createdBeforeExpression
            in: null
            description: Restrict to tasks that were created before the date described by the given expression.
            See the
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions. The expression must evaluate to a
            `java.util.Date` or `org.joda.time.DateTime` object.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: delegationState
            in: null
            description: Restrict to tasks that are in the given delegation state. Valid values are
            `PENDING` and `RESOLVED`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: candidateGroups
            in: null
            description: Restrict to tasks that are offered to any of the given candidate groups. Takes a
            comma-separated list of group names, so for example `developers,support,sales`.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: candidateGroupsExpression
            in: null
            description: Restrict to tasks that are offered to any of the candidate groups described by the
            given expression. See the
            [user guide](https://docs.camunda.org/manual/7.14/user-guide/process-engine/expression-language/#internal-context-functions)
            for more information on available functions. The expression must evaluate to
            `java.util.List` of Strings.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withCandidateGroups
            in: null
            description: Only include tasks which have a candidate group. Value may only be `true`,
            as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withoutCandidateGroups
            in: null
            description: Only include tasks which have no candidate group. Value may only be `true`,
            as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withCandidateUsers
            in: null
            description: Only include tasks which have a candidate user. Value may only be `true`,
            as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: withoutCandidateUsers
            in: null
            description: Only include tasks which have no candidate users. Value may only be `true`,
            as `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: active
            in: null
            description: Only include active tasks. Value may only be `true`, as `false`
            is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: suspended
            in: null
            description: Only include suspended tasks. Value may only be `true`, as
            `false` is the default behavior.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: taskVariables
            in: null
            description: Only include tasks that have variables with certain values. Variable filtering
            expressions are comma-separated and are structured as follows:
            
            A valid parameter value has the form `key_operator_value`. `key` is the variable name,
            `operator` is the comparison operator to be used and `value` the variable value.
            
            **Note**: Values are always treated as String objects on server side.
            
            Valid `operator` values are:
            `eq` - equal to;
            `neq` - not equal to;
            `gt` - greater than;
            `gteq` - greater than or equal to;
            `lt` - lower than;
            `lteq` - lower than or equal to;
            `like`.
            `key` and `value` may not contain underscore or comma characters.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: processVariables
            in: null
            description: Only include tasks that belong to process instances that have variables with certain 
            values. Variable filtering expressions are comma-separated and are structured as
            follows:
            
            A valid parameter value has the form `key_operator_value`. `key` is the variable name,
            `operator` is the comparison operator to be used and `value` the variable value.
            
            **Note**: Values are always treated as String objects on server side.
            
            Valid `operator` values are:
            `eq` - equal to;
            `neq` - not equal to;
            `gt` - greater than;
            `gteq` - greater than or equal to;
            `lt` - lower than;
            `lteq` - lower than or equal to;
            `like`.
            `key` and `value` may not contain underscore or comma characters.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: caseInstanceVariables
            in: null
            description: Only include tasks that belong to case instances that have variables with certain
            values. Variable filtering expressions are comma-separated and are structured as
            follows:
            
            A valid parameter value has the form `key_operator_value`. `key` is the variable name,
            `operator` is the comparison operator to be used and `value` the variable value.
            
            **Note**: Values are always treated as String objects on server side.
            
            Valid `operator` values are:
            `eq` - equal to;
            `neq` - not equal to;
            `gt` - greater than;
            `gteq` - greater than or equal to;
            `lt` - lower than;
            `lteq` - lower than or equal to;
            `like`.
            `key` and `value` may not contain underscore or comma characters.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: variableNamesIgnoreCase
            in: null
            description: Match all variable names in this query case-insensitively. If set
            `variableName` and `variablename` are treated as equal.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: variableValuesIgnoreCase
            in: null
            description: Match all variable values in this query case-insensitively. If set
            `variableValue` and `variablevalue` are treated as equal.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: parentTaskId
            in: null
            description: Restrict query to all tasks that are sub tasks of the given task. Takes a task id.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/CountResultDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 response
                        description: null
                        value: {"count":1}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /task/count	;post class Operation {
    tags: [Task]
    summary: null
    description: Retrieves the number of tasks that fulfill the given filter. Corresponds to the size
    of the result set of the [Get Tasks (POST)](https://docs.camunda.org/manual/7.14/reference/rest/task/post-query/)
    method and takes the same parameters.
    
    **Security Consideration**:
    There are several parameters (such as `assigneeExpression`) for specifying an EL
    expression. These are disabled by default to prevent remote code execution. See the
    section on
    [security considerations for custom code](https://docs.camunda.org/manual/7.14/user-guide/process-engine/securing-custom-code/)
    in the user guide for details.
    externalDocs: null
    operationId: queryTasksCount
    parameters: null
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/TaskQueryDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/task` Request Body 1
                    description: null
                    value: {"taskVariables":[{"name":"varName","value":"varValue","operator":"eq"},{"name":"anotherVarName","value":30,"operator":"neq"}],"processInstanceBusinessKeyIn":"aBusinessKey,anotherBusinessKey","assigneeIn":"anAssignee,anotherAssignee","priority":10,"sorting":[{"sortBy":"dueDate","sortOrder":"asc"},{"sortBy":"processVariable","sortOrder":"desc","parameters":{"variable":"orderId","type":"String"}}]}
                    externalValue: null
                    $ref: null
                }, example-2=class Example {
                    summary: POST `/task` Request Body 2
                    description: Logical query: assignee = "John Munda" AND (name = "Approve Invoice" OR priority = 5) AND (suspended = false OR taskDefinitionKey = "approveInvoice")
                    value: {"assignee":"John Munda","orQueries":[{"name":"Approve Invoice","priority":5},{"suspended":false,"taskDefinitionKey":"approveInvoice"}]}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/CountResultDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 response
                        description: null
                        value: {"count":1}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /task/create	;post class Operation {
    tags: [Task]
    summary: null
    description: Creates a new task.
    externalDocs: null
    operationId: createTask
    parameters: null
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/TaskDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST /task/create
                    description: null
                    value: {"id":"aTaskId","name":"My Task","description":"This have to be done very urgent","priority":30,"assignee":"peter","owner":"mary","delegationState":"PENDING","due":"2014-08-30T10:00:00.000+0200","followUp":"2014-08-25T10:00:00.000+0200","parentTaskId":"aParentTaskId","caseInstanceId":"aCaseInstanceId","tenantId":null}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if a not valid `delegationState` is supplied. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /task/{id}	;get class Operation {
    tags: [Task]
    summary: null
    description: Retrieves a task by id.
    externalDocs: null
    operationId: getTask
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/TaskDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: GET /task/anId Response
                        description: null
                        value: {"id":"anId","name":"aName","assignee":"anAssignee","created":"2013-01-23T13:42:42.000+0200","due":"2013-01-23T13:49:42.576+0200","followUp":"2013-01-23T13:44:42.437+0200","delegationState":"RESOLVED","description":"aDescription","executionId":"anExecution","owner":"anOwner","parentTaskId":"aParentId","priority":42,"processDefinitionId":"aProcDefId","processInstanceId":"aProcInstId","caseDefinitionId":"aCaseDefId","caseInstanceId":"aCaseInstId","caseExecutionId":"aCaseExecution","taskDefinitionKey":"aTaskDefinitionKey","suspended":false,"formKey":"aFormKey","tenantId":"aTenantId"}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Task with given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /task/{id}	;put class Operation {
    tags: [Task]
    summary: null
    description: Updates a task.
    externalDocs: null
    operationId: updateTask
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to be updated.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/TaskDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: PUT /task/aTaskId/ Response
                    description: null
                    value: {"name":"My Task","description":"This have to be done very urgent","priority":30,"assignee":"peter","owner":"mary","delegationState":"PENDING","due":"2014-08-30T10:00:00.000+0200","followUp":"2014-08-25T10:00:00.000+0200","parentTaskId":"aParentTaskId","caseInstanceId":"aCaseInstanceId","tenantId":"tenantId"}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if a not valid `delegationState` is supplied. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: If the corresponding task cannot be found.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /task/{id}	;delete class Operation {
    tags: [Task]
    summary: null
    description: Removes a task by id.
    externalDocs: null
    operationId: deleteTask
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to be removed.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Bad Request. The Task with the given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: The Task with the given id cannot be deleted because it is part of a running process or case instance.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for
            the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /task/{id}/assignee	;post class Operation {
    tags: [Task]
    summary: null
    description: Changes the assignee of a task to a specific user.
    
    **Note:** The difference with the [Claim Task](https://docs.camunda.org/manual/7.14/reference/rest/task/post-claim/)
    method is that this method does not check if the task already has a user
    assigned to it.
    externalDocs: null
    operationId: setAssignee
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to set the assignee for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: Provide the id of the user that will be the assignee of the task.
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/UserIdDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: Request Body
                    description: POST `/task/anId/assignee`
                    value: {"userId":"aUserId"}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: Task with given id does not exist or setting the assignee was not successful.
            See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /task/{id}/attachment	;get class Operation {
    tags: [Task Attachment]
    summary: null
    description: Gets the attachments for a task.
    externalDocs: null
    operationId: getAttachments
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to retrieve the attachments for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/AttachmentDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET /task/aTaskId/attachment
                        description: null
                        value: [{"id":"attachmentId","name":"attachmentName","taskId":"aTaskId","description":"attachmentDescription","type":"attachmentType","url":"http://my-attachment-content-url.de","createTime":"2017-02-10T14:33:19.000+0200","removalTime":"2018-02-10T14:33:19.000+0200","rootProcessInstanceId":"aRootProcessInstanceId"},{"id":"anotherAttachmentId","name":"anotherAttachmentName","taskId":"aTaskId","description":"anotherAttachmentDescription","type":"anotherAttachmentType","url":"http://my-another-attachment-content-url.de","createTime":"2017-02-10T14:33:19.000+0200","removalTime":"2018-02-10T14:33:19.000+0200","rootProcessInstanceId":"aRootProcessInstanceId"},{"id":"yetAnotherAttachmentId","name":"yetAnotherAttachmentName","taskId":"aTaskId","description":"yetAnotherAttachmentDescription","type":"yetAnotherAttachmentType","url":"http://yet-another-attachment-content-url.de","createTime":"2017-02-10T14:33:19.000+0200","removalTime":"2018-02-10T14:33:19.000+0200","rootProcessInstanceId":"aRootProcessInstanceId"}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: No task exists for the given task id. See the [Introduction](/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /task/{id}/attachment/create	;post class Operation {
    tags: [Task Attachment]
    summary: null
    description: Creates an attachment for a task.
    externalDocs: null
    operationId: addAttachment
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to add the attachment to.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {multipart/form-data=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/MultiFormAttachmentDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST /task/aTaskId/attachment/create
                    description: Post data for a new task attachment.
                    value: ------------------------------925df49a954b
                                            Content-Disposition: form-data; name="url"
                    
                                            http://my-attachment-content-url.de
                                            ------------------------------925df49a954b
                                            Content-Disposition: form-data; name="attachment-name"
                    
                                            attachmentName
                                            ------------------------------925df49a954b
                                            Content-Disposition: form-data; name="attachment-description"
                    
                                            attachmentDescription
                                            ------------------------------925df49a954b
                                            Content-Disposition: form-data; name="attachment-type"
                    
                                            attachmentType
                                            ------------------------------925df49a954b--
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/AttachmentDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: null
                        value: {"id":"attachmentId","name":"attachmentName","taskId":"aTaskId","description":"attachmentDescription","type":"attachmentType","url":"http://my-attachment-content-url.de","createTime":"2017-02-10T14:33:19.000+0200","removalTime":"2018-02-10T14:33:19.000+0200","rootProcessInstanceId":"aRootProcessInstanceId","links":[{"method":"GET","href":"http://localhost:38080/rest-test/task/aTaskId/attachment/aTaskAttachmentId","rel":"self"}]}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: The task does not exists or task id is null. No content or url to remote content exists. See the
            [Introduction](/reference/rest/overview/#error-handling) for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 403=class ApiResponse {
            description: The history of the engine is disabled. See the [Introduction](/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/AuthorizationExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /task/{id}/attachment/{attachmentId}	;get class Operation {
    tags: [Task Attachment]
    summary: null
    description: Retrieves a task attachment by task id and attachment id.
    externalDocs: null
    operationId: getAttachment
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: attachmentId
            in: null
            description: The id of the attachment to be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/AttachmentDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: GET /task/aTaskId/attachment/aTaskAttachmentId
                        description: null
                        value: {"id":"attachmentId","name":"attachmentName","taskId":"aTaskId","description":"attachmentDescription","type":"attachmentType","url":"http://my-attachment-content-url.de","createTime":"2017-02-10T14:33:19.000+0200","removalTime":"2018-02-10T14:33:19.000+0200","rootProcessInstanceId":"aRootProcessInstanceId","links":[{"method":"GET","href":"http://localhost:38080/rest-test/task/aTaskId/attachment/aTaskAttachmentId","rel":"self"}]}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: The attachment for the given task and attachment id does not exist or the history of the engine is
            disabled.
            
            See the [Introduction](/reference/rest/overview/#error-handling) for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /task/{id}/attachment/{attachmentId}	;delete class Operation {
    tags: [Task Attachment]
    summary: null
    description: Removes an attachment from a task by id.
    externalDocs: null
    operationId: deleteAttachment
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: attachmentId
            in: null
            description: The id of the attachment to be removed.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 403=class ApiResponse {
            description: The history of the engine is disabled. See the [Introduction](/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/AuthorizationExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: A Task Attachment for the given task id and attachment id does not exist. See the
            [Introduction](/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /task/{id}/attachment/{attachmentId}/data	;get class Operation {
    tags: [Task Attachment]
    summary: null
    description: Retrieves the binary content of a task attachment by task id and attachment id.
    externalDocs: null
    operationId: getAttachmentData
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: attachmentId
            in: null
            description: The id of the attachment to be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/octet-stream=class MediaType {
                    schema: class BinarySchema {
                        class Schema {
                            type: string
                            format: binary
                            $ref: null
                            description: For files without any MIME type information, a byte stream is returned.
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: null
                    example: null
                    encoding: null
                }, text/plain=class MediaType {
                    schema: class BinarySchema {
                        class Schema {
                            type: string
                            format: binary
                            $ref: null
                            description: Files with MIME type information are returned as the saved type. Additionally, for file
                                                        responses, the Content-Disposition header will be set.
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: The attachment content for the given task id and attachment id does not exist, or the history of the
            engine is disabled.
            
            See the [Introduction](/reference/rest/overview/#error-handling) for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Multiple schemas found in the OAS 'content' section, returning only the first one (application/octet-stream)
[WARNING] Multiple schemas found in the OAS 'content' section, returning only the first one (application/octet-stream)
[INFO] processOperation: resourcePath=  /task/{id}/bpmnError	;post class Operation {
    tags: [Task]
    summary: null
    description: Reports a business error in the context of a running task by id. The error code must
    be specified to identify the BPMN error handler. See the documentation for
    [Reporting Bpmn Error](https://docs.camunda.org/manual/7.14/reference/bpmn20/tasks/user-task/#reporting-bpmn-error)
    in User Tasks.
    externalDocs: null
    operationId: handleBpmnError
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task a BPMN error is reported for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/TaskBpmnErrorDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: Request Body
                    description: POST `/task/aTaskId/bpmnError`
                    value: {"errorCode":"bpmn-error-543","errorMessage":"anErrorMessage","variables":{"aVariable":{"value":"aStringValue","type":"String"},"anotherVariable":{"value":true,"type":"Boolean"}}}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 403=class ApiResponse {
            description: If the authenticated user is unauthorized to update the process instance. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/AuthorizationExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Returned if the task does not exist or <code>errorCode</code> is not presented in
            the request. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /task/{id}/bpmnEscalation	;post class Operation {
    tags: [Task]
    summary: null
    description: Reports an escalation in the context of a running task by id. The escalation code must
    be specified to identify the escalation handler. See the documentation for
    [Reporting Bpmn Escalation](https://docs.camunda.org/manual/7.14/reference/bpmn20/tasks/user-task/#reporting-bpmn-escalation)
    in User Tasks.
    externalDocs: null
    operationId: handleEscalation
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task in which context a BPMN escalation is reported.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/TaskEscalationDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: Request Body
                    description: POST `/task/aTaskId/bpmnEscalation`
                    value: {"escalationCode":"bpmn-escalation-432","variables":{"aVariable":{"value":"aStringValue","type":"String"},"anotherVariable":{"value":true,"type":"Boolean"}}}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 403=class ApiResponse {
            description: If the authenticated user is unauthorized to update the process instance. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/AuthorizationExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Returned if the task does not exist or <code>errorCode</code> is not presented in
            the request. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /task/{id}/claim	;post class Operation {
    tags: [Task]
    summary: null
    description: Claims a task for a specific user.
    
    **Note:** The difference with the
    [Set Assignee](https://docs.camunda.org/manual/7.14/reference/rest/task/post-assignee/)
    method is that here a check is performed to see if the task already has a user
    assigned to it.
    externalDocs: null
    operationId: claim
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to claim.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: Provide the id of the user that claims the task.
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/UserIdDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: Request Body
                    description: POST `/task/anId/claim`
                    value: {"userId":"aUserId"}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: Task with given id does not exist or claiming was not successful. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /task/{id}/comment	;get class Operation {
    tags: [Task Comment]
    summary: null
    description: Gets the comments for a task by id.
    externalDocs: null
    operationId: getComments
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to retrieve the comments for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/CommentDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET /task/aTaskId/comment
                        description: null
                        value: [{"id":"commentId","userId":"userId","taskId":"aTaskId","time":"2013-01-02T21:37:03.764+0200","message":"message","removalTime":"2018-02-10T14:33:19.000+0200","rootProcessInstanceId":"aRootProcessInstanceId"},{"id":"anotherCommentId","userId":"anotherUserId","taskId":"aTaskId","time":"2013-02-23T20:37:43.975+0200","message":"anotherMessage","removalTime":"2018-02-10T14:33:19.000+0200","rootProcessInstanceId":"aRootProcessInstanceId"},{"id":"yetAnotherCommentId","userId":"yetAnotherUserId","taskId":"aTaskId","time":"2013-04-21T10:15:23.764+0200","message":"yetAnotherMessage","removalTime":"2018-02-10T14:33:19.000+0200","rootProcessInstanceId":"aRootProcessInstanceId"}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: No task exists for the given task id. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /task/{id}/comment/create	;post class Operation {
    tags: [Task Comment]
    summary: null
    description: Creates a comment for a task by id.
    externalDocs: null
    operationId: createComment
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to add the comment to.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: **Note:** Only the `message` property will be used. Every other property passed to this endpoint will be ignored.
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/CommentDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST /task/aTaskId/comment/create
                    description: null
                    value: {"message":"a task comment"}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/CommentDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: null
                        value: {"links":[{"method":"GET","href":"http://localhost:38080/rest-test/task/aTaskId/comment/aTaskCommentId","rel":"self"}],"id":"aTaskCommentId","userId":"userId","taskId":"aTaskId","time":"2013-01-02T21:37:03.887+0200","message":"comment message","removalTime":"2018-02-10T14:33:19.000+0200","rootProcessInstanceId":"aRootProcessInstanceId"}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: The task does not exist or no comment message was submitted. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 403=class ApiResponse {
            description: The history of the engine is disabled. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/AuthorizationExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /task/{id}/comment/{commentId}	;get class Operation {
    tags: [Task Comment]
    summary: null
    description: Retrieves a task comment by task id and comment id.
    externalDocs: null
    operationId: getComment
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: commentId
            in: null
            description: The id of the comment to be retrieved.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/CommentDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: GET /task/aTaskId/comment
                        description: null
                        value: {"id":"aTaskCommentId","userId":"userId","taskId":"aTaskId","time":"2013-01-02T21:37:03.664+0200","message":"comment content","removalTime":"2018-02-10T14:33:19.000+0200","rootProcessInstanceId":"aRootProcessInstanceId"}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: The task or comment with given task and comment id does not exist, or the history of
            the engine is disabled. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /task/{id}/complete	;post class Operation {
    tags: [Task]
    summary: null
    description: Completes a task and updates process variables.
    externalDocs: null
    operationId: complete
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to complete.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/CompleteTaskDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/task/anId/complete`
                    description: Complete Task with variables in return
                    value: {"variables":{"aVariable":{"value":"aStringValue"},"anotherVariable":{"value":42},"aThirdVariable":{"value":true}},"withVariablesInReturn":true}
                    externalValue: null
                    $ref: null
                }, example-2=class Example {
                    summary: POST `/task/anId/complete`
                    description: Complete Task without variables in return
                    value: {"variables":{"aVariable":{"value":"aStringValue"},"anotherVariable":{"value":42},"aThirdVariable":{"value":true}}}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful. The response contains the process variables.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class MapSchema {
                        class Schema {
                            type: object
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: class Schema {
                                type: null
                                format: null
                                $ref: #/components/schemas/VariableValueDto
                                description: null
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                not: null
                                properties: null
                                additionalProperties: null
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: POST `/task/anId/complete`
                        description: Response Body
                        value: {"variables":{"aVariable":{"value":"aStringValue"},"anotherVariable":{"value":42},"aThirdVariable":{"value":true}}}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 204=class ApiResponse {
            description: Request successful. The response contains no variables.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: The variable value or type is invalid, for example if the value could not be parsed
            to an Integer value or the passed variable type is not supported. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: If the task does not exist or the corresponding process instance could not be
            resumed successfully. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /task/{id}/delegate	;post class Operation {
    tags: [Task]
    summary: null
    description: Delegates a task to another user.
    externalDocs: null
    operationId: delegateTask
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to delegate.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: Provide the id of the user that the task should be delegated to.
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/UserIdDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: Request Body
                    description: POST `/task/anId/delegate`
                    value: {"userId":"aUserId"}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: If the task does not exist or delegation was not successful. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /task/{id}/deployed-form	;get class Operation {
    tags: [Task]
    summary: null
    description: Retrieves the deployed form that is referenced from a given task. For further
    information please refer to the
    [User Guide](https://docs.camunda.org/manual/7.14/user-guide/task-forms/#embedded-task-forms).
    externalDocs: null
    operationId: getDeployedForm
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to get the deployed form for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/xhtml+xml=class MediaType {
                    schema: class BinarySchema {
                        class Schema {
                            type: string
                            format: binary
                            $ref: null
                            description: For `application/xhtml+xml` Responses, a byte stream is returned.
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: Resonse for GET `/task/taskId/deployed-form`
                        value: <form role="form" name="invoiceForm"
                                                              class="form-horizontal">
                        
                                                          <div class="form-group">
                                                            <label class="control-label col-md-4"
                                                                   for="creditor">Creditor</label>
                                                            <div class="col-md-8">
                                                              <input cam-variable-name="creditor"
                                                                     cam-variable-type="String"
                                                                     id="creditor"
                                                                     class="form-control"
                                                                     type="text"
                                                                     required />
                                                              <div class="help">
                                                                (e.g. &quot;Great Pizza for Everyone Inc.&quot;)
                                                              </div>
                                                            </div>
                                                          </div>
                        
                                                        </form>
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: The form key has wrong format. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 403=class ApiResponse {
            description: The deployed form cannot be retrieved due to missing permissions on task resource.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/AuthorizationExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: No deployed form for a given task exists. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /task/{id}/form	;get class Operation {
    tags: [Task]
    summary: null
    description: Retrieves the form key for a task. The form key corresponds to the `FormData#formKey`
    property in the engine. This key can be used to do task-specific form rendering in
    client applications. Additionally, the context path of the containing process
    application is returned.
    externalDocs: null
    operationId: getForm
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to retrieve the form for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/FormDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: GET `/task/anId/form`
                        value: {"key":"aFormKey","contextPath":"http://localhost:8080/my-process-application/"}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Task with given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /task/{id}/form-variables	;get class Operation {
    tags: [Task]
    summary: null
    description: Retrieves the form variables for a task. The form variables take form data specified
    on the task into account. If form fields are defined, the variable types and default
    values of the form fields are taken into account.
    externalDocs: null
    operationId: getFormVariables
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to retrieve the variables for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class QueryParameter {
        class Parameter {
            name: variableNames
            in: null
            description: A comma-separated list of variable names. Allows restricting the list of requested
            variables to the variable names in the list. It is best practice to restrict the
            list of variables to the variables actually required by the form in order to
            minimize fetching of data. If the query parameter is ommitted all variables are
            fetched. If the query parameter contains non-existent variable names, the variable
            names are ignored.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: deserializeValues
            in: null
            description: Determines whether serializable variable values (typically variables that store
            custom Java objects) should be deserialized on server side (default true).
            
            If set to true, a serializable variable will be deserialized on server side and
            transformed to JSON using [Jackson's](http://jackson.codehaus.org/) POJO/bean
            property introspection feature. Note that this requires the Java classes of the
            variable value to be on the REST API's classpath.
            
            If set to false, a serializable variable will be returned in its serialized format.
            For example, a variable that is serialized as XML will be returned as a JSON string
            containing XML.
            
            Note: While true is the default value for reasons of backward compatibility, we
            recommend setting this parameter to false when developing web applications that are
            independent of the Java process applications deployed to the engine.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful. A JSON object containing a property for each variable returned.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class MapSchema {
                        class Schema {
                            type: object
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: class Schema {
                                type: null
                                format: null
                                $ref: #/components/schemas/VariableValueDto
                                description: null
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                not: null
                                properties: null
                                additionalProperties: null
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: GET `/task/anId/form-variables`
                        value: {"amount":{"type":"integer","value":5,"valueInfo":{}},"firstName":{"type":"String","value":"Jonny","valueInfo":{}}}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description:  id is null or does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /task/{id}/identity-links	;get class Operation {
    tags: [Task Identity Link]
    summary: null
    description: Gets the identity links for a task by id, which are the users and groups that are in
    *some* relation to it (including assignee and owner).
    externalDocs: null
    operationId: getIdentityLinks
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to retrieve the identity links for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class QueryParameter {
        class Parameter {
            name: type
            in: null
            description: Filter by the type of links to include.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/IdentityLinkDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET /task/anId/identityLinks
                        description: null
                        value: [{"userId":"userId","groupId":null,"type":"assignee"},{"userId":null,"groupId":"groupId1","type":"candidate"},{"userId":null,"groupId":"groupId2","type":"candidate"}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Task with given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /task/{id}/identity-links	;post class Operation {
    tags: [Task Identity Link]
    summary: null
    description: Adds an identity link to a task by id. Can be used to link any user or group to a task
    and specify a relation.
    externalDocs: null
    operationId: addIdentityLink
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to add a link to.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/IdentityLinkDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/task/anId/identity-links`
                    description: null
                    value: {"groupId":"aNewGroupId","type":"candidate"}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Task with given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /task/{id}/identity-links/delete	;post class Operation {
    tags: [Task Identity Link]
    summary: null
    description: Removes an identity link from a task by id
    externalDocs: null
    operationId: deleteIdentityLink
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to remove a link from.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/IdentityLinkDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/task/anId/identityLinks/delete`
                    description: null
                    value: {"groupId":"theOldGroupId","type":"candidate"}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Task with given id does not exist.
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for
            the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /task/{id}/localVariables	;get class Operation {
    tags: [Task Local Variable]
    summary: null
    description: Retrieves all variables of a given task by id.
    externalDocs: null
    operationId: getTaskLocalVariables
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to retrieve the variables from.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class QueryParameter {
        class Parameter {
            name: deserializeValues
            in: null
            description: Determines whether serializable variable values (typically variables that store custom Java objects)
            should be deserialized on the server side (default `true`).
            
            If set to `true`, a serializable variable will be deserialized on server side and transformed to JSON
            using [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.
            Note that this requires the Java classes of the variable value to be on the REST API's classpath.
            
            If set to `false`, a serializable variable will be returned in its serialized format.
            For example, a variable that is serialized as XML will be returned as a JSON string containing XML.
            
            **Note:** While `true` is the default value for reasons of backward compatibility, we recommend setting this
            parameter to `false` when developing web applications that are independent of the Java process
            applications deployed to the engine.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class MapSchema {
                        class Schema {
                            type: object
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: class Schema {
                                type: null
                                format: null
                                $ref: #/components/schemas/VariableValueDto
                                description: null
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                not: null
                                properties: null
                                additionalProperties: null
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET `/task/aTaskId/variables`
                        description: null
                        value: {"aVariableKey":{"value":{"prop1":"a","prop2":"b"},"type":"Object","valueInfo":{"objectTypeName":"com.example.MyObject","serializationDataFormat":"application/xml"}}}
                        externalValue: null
                        $ref: null
                    }, example-2=class Example {
                        summary: GET `/task/aTaskId/variables?deserializeValue=false`
                        description: null
                        value: {"aVariableKey":{"value":"ab","type":"Object","valueInfo":{"objectTypeName":"com.example.MyObject","serializationDataFormat":"application/xml"}}}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: Task id is `null` or does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /task/{id}/localVariables	;post class Operation {
    tags: [Task Local Variable]
    summary: null
    description: Updates or deletes the variables in the context of a task. Updates precede deletions. So, if a variable is
    updated AND deleted, the deletion overrides the update.
    externalDocs: null
    operationId: modifyTaskLocalVariables
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to set variables for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/PatchVariablesDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/task/aTaskId/variables`
                    description: Status 204 Response: No content.
                    value: {"modifications":{"aVariable":{"value":"aValue","type":"String"},"anotherVariable":{"value":42,"type":"Integer"}},"deletions":["aThirdVariable","FourthVariable"]}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: The variable value or type is invalid. For example the value could not be parsed to an `Integer` value
            or the passed variable type is not supported. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: Update or delete could not be executed because the task is `null` or does not exist.. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /task/{id}/localVariables/{varName}	;get class Operation {
    tags: [Task Local Variable]
    summary: null
    description: Retrieves a variable from the context of a given task by id.
    externalDocs: null
    operationId: getTaskLocalVariable
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to retrieve the variable from.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: varName
            in: null
            description: The name of the variable to get
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class QueryParameter {
        class Parameter {
            name: deserializeValue
            in: null
            description: Determines whether serializable variable values (typically variables that store custom Java objects)
            should be deserialized on the server side (default `true`).
            
            If set to `true`, a serializable variable will be deserialized on server side and transformed to JSON
            using [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.
            Note that this requires the Java classes of the variable value to be on the REST API's classpath.
            
            If set to `false`, a serializable variable will be returned in its serialized format.
            For example, a variable that is serialized as XML will be returned as a JSON string containing XML.
            
            Note: While `true` is the default value for reasons of backward compatibility, we recommend setting this
            parameter to `false` when developing web applications that are independent of the Java process
            applications deployed to the engine.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/VariableValueDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: GET `/task/aTaskId/variables/myObject123`
                        description: null
                        value: {"value":{"prop1":"a","prop2":"b"},"type":"Object","valueInfo":{"objectTypeName":"com.example.MyObject","serializationDataFormat":"application/xml"}}
                        externalValue: null
                        $ref: null
                    }, example-2=class Example {
                        summary: GET `/task/aTaskId/variables/myObject123?deserializeValue=false`
                        description: null
                        value: {"value":"ab","type":"Object","valueInfo":{"objectTypeName":"com.example.MyObject","serializationDataFormat":"application/xml"}}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Variable with given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: Task id is `null` or does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /task/{id}/localVariables/{varName}	;put class Operation {
    tags: [Task Local Variable]
    summary: null
    description: Sets a variable in the context of a given task.
    externalDocs: null
    operationId: putTaskLocalVariable
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to set the variable for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: varName
            in: null
            description: The name of the variable to set.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/VariableValueDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: PUT /task/aTaskId/variables/aVarName
                    description: Status 204. No content.
                    value: {"value":"someValue","type":"String"}
                    externalValue: null
                    $ref: null
                }, example-2=class Example {
                    summary: PUT /task/aTaskId/variables/aVarName
                    description: An Object Variable PUT Request. Status 204. No content.
                    value: {"value":"ab","type":"Object","valueInfo":{"objectTypeName":"com.example.MyObject","serializationDataFormat":"application/xml"}}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: The variable name, value or type is invalid, for example if the value could not be parsed to an `Integer`
            value or the passed variable type is not supported or a new transient variable has the name that is
            already persisted. See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: The variable name is `null`, or the Task id is `null` or does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /task/{id}/localVariables/{varName}	;delete class Operation {
    tags: [Task Local Variable]
    summary: null
    description: Removes a local variable from a task by id.
    externalDocs: null
    operationId: deleteTaskLocalVariable
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to delete the variable from.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: varName
            in: null
            description: The name of the variable to be removed.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: Task id is `null` or does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /task/{id}/localVariables/{varName}/data	;get class Operation {
    tags: [Task Local Variable]
    summary: null
    description: Retrieves a binary variable from the context of a given task by id. Applicable for byte array and file
    variables.
    externalDocs: null
    operationId: getTaskLocalVariableBinary
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to retrieve the variable for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: varName
            in: null
            description: The name of the variable to retrieve.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
                    For binary variables or files without any MIME type information, a byte stream is returned.
                    File variables with MIME type information are returned as the saved type.
                    Additionally, for file variables the Content-Disposition header will be set.
            headers: null
            content: class Content {
                {application/octet-stream=class MediaType {
                    schema: class BinarySchema {
                        class Schema {
                            type: string
                            format: binary
                            $ref: null
                            description: For binary variables or files without any MIME type information, a byte stream is returned.
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET /task/aTaskId/variables/aVarName/data
                        description: null
                        value: binary variable: Status 200. Content-Type: application/octet-stream
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }, text/plain=class MediaType {
                    schema: class BinarySchema {
                        class Schema {
                            type: string
                            format: binary
                            $ref: null
                            description: File variables with MIME type information are returned as the saved type.
                                        Additionally, for file variables the Content-Disposition header will be set.
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET /task/aTaskId/variables/aVarName/data
                        description: null
                        value: file variable: Status 200. Content-Type: text/plain; charset=UTF-8. Content-Disposition: attachment; filename="someFile.txt"
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Variable with given id exists but is not a binary variable.See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Variable with given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Multiple schemas found in the OAS 'content' section, returning only the first one (application/octet-stream)
[WARNING] Multiple schemas found in the OAS 'content' section, returning only the first one (application/octet-stream)
[INFO] processOperation: resourcePath=  /task/{id}/localVariables/{varName}/data	;post class Operation {
    tags: [Task Local Variable]
    summary: null
    description: Sets the serialized value for a binary variable or the binary value for a file variable.
    externalDocs: null
    operationId: setBinaryTaskLocalVariable
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to retrieve the variable for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: varName
            in: null
            description: The name of the variable to retrieve.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: For binary variables a multipart form submit with the following parts:
        content: class Content {
            {multipart/form-data=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/MultiFormVariableBinaryDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/task/aTaskId/variables/aVarName/data` (1)
                    description: Post binary content of a byte array variable.
                    value: 
                                            ```
                                            ------------------------------354ddb6baeff
                                            Content-Disposition: form-data; name="data"; filename="image.png"
                                            Content-Type: application/octet-stream
                                            Content-Transfer-Encoding: binary
                    
                                            <<Byte Stream ommitted>>
                                            ------------------------------354ddb6baeff
                                            Content-Disposition: form-data; name="valueType"
                                            Content-Type: text/plain; charset=US-ASCII
                                            Content-Transfer-Encoding: 8bit
                    
                                            Bytes
                                            ------------------------------1e838f8f632a--
                                            ```
                                          
                    externalValue: null
                    $ref: null
                }, example-2=class Example {
                    summary: POST `/task/aTaskId/variables/aVarName/data` (2)
                    description: Post the JSON serialization of a Java Class (**deprecated**).
                    value: 
                                            ```
                                            ------------------------------1e838f8f632a
                                            Content-Disposition: form-data; name="type"
                                            Content-Type: text/plain; charset=US-ASCII
                                            Content-Transfer-Encoding: 8bit
                    
                                            java.util.ArrayList<java.lang.Object>
                                            ------------------------------1e838f8f632a
                                            Content-Disposition: form-data; name="data"
                                            Content-Type: application/json; charset=US-ASCII
                                            Content-Transfer-Encoding: 8bit
                    
                                            ["foo","bar"]
                                            ------------------------------1e838f8f632a--
                                            ```
                                          
                    externalValue: null
                    $ref: null
                }, example-3=class Example {
                    summary: POST `/task/aTaskId/variables/aVarName/data` (3)
                    description: Post a text file.
                    value: 
                                            ```
                                            ---OSQH1f8lzs83iXFHphqfIuitaQfNKFY74Y
                                            Content-Disposition: form-data; name="data"; filename="myFile.txt"
                                            Content-Type: text/plain; charset=US-ASCII
                                            Content-Transfer-Encoding: binary
                    
                                            <<Byte Stream ommitted>>
                                            ---OSQH1f8lzs83iXFHphqfIuitaQfNKFY74Y
                                            Content-Disposition: form-data; name="valueType"
                                            Content-Type: text/plain; charset=US-ASCII
                                            Content-Transfer-Encoding: 8bit
                    
                                            File
                                            ------------------------------1e838f8f632a--
                                            ```
                                          
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: The variable value or type is invalid, for example if no filename is set. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: Variable name is `null`, or the Task id is `null` or does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /task/{id}/rendered-form	;get class Operation {
    tags: [Task]
    summary: null
    description: Retrieves the rendered form for a task. This method can be used to get the HTML
    rendering of a
    [Generated Task Form](https://docs.camunda.org/manual/7.14/user-guide/task-forms/#generated-task-forms).
    externalDocs: null
    operationId: getRenderedForm
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to get the rendered form for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/xhtml+xml=class MediaType {
                    schema: class BinarySchema {
                        class Schema {
                            type: string
                            format: binary
                            $ref: null
                            description: For `application/xhtml+xml` Responses, a byte stream is returned.
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: A `/task/anId/rendered-form` HTML GET response body providing the rendered (generated) form content.
                        value: <form class="form-horizontal">
                                                          <div class="control-group">
                                                            <label class="control-label">Customer ID</label>
                                                            <div class="controls">
                                                              <input form-field type="string" name="customerId"></input>
                                                            </div>
                                                          </div>
                                                          <div class="control-group">
                                                            <label class="control-label">Amount</label>
                                                            <div class="controls">
                                                              <input form-field type="number" name="amount"></input>
                                                            </div>
                                                          </div>
                                                        </form>
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: The task with the given id does not exist or has no form field metadata defined for
            this task. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /task/{id}/resolve	;post class Operation {
    tags: [Task]
    summary: null
    description: Resolves a task and updates execution variables.
    
    Resolving a task marks that the assignee is done with the task delegated to them, and
    that it can be sent back to the owner. Can only be executed when the task has been
    delegated. The assignee will be set to the owner, who performed the delegation.
    externalDocs: null
    operationId: resolve
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to resolve.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/CompleteTaskDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: Request Body
                    description: POST `/task/anId/resolve`
                    value: {"variables":{"aVariable":{"value":"aStringValue"},"anotherVariable":{"value":42},"aThirdVariable":{"value":true}}}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: The variable value or type is invalid, for example if the value could not be parsed
            to an Integer value or the passed variable type is not supported. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: If the task does not exist or the corresponding process instance could not be
            resumed successfully. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /task/{id}/submit-form	;post class Operation {
    tags: [Task]
    summary: null
    description: Completes a task and updates process variables using a form submit. There are two
    difference between this method and the `complete` method:
    
    * If the task is in state `PENDING` - i.e., has been delegated before, it is not
    completed but resolved. Otherwise it will be completed.
    * If the task has Form Field Metadata defined, the process engine will perform backend
    validation for any form fields which have validators defined.
    See the
    [Generated Task Forms](https://docs.camunda.org/manual/7.14/user-guide/task-forms/_index/#generated-task-forms)
    section of the [User Guide](https://docs.camunda.org/manual/7.14/user-guide/) for more information.
    externalDocs: null
    operationId: submit
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to submit the form for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/CompleteTaskDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: Request Body 1
                    description: POST `/task/anId/submit-form`
                    value: {"variables":{"aVariable":{"value":"aStringValue"},"anotherVariable":{"value":42},"aThirdVariable":{"value":true},"aFileVariable":{"value":"TG9yZW0gaXBzdW0=","type":"File","valueInfo":{"filename":"myFile.txt"}}}}
                    externalValue: null
                    $ref: null
                }, example-2=class Example {
                    summary: Request Body 2
                    description: POST `/task/anId/complete`
                    value: {"variables":{"aVariable":{"value":"aStringValue"},"anotherVariable":{"value":42},"aThirdVariable":{"value":true}},"withVariablesInReturn":true}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful. The response contains the process variables.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class MapSchema {
                        class Schema {
                            type: object
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: class Schema {
                                type: null
                                format: null
                                $ref: #/components/schemas/VariableValueDto
                                description: null
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                not: null
                                properties: null
                                additionalProperties: null
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: Response Body
                        description: Response of a submitted task form with variables in return
                        value: {"aVariable":{"value":"aStringValue","type":"String","valueInfo":{}},"anotherVariable":{"value":42,"type":"Integer","valueInfo":{}},"aThirdVariable":{"value":true,"type":"Boolean","valueInfo":{}}}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 204=class ApiResponse {
            description: Request successful. The response contains no variables.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: The variable value or type is invalid, for example if the value could not be parsed to an Integer value
            or the passed variable type is not supported.
            
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for
            the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: If the task does not exist or the corresponding process instance could not be resumed successfully.
            
            See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling) for
            the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /task/{id}/unclaim	;post class Operation {
    tags: [Task]
    summary: null
    description: Resets a task's assignee. If successful, the task is not assigned to a user.
    externalDocs: null
    operationId: unclaim
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to unclaim.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: The Task with the given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /task/{id}/variables	;get class Operation {
    tags: [Task Variable]
    summary: null
    description: Retrieves all variables visible from the task. A variable is visible from the task if it is a local task
    variable or declared in a parent scope of the task. See documentation on
    [visiblity of variables](https://docs.camunda.org/manual/7.14/user-guide/process-engine/variables/).
    externalDocs: null
    operationId: getTaskVariables
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to retrieve the variables from.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class QueryParameter {
        class Parameter {
            name: deserializeValue
            in: null
            description: Determines whether serializable variable values (typically variables that store custom Java objects)
            should be deserialized on the server side (default `true`).
            If set to `true`, a serializable variable will be deserialized on server side and transformed to JSON
            using [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.
            Note that this requires the Java classes of the variable value to be on the REST API's classpath.
            
            If set to `false`, a serializable variable will be returned in its serialized format.
            For example, a variable that is serialized as XML will be returned as a JSON string containing XML.
            
            Note: While `true` is the default value for reasons of backward compatibility, we recommend setting this
            parameter to `false` when developing web applications that are independent of the Java process
            applications deployed to the engine.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class MapSchema {
                        class Schema {
                            type: object
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: class Schema {
                                type: null
                                format: null
                                $ref: #/components/schemas/VariableValueDto
                                description: null
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                not: null
                                properties: null
                                additionalProperties: null
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET `/task/aTaskId/variables`
                        description: null
                        value: {"aVariableKey":{"value":{"prop1":"a","prop2":"b"},"type":"Object","valueInfo":{"objectTypeName":"com.example.MyObject","serializationDataFormat":"application/xml"}}}
                        externalValue: null
                        $ref: null
                    }, example-2=class Example {
                        summary: GET `/task/aTaskId/variables?deserializeValue=false`
                        description: null
                        value: {"aVariableKey":{"value":"ab","type":"Object","valueInfo":{"objectTypeName":"com.example.MyObject","serializationDataFormat":"application/xml"}}}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: Task id is `null` or does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /task/{id}/variables	;post class Operation {
    tags: [Task Variable]
    summary: null
    description: Updates or deletes the variables visible from the task. Updates precede deletions. So, if a variable is
    updated AND deleted, the deletion overrides the update. A variable is visible from the task if it is a
    local task variable or declared in a parent scope of the task. See documentation on
    [visiblity of variables](https://docs.camunda.org/manual/7.14/user-guide/process-engine/variables/).
    externalDocs: null
    operationId: modifyTaskVariables
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to set variables for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/PatchVariablesDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/task/aTaskId/variables`
                    description: Status 204 Response: No content.
                    value: {"modifications":{"aVariable":{"value":"aValue","type":"String"},"anotherVariable":{"value":42,"type":"Integer"}},"deletions":["aThirdVariable","FourthVariable"]}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: The variable value or type is invalid. For example the value could not be parsed to an `Integer` value
            or the passed variable type is not supported. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: Update or delete could not be executed because the task is `null` or does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /task/{id}/variables/{varName}	;get class Operation {
    tags: [Task Variable]
    summary: null
    description: Retrieves a variable from the context of a given task.
    The variable must be visible from the task. It is visible from the task if it is a local task variable or
    declared in a parent scope of the task. See documentation on
    [visiblity of variables](https://docs.camunda.org/manual/7.14/user-guide/process-engine/variables/).
    externalDocs: null
    operationId: getTaskVariable
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to retrieve the variable from.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: varName
            in: null
            description: The name of the variable to get.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class QueryParameter {
        class Parameter {
            name: deserializeValue
            in: null
            description: Determines whether serializable variable values (typically variables that store custom Java objects)
            should be deserialized on the server side (default `true`).
            
            If set to `true`, a serializable variable will be deserialized on server side and transformed to JSON
            using [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.
            Note that this requires the Java classes of the variable value to be on the REST API's classpath.
            
            If set to `false`, a serializable variable will be returned in its serialized format.
            For example, a variable that is serialized as XML will be returned as a JSON string containing XML.
            
            Note: While `true` is the default value for reasons of backward compatibility, we recommend setting this
            parameter to `false` when developing web applications that are independent of the Java process
            applications deployed to the engine.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class BooleanSchema {
                class Schema {
                    type: boolean
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/VariableValueDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: GET `/task/aTaskId/variables/myObject123`
                        description: null
                        value: {"value":{"prop1":"a","prop2":"b"},"type":"Object","valueInfo":{"objectTypeName":"com.example.MyObject","serializationDataFormat":"application/xml"}}
                        externalValue: null
                        $ref: null
                    }, example-2=class Example {
                        summary: GET `/task/aTaskId/variables/myObject123?deserializeValue=false`
                        description: null
                        value: {"value":"ab","type":"Object","valueInfo":{"objectTypeName":"com.example.MyObject","serializationDataFormat":"application/xml"}}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Variable with given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: Task id is `null` or does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /task/{id}/variables/{varName}	;put class Operation {
    tags: [Task Variable]
    summary: null
    description: Updates a process variable that is visible from the Task scope. A variable is visible from the task if it
    is a local task variable, or declared in a parent scope of the task. See the documentation on
    [variable scopes and visibility](https://docs.camunda.org/manual/7.14/user-guide/process-engine/variables#variable-scopes-and-variable-visibility).
    
    **Note**: If a variable doesn't exist, the variable is created in the top-most scope
    visible from the task.
    externalDocs: null
    operationId: putTaskVariable
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to set the variable for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: varName
            in: null
            description: The name of the variable to set.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/VariableValueDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: PUT /task/aTaskId/variables/aVarName
                    description: Status 204. No content.
                    value: {"value":"someValue","type":"String"}
                    externalValue: null
                    $ref: null
                }, example-2=class Example {
                    summary: PUT /task/aTaskId/variables/aVarName
                    description: Status 204. No content.
                    value: {"value":"ab","type":"Object","valueInfo":{"objectTypeName":"com.example.MyObject","serializationDataFormat":"application/xml"}}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: The variable name, value or type is invalid, for example if the value could not be parsed to an `Integer`
            value or the passed variable type is not supported or a new transient variable has the name that is
            already persisted. See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: The variable name is `null`, or the Task id is `null` or does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /task/{id}/variables/{varName}	;delete class Operation {
    tags: [Task Variable]
    summary: null
    description: Removes a variable that is visible to a task. A variable is visible to a task if it is a local task
    variable or declared in a parent scope of the task. See documentation on
    [visiblity of variables](https://docs.camunda.org/manual/7.14/user-guide/process-engine/variables/).
    externalDocs: null
    operationId: deleteTaskVariable
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to delete the variable from.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: varName
            in: null
            description: The name of the variable to be removed.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: Task id is null or does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /task/{id}/variables/{varName}/data	;get class Operation {
    tags: [Task Variable]
    summary: null
    description: Retrieves a binary variable from the context of a given task. Applicable for byte array and file
    variables. The variable must be visible from the task. It is visible from the task if it is a local task
    variable or declared in a parent scope of the task. See documentation on
    [visiblity of variables](https://docs.camunda.org/manual/7.14/user-guide/process-engine/variables/).
    externalDocs: null
    operationId: getTaskVariableBinary
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to retrieve the variable for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: varName
            in: null
            description: The name of the variable to retrieve.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
                    For binary variables or files without any MIME type information, a byte stream is returned.
                    File variables with MIME type information are returned as the saved type.
                    Additionally, for file variables the Content-Disposition header will be set.
            headers: null
            content: class Content {
                {application/octet-stream=class MediaType {
                    schema: class BinarySchema {
                        class Schema {
                            type: string
                            format: binary
                            $ref: null
                            description: For binary variables or files without any MIME type information, a byte stream is returned.
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET /task/aTaskId/variables/aVarName/data
                        description: null
                        value: binary variable: Status 200. Content-Type: application/octet-stream
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }, text/plain=class MediaType {
                    schema: class BinarySchema {
                        class Schema {
                            type: string
                            format: binary
                            $ref: null
                            description: File variables with MIME type information are returned as the saved type.
                                        Additionally, for file variables the Content-Disposition header will be set.
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET /task/aTaskId/variables/aVarName/data
                        description: null
                        value: file variable: Status 200. Content-Type: text/plain; charset=UTF-8. Content-Disposition: attachment; filename="someFile.txt"
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Variable with given id exists but is not a binary variable.See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Variable with given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Multiple schemas found in the OAS 'content' section, returning only the first one (application/octet-stream)
[WARNING] Multiple schemas found in the OAS 'content' section, returning only the first one (application/octet-stream)
[INFO] processOperation: resourcePath=  /task/{id}/variables/{varName}/data	;post class Operation {
    tags: [Task Variable]
    summary: null
    description: Sets the serialized value for a binary variable or the binary value for a file variable visible from the
    task. A variable is visible from the task if it is a local task variable or declared in a parent scope of
    the task. See documentation on
    [visiblity of variables](https://docs.camunda.org/manual/7.14/user-guide/process-engine/variables/).
    externalDocs: null
    operationId: setBinaryTaskVariable
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the task to retrieve the variable for.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class PathParameter {
        class Parameter {
            name: varName
            in: null
            description: The name of the variable to retrieve.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: class RequestBody {
        description: For binary variables a multipart form submit with the following parts:
        content: class Content {
            {multipart/form-data=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/MultiFormVariableBinaryDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST `/task/aTaskId/variables/aVarName/data` (1)
                    description: Post binary content of a byte array variable.
                    value: 
                                            ```
                                            ------------------------------354ddb6baeff
                                            Content-Disposition: form-data; name="data"; filename="image.png"
                                            Content-Type: application/octet-stream
                                            Content-Transfer-Encoding: binary
                    
                                            <<Byte Stream ommitted>>
                                            ------------------------------354ddb6baeff
                                            Content-Disposition: form-data; name="valueType"
                                            Content-Type: text/plain; charset=US-ASCII
                                            Content-Transfer-Encoding: 8bit
                    
                                            Bytes
                                            ------------------------------1e838f8f632a--
                                            ```
                                          
                    externalValue: null
                    $ref: null
                }, example-2=class Example {
                    summary: POST `/task/aTaskId/variables/aVarName/data` (2)
                    description: Post the JSON serialization of a Java Class (**deprecated**).
                    value: 
                                            ```
                                            ------------------------------1e838f8f632a
                                            Content-Disposition: form-data; name="type"
                                            Content-Type: text/plain; charset=US-ASCII
                                            Content-Transfer-Encoding: 8bit
                    
                                            java.util.ArrayList<java.lang.Object>
                                            ------------------------------1e838f8f632a
                                            Content-Disposition: form-data; name="data"
                                            Content-Type: application/json; charset=US-ASCII
                                            Content-Transfer-Encoding: 8bit
                    
                                            ["foo","bar"]
                                            ------------------------------1e838f8f632a--
                                            ```
                                          
                    externalValue: null
                    $ref: null
                }, example-3=class Example {
                    summary: POST `/task/aTaskId/variables/aVarName/data` (3)
                    description: Post a text file.
                    value: 
                                            ```
                                            ---OSQH1f8lzs83iXFHphqfIuitaQfNKFY74Y
                                            Content-Disposition: form-data; name="data"; filename="myFile.txt"
                                            Content-Type: text/plain; charset=US-ASCII
                                            Content-Transfer-Encoding: binary
                    
                                            <<Byte Stream ommitted>>
                                            ---OSQH1f8lzs83iXFHphqfIuitaQfNKFY74Y
                                            Content-Disposition: form-data; name="valueType"
                                            Content-Type: text/plain; charset=US-ASCII
                                            Content-Transfer-Encoding: 8bit
                    
                                            File
                                            ------------------------------1e838f8f632a--
                                            ```
                                          
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: The variable value or type is invalid, for example if no filename is set. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: Variable name is `null`, or the Task id is `null` or does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /telemetry/configuration	;get class Operation {
    tags: [Telemetry]
    summary: Fetch Telemetry Configuration
    description: Fetches Telemetry Configuration.
    externalDocs: null
    operationId: getTelemetryConfiguration
    parameters: []
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/TelemetryConfigurationDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: The Response content of a status 200
                        value: {"enableTelemetry":true}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 401=class ApiResponse {
            description: If the user who perform the operation is not a <b>camunda-admin</b> user.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /telemetry/configuration	;post class Operation {
    tags: [Telemetry]
    summary: Configure Telemetry
    description: Configures whether Camunda receives data collection of the process engine setup and usage.
    externalDocs: null
    operationId: configureTelemetry
    parameters: []
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/TelemetryConfigurationDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {examle-1=class Example {
                    summary: POST /telemetry/configuration
                    description: The content of the Request Body
                    value: {"enableTelemetry":true}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 401=class ApiResponse {
            description: If the user who perform the operation is not a <b>camunda-admin</b> user.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /user	;get class Operation {
    tags: [User]
    summary: Get List
    description: Query for a list of users using a list of parameters.
    The size of the result set can be retrieved by using the Get User Count method.
    [Get User Count](https://docs.camunda.org/manual/7.14/reference/rest/user/get-query-count/) method.
    externalDocs: null
    operationId: getUsers
    parameters: [class QueryParameter {
        class Parameter {
            name: id
            in: null
            description: Filter by user id
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: idIn
            in: null
            description: Filter by a comma-separated list of user ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: firstName
            in: null
            description: Filter by the first name of the user. Exact match.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: firstNameLike
            in: null
            description: Filter by the first name that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: lastName
            in: null
            description: Filter by the last name of the user. Exact match.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: lastNameLike
            in: null
            description: Filter by the last name that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: email
            in: null
            description: Filter by the email of the user. Exact match.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: emailLike
            in: null
            description: Filter by the email that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: memberOfGroup
            in: null
            description: Filter for users which are members of the given group.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: memberOfTenant
            in: null
            description: Filter for users which are members of the given tenant.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: potentialStarter
            in: null
            description: Only select Users that are potential starter for the given process definition.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: sortBy
            in: null
            description: Sort the results lexicographically by a given criterion.
            Must be used in conjunction with the sortOrder parameter.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: sortOrder
            in: null
            description: Sort the results in a given order. Values may be asc for ascending order or desc for descending order.
            Must be used in conjunction with the sortBy parameter.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: firstResult
            in: null
            description: Pagination of results. Specifies the index of the first result to return.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: maxResults
            in: null
            description: Pagination of results. Specifies the maximum number of results to return.
            Will return less results if there are no more results left.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class IntegerSchema {
                class Schema {
                    type: integer
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/UserProfileDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET `/user?firstName=John`
                        description: null
                        value: [{"id":"jonny1","firstName":"John","lastName":"Doe","email":"anEmailAddress"},{"id":"jonny2","firstName":"John","lastName":"Smoe","email":"anotherEmailAddress"}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid, for example if a `sortOrder` parameter is supplied,
            but no `sortBy`, or if an invalid operator for variable comparison is used. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /user	;options class Operation {
    tags: [User]
    summary: Options
    description: The `/user` resource supports two custom `OPTIONS` requests, one for the resource as such
    and one for individual user instances. The `OPTIONS` request allows checking for the set of
    available operations that the currently authenticated user can perform on the /user resource.
    If the user can perform an operation or not may depend on various things, including the user's
    authorizations to interact with this resource and the internal configuration of the process
    engine.
    externalDocs: null
    operationId: availableOperations
    parameters: null
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ResourceOptionsDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: GET `/user/aUserId`
                        description: null
                        value: {"links":[{"method":"GET","href":"http://localhost:8080/camunda/api/engine/engine/default/user/peter/profile","rel":"self"},{"method":"DELETE","href":"http://localhost:8080/camunda/api/engine/engine/default/user/peter","rel":"delete"},{"method":"PUT","href":"http://localhost:8080/camunda/api/engine/engine/default/user/peter/profile","rel":"update"}]}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] [deprecated] inheritance without use of 'discriminator.propertyName' has been deprecated in the 5.x release. Composed schema name: null. Title: null
[INFO] [deprecated] inheritance without use of 'discriminator.propertyName' has been deprecated in the 5.x release. Composed schema name: null. Title: null
[INFO] processOperation: resourcePath=  /user/count	;get class Operation {
    tags: [User]
    summary: Get List Count
    description: Queries for the number of deployments that fulfill given parameters. Takes the same parameters as the
    [Get Users](https://docs.camunda.org/manual/7.14/reference/rest/user/get-query/) method.
    externalDocs: null
    operationId: getUserCount
    parameters: [class QueryParameter {
        class Parameter {
            name: id
            in: null
            description: Filter by user id
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: idIn
            in: null
            description: Filter by a comma-separated list of user ids.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: firstName
            in: null
            description: Filter by the first name of the user. Exact match.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: firstNameLike
            in: null
            description: Filter by the first name that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: lastName
            in: null
            description: Filter by the last name of the user. Exact match.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: lastNameLike
            in: null
            description: Filter by the last name that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: email
            in: null
            description: Filter by the email of the user. Exact match.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: emailLike
            in: null
            description: Filter by the email that the parameter is a substring of.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: memberOfGroup
            in: null
            description: Filter for users which are members of the given group.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: memberOfTenant
            in: null
            description: Filter for users which are members of the given tenant.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: potentialStarter
            in: null
            description: Only select Users that are potential starter for the given process definition.
            required: false
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/CountResultDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: GET `/user/count?firstName=John`
                        description: null
                        value: {"count":2}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: Returned if some of the query parameters are invalid, for example, if an invalid operator for variable
            comparison is used. See the [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /user/create	;post class Operation {
    tags: [User]
    summary: Create
    description: Create a new user.
    externalDocs: null
    operationId: createUser
    parameters: null
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/UserDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: POST /user/create
                    description: null
                    value: {"profile":{"id":"jonny1","firstName":"John","lastName":"Doe","email":"anEmailAddress"},"credentials":{"password":"s3cret"}}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /user/{id}	;delete class Operation {
    tags: [User]
    summary: Delete
    description: Deletes a user by id.
    externalDocs: null
    operationId: deleteUser
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the user to be deleted.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 403=class ApiResponse {
            description: Identity service is read-only (Cannot modify users / groups / memberships).
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: null
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: A Deployment with the provided id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /user/{id}	;options class Operation {
    tags: [User]
    summary: Options
    description: The `/user` resource supports two custom `OPTIONS` requests, one for the resource as such
    and one for individual user instances. The `OPTIONS` request allows checking for the set of
    available operations that the currently authenticated user can perform on the /user resource.
    If the user can perform an operation or not may depend on various things, including the user's
    authorizations to interact with this resource and the internal configuration of the process
    engine.
    externalDocs: null
    operationId: availableUserOperations
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the user to be deleted.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ResourceOptionsDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: GET `/user`
                        description: null
                        value: {"links":[{"method":"GET","href":"http://localhost:8080/camunda/api/engine/engine/default/user/peter/profile","rel":"self"},{"method":"DELETE","href":"http://localhost:8080/camunda/api/engine/engine/default/user/peter","rel":"delete"},{"method":"PUT","href":"http://localhost:8080/camunda/api/engine/engine/default/user/peter/profile","rel":"update"}]}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] [deprecated] inheritance without use of 'discriminator.propertyName' has been deprecated in the 5.x release. Composed schema name: null. Title: null
[INFO] [deprecated] inheritance without use of 'discriminator.propertyName' has been deprecated in the 5.x release. Composed schema name: null. Title: null
[INFO] processOperation: resourcePath=  /user/{id}/credentials	;put class Operation {
    tags: [User]
    summary: Update Credentials
    description: Updates a user's credentials (password)
    externalDocs: null
    operationId: updateCredentials
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the user to be updated.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }, class QueryParameter {
        class Parameter {
            name: password
            in: null
            description: The users new password.
            required: true
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }, class QueryParameter {
        class Parameter {
            name: authenticatedUserPassword
            in: null
            description: The password of the authenticated user who changes the password of the user
            (i.e., the user with passed id as path parameter).
            required: true
            deprecated: null
            allowEmptyValue: null
            style: form
            explode: true
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: query
    }]
    requestBody: class RequestBody {
        description: null
        content: class Content {
            {application/json=class MediaType {
                schema: class Schema {
                    type: null
                    format: null
                    $ref: #/components/schemas/UserCredentialsDto
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                examples: {example-1=class Example {
                    summary: PUT /user/jonny1/credentials
                    description: null
                    value: {"password":"s3cr3t","authenticatedUserPassword":"demo"}
                    externalValue: null
                    $ref: null
                }}
                example: null
                encoding: null
            }}
        }
        required: null
    }
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: null
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 403=class ApiResponse {
            description: Identity service is read-only (Cannot modify users / groups / memberships).
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: null
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 400=class ApiResponse {
            description: The authenticated user password does not match
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: null
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: If the corresponding user cannot be found
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: null
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 500=class ApiResponse {
            description: The user could not be updated due to an internal server error. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[WARNING] Ignoring complex example on request body
[INFO] processOperation: resourcePath=  /user/{id}/profile	;get class Operation {
    tags: [User]
    summary: Get Profile
    description: Retrieves a user's profile.
    externalDocs: null
    operationId: getUserProfile
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the user to retrieve.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class ArraySchema {
                        class Schema {
                            type: array
                            format: null
                            $ref: null
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        items: class Schema {
                            type: null
                            format: null
                            $ref: #/components/schemas/UserProfileDto
                            description: null
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            not: null
                            properties: null
                            additionalProperties: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: {example-1=class Example {
                        summary: GET `/user/jonny1/profile
                        description: null
                        value: [{"id":"jonny1","firstName":"John","lastName":"Doe","email":"anEmailAddress"}]
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: Execution with given id does not exist. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /user/{id}/unlock	;post class Operation {
    tags: [User]
    summary: Unlock User
    description: Unlocks a user by id.
    externalDocs: null
    operationId: unlockUser
    parameters: [class PathParameter {
        class Parameter {
            name: id
            in: null
            description: The id of the user to be unlocked.
            required: null
            deprecated: null
            allowEmptyValue: null
            style: simple
            explode: false
            allowReserved: null
            schema: class StringSchema {
                class Schema {
                    type: string
                    format: null
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
            }
            examples: null
            example: null
            content: null
            $ref: null
        }
        in: path
        required: true
    }]
    requestBody: null
    responses: class ApiResponses {
        {204=class ApiResponse {
            description: Request successful.
            headers: null
            content: null
            links: null
            extensions: null
            $ref: null
        }, 403=class ApiResponse {
            description: The user who performed the operation is not a Camunda admin user.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: null
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }, 404=class ApiResponse {
            description: User cannot be found. See the
            [Introduction](https://docs.camunda.org/manual/7.14/reference/rest/overview/#error-handling)
            for the error response format.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/ExceptionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] processOperation: resourcePath=  /version	;get class Operation {
    tags: [Version]
    summary: null
    description: Retrieves the version of the Rest API.
    externalDocs: null
    operationId: getRestAPIVersion
    parameters: null
    requestBody: null
    responses: class ApiResponses {
        {200=class ApiResponse {
            description: Request successful.
            headers: null
            content: class Content {
                {application/json=class MediaType {
                    schema: class Schema {
                        type: null
                        format: null
                        $ref: #/components/schemas/VersionDto
                        description: null
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        not: null
                        properties: null
                        additionalProperties: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: {example-1=class Example {
                        summary: Status 200 Response
                        description: The Response content of a status 200
                        value: {"version":"7.13.0"}
                        externalValue: null
                        $ref: null
                    }}
                    example: null
                    encoding: null
                }}
            }
            links: null
            extensions: null
            $ref: null
        }}
        extensions: null
    }
    callbacks: null
    deprecated: null
    security: null
    servers: null
}

[INFO] writing file E:\DQGitHub\dq-common-java\bpm\common-bpm.camunda\target\openapi\src\gen\java\org\camunda\api\AuthorizationApi.java
[INFO] writing file E:\DQGitHub\dq-common-java\bpm\common-bpm.camunda\target\openapi\src\gen\java\org\camunda\api\ConditionApi.java
[INFO] writing file E:\DQGitHub\dq-common-java\bpm\common-bpm.camunda\target\openapi\src\gen\java\org\camunda\api\DeploymentApi.java
[INFO] writing file E:\DQGitHub\dq-common-java\bpm\common-bpm.camunda\target\openapi\src\gen\java\org\camunda\api\EngineApi.java
[INFO] writing file E:\DQGitHub\dq-common-java\bpm\common-bpm.camunda\target\openapi\src\gen\java\org\camunda\api\EventSubscriptionApi.java
[INFO] writing file E:\DQGitHub\dq-common-java\bpm\common-bpm.camunda\target\openapi\src\gen\java\org\camunda\api\ExternalTaskApi.java
[INFO] writing file E:\DQGitHub\dq-common-java\bpm\common-bpm.camunda\target\openapi\src\gen\java\org\camunda\api\GroupApi.java
[INFO] writing file E:\DQGitHub\dq-common-java\bpm\common-bpm.camunda\target\openapi\src\gen\java\org\camunda\api\HistoryApi.java
[INFO] writing file E:\DQGitHub\dq-common-java\bpm\common-bpm.camunda\target\openapi\src\gen\java\org\camunda\api\IncidentApi.java
[INFO] writing file E:\DQGitHub\dq-common-java\bpm\common-bpm.camunda\target\openapi\src\gen\java\org\camunda\api\MessageApi.java
[INFO] writing file E:\DQGitHub\dq-common-java\bpm\common-bpm.camunda\target\openapi\src\gen\java\org\camunda\api\MetricsApi.java
[INFO] writing file E:\DQGitHub\dq-common-java\bpm\common-bpm.camunda\target\openapi\src\gen\java\org\camunda\api\ProcessDefinitionApi.java
[INFO] writing file E:\DQGitHub\dq-common-java\bpm\common-bpm.camunda\target\openapi\src\gen\java\org\camunda\api\ProcessInstanceApi.java
[INFO] writing file E:\DQGitHub\dq-common-java\bpm\common-bpm.camunda\target\openapi\src\gen\java\org\camunda\api\SchemaApi.java
[INFO] writing file E:\DQGitHub\dq-common-java\bpm\common-bpm.camunda\target\openapi\src\gen\java\org\camunda\api\SignalApi.java
[INFO] writing file E:\DQGitHub\dq-common-java\bpm\common-bpm.camunda\target\openapi\src\gen\java\org\camunda\api\TaskApi.java
[INFO] writing file E:\DQGitHub\dq-common-java\bpm\common-bpm.camunda\target\openapi\src\gen\java\org\camunda\api\TelemetryApi.java
[INFO] writing file E:\DQGitHub\dq-common-java\bpm\common-bpm.camunda\target\openapi\src\gen\java\org\camunda\api\UserApi.java
[INFO] writing file E:\DQGitHub\dq-common-java\bpm\common-bpm.camunda\target\openapi\src\gen\java\org\camunda\api\VersionApi.java
[INFO] ############ Operation info ############
